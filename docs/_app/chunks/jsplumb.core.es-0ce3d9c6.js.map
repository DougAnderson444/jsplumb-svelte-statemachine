{"version":3,"file":"jsplumb.core.es-0ce3d9c6.js","sources":["../../../../../node_modules/@jsplumb/common/js/jsplumb.common.es.js","../../../../../node_modules/@jsplumb/core/js/jsplumb.core.es.js"],"sourcesContent":["var PerimeterAnchorShapes;\n(function (PerimeterAnchorShapes) {\n  PerimeterAnchorShapes[\"Circle\"] = \"Circle\";\n  PerimeterAnchorShapes[\"Ellipse\"] = \"Ellipse\";\n  PerimeterAnchorShapes[\"Triangle\"] = \"Triangle\";\n  PerimeterAnchorShapes[\"Diamond\"] = \"Diamond\";\n  PerimeterAnchorShapes[\"Rectangle\"] = \"Rectangle\";\n  PerimeterAnchorShapes[\"Square\"] = \"Square\";\n})(PerimeterAnchorShapes || (PerimeterAnchorShapes = {}));\nvar AnchorLocations;\n(function (AnchorLocations) {\n  AnchorLocations[\"Assign\"] = \"Assign\";\n  AnchorLocations[\"AutoDefault\"] = \"AutoDefault\";\n  AnchorLocations[\"Bottom\"] = \"Bottom\";\n  AnchorLocations[\"BottomLeft\"] = \"BottomLeft\";\n  AnchorLocations[\"BottomRight\"] = \"BottomRight\";\n  AnchorLocations[\"Center\"] = \"Center\";\n  AnchorLocations[\"Continuous\"] = \"Continuous\";\n  AnchorLocations[\"ContinuousBottom\"] = \"ContinuousBottom\";\n  AnchorLocations[\"ContinuousLeft\"] = \"ContinuousLeft\";\n  AnchorLocations[\"ContinuousRight\"] = \"ContinuousRight\";\n  AnchorLocations[\"ContinuousTop\"] = \"ContinuousTop\";\n  AnchorLocations[\"ContinuousLeftRight\"] = \"ContinuousLeftRight\";\n  AnchorLocations[\"ContinuousTopBottom\"] = \"ContinuousTopBottom\";\n  AnchorLocations[\"Left\"] = \"Left\";\n  AnchorLocations[\"Perimeter\"] = \"Perimeter\";\n  AnchorLocations[\"Right\"] = \"Right\";\n  AnchorLocations[\"Top\"] = \"Top\";\n  AnchorLocations[\"TopLeft\"] = \"TopLeft\";\n  AnchorLocations[\"TopRight\"] = \"TopRight\";\n})(AnchorLocations || (AnchorLocations = {}));\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction noSuchPoint() {\n  return {\n    d: Infinity,\n    x: null,\n    y: null,\n    l: null,\n    x1: null,\n    y1: null,\n    x2: null,\n    y2: null\n  };\n}\nfunction EMPTY_BOUNDS() {\n  return {\n    xmin: Infinity,\n    xmax: -Infinity,\n    ymin: Infinity,\n    ymax: -Infinity\n  };\n}\nvar AbstractSegment = function () {\n  function AbstractSegment(params) {\n    _classCallCheck(this, AbstractSegment);\n    this.params = params;\n    _defineProperty(this, \"x1\", void 0);\n    _defineProperty(this, \"x2\", void 0);\n    _defineProperty(this, \"y1\", void 0);\n    _defineProperty(this, \"y2\", void 0);\n    _defineProperty(this, \"extents\", EMPTY_BOUNDS());\n    _defineProperty(this, \"type\", void 0);\n    this.x1 = params.x1;\n    this.y1 = params.y1;\n    this.x2 = params.x2;\n    this.y2 = params.y2;\n  }\n  _createClass(AbstractSegment, [{\n    key: \"findClosestPointOnPath\",\n    value: function findClosestPointOnPath(x, y) {\n      return noSuchPoint();\n    }\n  }, {\n    key: \"lineIntersection\",\n    value: function lineIntersection(x1, y1, x2, y2) {\n      return [];\n    }\n  }, {\n    key: \"boxIntersection\",\n    value: function boxIntersection(x, y, w, h) {\n      var a = [];\n      a.push.apply(a, this.lineIntersection(x, y, x + w, y));\n      a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\n      a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\n      a.push.apply(a, this.lineIntersection(x, y + h, x, y));\n      return a;\n    }\n  }, {\n    key: \"boundingBoxIntersection\",\n    value: function boundingBoxIntersection(box) {\n      return this.boxIntersection(box.x, box.y, box.w, box.h);\n    }\n  }]);\n  return AbstractSegment;\n}();\n\nvar UNDEFINED = \"undefined\";\nvar DEFAULT = \"default\";\nvar TRUE = \"true\";\nvar FALSE = \"false\";\nvar WILDCARD = \"*\";\n\nexport { AbstractSegment, AnchorLocations, DEFAULT, EMPTY_BOUNDS, FALSE, PerimeterAnchorShapes, TRUE, UNDEFINED, WILDCARD };\n","import { log, quadrant, gradient, pointOnLine, lineLength, uuid, isString, EventGenerator, isFunction, clone, extend, merge, setToArray, populate, isNumber, map, isObject, isAssignableFrom, getWithFunction, removeWithFunction, suggest, forEach, getsert, insertSorted, findWithFunction, rotatePoint, filterList, functionChain, addToDictionary, TWO_PI, theta, normal, perpendicularLineTo } from '@jsplumb/util';\nimport { EMPTY_BOUNDS, AbstractSegment, PerimeterAnchorShapes, AnchorLocations, DEFAULT, WILDCARD } from '@jsplumb/common';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar endpointMap = {};\nvar endpointComputers = {};\nvar handlers = {};\nvar EndpointFactory = {\n  get: function get(ep, name, params) {\n    var e = endpointMap[name];\n    if (!e) {\n      throw {\n        message: \"jsPlumb: unknown endpoint type '\" + name + \"'\"\n      };\n    } else {\n      return new e(ep, params);\n    }\n  },\n  clone: function clone(epr) {\n    var handler = handlers[epr.type];\n    return EndpointFactory.get(epr.endpoint, epr.type, handler.getParams(epr));\n  },\n  compute: function compute(endpoint, anchorPoint, orientation, endpointStyle) {\n    var c = endpointComputers[endpoint.type];\n    if (c != null) {\n      return c(endpoint, anchorPoint, orientation, endpointStyle);\n    } else {\n      log(\"jsPlumb: cannot find endpoint calculator for endpoint of type \", endpoint.type);\n    }\n  },\n  registerHandler: function registerHandler(eph) {\n    handlers[eph.type] = eph;\n    endpointMap[eph.type] = eph.cls;\n    endpointComputers[eph.type] = eph.compute;\n  }\n};\n\nvar EndpointRepresentation = function () {\n  function EndpointRepresentation(endpoint, params) {\n    _classCallCheck(this, EndpointRepresentation);\n    this.endpoint = endpoint;\n    _defineProperty(this, \"typeId\", void 0);\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"w\", void 0);\n    _defineProperty(this, \"h\", void 0);\n    _defineProperty(this, \"computedValue\", void 0);\n    _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\n    _defineProperty(this, \"classes\", []);\n    _defineProperty(this, \"instance\", void 0);\n    _defineProperty(this, \"type\", void 0);\n    params = params || {};\n    this.instance = endpoint.instance;\n    if (endpoint.cssClass) {\n      this.classes.push(endpoint.cssClass);\n    }\n    if (params.cssClass) {\n      this.classes.push(params.cssClass);\n    }\n  }\n  _createClass(EndpointRepresentation, [{\n    key: \"addClass\",\n    value: function addClass(c) {\n      this.classes.push(c);\n      this.instance.addEndpointClass(this.endpoint, c);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(c) {\n      this.classes = this.classes.filter(function (_c) {\n        return _c !== c;\n      });\n      this.instance.removeEndpointClass(this.endpoint, c);\n    }\n  }, {\n    key: \"compute\",\n    value: function compute(anchorPoint, orientation, endpointStyle) {\n      this.computedValue = EndpointFactory.compute(this, anchorPoint, orientation, endpointStyle);\n      this.bounds.xmin = this.x;\n      this.bounds.ymin = this.y;\n      this.bounds.xmax = this.x + this.w;\n      this.bounds.ymax = this.y + this.h;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v) {\n      this.instance.setEndpointVisible(this.endpoint, v);\n    }\n  }]);\n  return EndpointRepresentation;\n}();\n\nvar DotEndpoint = function (_EndpointRepresentati) {\n  _inherits(DotEndpoint, _EndpointRepresentati);\n  var _super = _createSuper(DotEndpoint);\n  function DotEndpoint(endpoint, params) {\n    var _this;\n    _classCallCheck(this, DotEndpoint);\n    _this = _super.call(this, endpoint, params);\n    _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"defaultOffset\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"defaultInnerRadius\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", DotEndpoint.type);\n    params = params || {};\n    _this.radius = params.radius || 5;\n    _this.defaultOffset = 0.5 * _this.radius;\n    _this.defaultInnerRadius = _this.radius / 3;\n    return _this;\n  }\n  return DotEndpoint;\n}(EndpointRepresentation);\n_defineProperty(DotEndpoint, \"type\", \"Dot\");\nvar DotEndpointHandler = {\n  type: DotEndpoint.type,\n  cls: DotEndpoint,\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n    var x = anchorPoint.curX - ep.radius,\n        y = anchorPoint.curY - ep.radius,\n        w = ep.radius * 2,\n        h = ep.radius * 2;\n    if (endpointStyle && endpointStyle.stroke) {\n      var lw = endpointStyle.strokeWidth || 1;\n      x -= lw;\n      y -= lw;\n      w += lw * 2;\n      h += lw * 2;\n    }\n    ep.x = x;\n    ep.y = y;\n    ep.w = w;\n    ep.h = h;\n    return [x, y, w, h, ep.radius];\n  },\n  getParams: function getParams(ep) {\n    return {\n      radius: ep.radius\n    };\n  }\n};\n\nvar BlankEndpoint = function (_EndpointRepresentati) {\n  _inherits(BlankEndpoint, _EndpointRepresentati);\n  var _super = _createSuper(BlankEndpoint);\n  function BlankEndpoint(endpoint, params) {\n    var _this;\n    _classCallCheck(this, BlankEndpoint);\n    _this = _super.call(this, endpoint, params);\n    _defineProperty(_assertThisInitialized(_this), \"type\", BlankEndpoint.type);\n    return _this;\n  }\n  return BlankEndpoint;\n}(EndpointRepresentation);\n_defineProperty(BlankEndpoint, \"type\", \"Blank\");\nvar BlankEndpointHandler = {\n  type: BlankEndpoint.type,\n  cls: BlankEndpoint,\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n    ep.x = anchorPoint.curX;\n    ep.y = anchorPoint.curY;\n    ep.w = 10;\n    ep.h = 0;\n    return [anchorPoint.curX, anchorPoint.curY, 10, 0];\n  },\n  getParams: function getParams(ep) {\n    return {};\n  }\n};\n\nvar RectangleEndpoint = function (_EndpointRepresentati) {\n  _inherits(RectangleEndpoint, _EndpointRepresentati);\n  var _super = _createSuper(RectangleEndpoint);\n  function RectangleEndpoint(endpoint, params) {\n    var _this;\n    _classCallCheck(this, RectangleEndpoint);\n    _this = _super.call(this, endpoint, params);\n    _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"height\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", RectangleEndpoint.type);\n    params = params || {};\n    _this.width = params.width || 10;\n    _this.height = params.height || 10;\n    return _this;\n  }\n  _createClass(RectangleEndpoint, null, [{\n    key: \"_getParams\",\n    value: function _getParams(ep) {\n      return {\n        width: ep.width,\n        height: ep.height\n      };\n    }\n  }]);\n  return RectangleEndpoint;\n}(EndpointRepresentation);\n_defineProperty(RectangleEndpoint, \"type\", \"Rectangle\");\nvar RectangleEndpointHandler = {\n  type: RectangleEndpoint.type,\n  cls: RectangleEndpoint,\n  compute: function compute(ep, anchorPoint, orientation, endpointStyle) {\n    var width = endpointStyle.width || ep.width,\n        height = endpointStyle.height || ep.height,\n        x = anchorPoint.curX - width / 2,\n        y = anchorPoint.curY - height / 2;\n    ep.x = x;\n    ep.y = y;\n    ep.w = width;\n    ep.h = height;\n    return [x, y, width, height];\n  },\n  getParams: function getParams(ep) {\n    return {\n      width: ep.width,\n      height: ep.height\n    };\n  }\n};\n\nvar AbstractConnector = function () {\n  function AbstractConnector(connection, params) {\n    _classCallCheck(this, AbstractConnector);\n    this.connection = connection;\n    _defineProperty(this, \"type\", void 0);\n    _defineProperty(this, \"edited\", false);\n    _defineProperty(this, \"stub\", void 0);\n    _defineProperty(this, \"sourceStub\", void 0);\n    _defineProperty(this, \"targetStub\", void 0);\n    _defineProperty(this, \"maxStub\", void 0);\n    _defineProperty(this, \"typeId\", void 0);\n    _defineProperty(this, \"gap\", void 0);\n    _defineProperty(this, \"sourceGap\", void 0);\n    _defineProperty(this, \"targetGap\", void 0);\n    _defineProperty(this, \"segments\", []);\n    _defineProperty(this, \"totalLength\", 0);\n    _defineProperty(this, \"segmentProportions\", []);\n    _defineProperty(this, \"segmentProportionalLengths\", []);\n    _defineProperty(this, \"paintInfo\", null);\n    _defineProperty(this, \"strokeWidth\", void 0);\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"w\", void 0);\n    _defineProperty(this, \"h\", void 0);\n    _defineProperty(this, \"segment\", void 0);\n    _defineProperty(this, \"bounds\", EMPTY_BOUNDS());\n    _defineProperty(this, \"cssClass\", void 0);\n    _defineProperty(this, \"hoverClass\", void 0);\n    _defineProperty(this, \"geometry\", void 0);\n    this.stub = params.stub || this.getDefaultStubs();\n    this.sourceStub = Array.isArray(this.stub) ? this.stub[0] : this.stub;\n    this.targetStub = Array.isArray(this.stub) ? this.stub[1] : this.stub;\n    this.gap = params.gap || 0;\n    this.sourceGap = Array.isArray(this.gap) ? this.gap[0] : this.gap;\n    this.targetGap = Array.isArray(this.gap) ? this.gap[1] : this.gap;\n    this.maxStub = Math.max(this.sourceStub, this.targetStub);\n    this.cssClass = params.cssClass || \"\";\n    this.hoverClass = params.hoverClass || \"\";\n  }\n  _createClass(AbstractConnector, [{\n    key: \"getTypeDescriptor\",\n    value: function getTypeDescriptor() {\n      return \"connector\";\n    }\n  }, {\n    key: \"getIdPrefix\",\n    value: function getIdPrefix() {\n      return \"_jsplumb_connector\";\n    }\n  }, {\n    key: \"setGeometry\",\n    value: function setGeometry(g, internal) {\n      this.geometry = g;\n      this.edited = g != null && !internal;\n    }\n  }, {\n    key: \"exportGeometry\",\n    value: function exportGeometry() {\n      return this.geometry;\n    }\n  }, {\n    key: \"importGeometry\",\n    value: function importGeometry(g) {\n      this.geometry = g;\n      return true;\n    }\n  }, {\n    key: \"resetGeometry\",\n    value: function resetGeometry() {\n      this.geometry = null;\n      this.edited = false;\n    }\n  }, {\n    key: \"transformAnchorPlacement\",\n    value:\n    function transformAnchorPlacement(a, dx, dy) {\n      return {\n        x: a.x,\n        y: a.y,\n        ox: a.ox,\n        oy: a.oy,\n        curX: a.curX + dx,\n        curY: a.curY + dy\n      };\n    }\n  }, {\n    key: \"resetBounds\",\n    value: function resetBounds() {\n      this.bounds = EMPTY_BOUNDS();\n    }\n  }, {\n    key: \"findSegmentForPoint\",\n    value: function findSegmentForPoint(x, y) {\n      var out = {\n        d: Infinity,\n        s: null,\n        x: null,\n        y: null,\n        l: null,\n        x1: null,\n        y1: null,\n        x2: null,\n        y2: null,\n        index: null,\n        connectorLocation: null\n      };\n      for (var i = 0; i < this.segments.length; i++) {\n        var _s = this.segments[i].findClosestPointOnPath(x, y);\n        if (_s.d < out.d) {\n          out.d = _s.d;\n          out.l = _s.l;\n          out.x = _s.x;\n          out.y = _s.y;\n          out.s = this.segments[i];\n          out.x1 = _s.x1;\n          out.x2 = _s.x2;\n          out.y1 = _s.y1;\n          out.y2 = _s.y2;\n          out.index = i;\n          out.connectorLocation = this.segmentProportions[i][0] + _s.l * (this.segmentProportions[i][1] - this.segmentProportions[i][0]);\n        }\n      }\n      return out;\n    }\n  }, {\n    key: \"lineIntersection\",\n    value: function lineIntersection(x1, y1, x2, y2) {\n      var out = [];\n      for (var i = 0; i < this.segments.length; i++) {\n        out.push.apply(out, this.segments[i].lineIntersection(x1, y1, x2, y2));\n      }\n      return out;\n    }\n  }, {\n    key: \"boxIntersection\",\n    value: function boxIntersection(x, y, w, h) {\n      var out = [];\n      for (var i = 0; i < this.segments.length; i++) {\n        out.push.apply(out, this.segments[i].boxIntersection(x, y, w, h));\n      }\n      return out;\n    }\n  }, {\n    key: \"boundingBoxIntersection\",\n    value: function boundingBoxIntersection(box) {\n      var out = [];\n      for (var i = 0; i < this.segments.length; i++) {\n        out.push.apply(out, this.segments[i].boundingBoxIntersection(box));\n      }\n      return out;\n    }\n  }, {\n    key: \"_updateSegmentProportions\",\n    value: function _updateSegmentProportions() {\n      var curLoc = 0;\n      for (var i = 0; i < this.segments.length; i++) {\n        var sl = this.segments[i].getLength();\n        this.segmentProportionalLengths[i] = sl / this.totalLength;\n        this.segmentProportions[i] = [curLoc, curLoc += sl / this.totalLength];\n      }\n    }\n  }, {\n    key: \"_findSegmentForLocation\",\n    value: function _findSegmentForLocation(location, absolute) {\n      var idx, i, inSegmentProportion;\n      if (absolute) {\n        location = location > 0 ? location / this.totalLength : (this.totalLength + location) / this.totalLength;\n      }\n      if (location === 1) {\n        idx = this.segments.length - 1;\n        inSegmentProportion = 1;\n      } else if (location === 0) {\n        inSegmentProportion = 0;\n        idx = 0;\n      } else {\n        if (location >= 0.5) {\n          idx = 0;\n          inSegmentProportion = 0;\n          for (i = this.segmentProportions.length - 1; i > -1; i--) {\n            if (this.segmentProportions[i][1] >= location && this.segmentProportions[i][0] <= location) {\n              idx = i;\n              inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\n              break;\n            }\n          }\n        } else {\n          idx = this.segmentProportions.length - 1;\n          inSegmentProportion = 1;\n          for (i = 0; i < this.segmentProportions.length; i++) {\n            if (this.segmentProportions[i][1] >= location) {\n              idx = i;\n              inSegmentProportion = (location - this.segmentProportions[i][0]) / this.segmentProportionalLengths[i];\n              break;\n            }\n          }\n        }\n      }\n      return {\n        segment: this.segments[idx],\n        proportion: inSegmentProportion,\n        index: idx\n      };\n    }\n  }, {\n    key: \"_addSegment\",\n    value: function _addSegment(clazz, params) {\n      if (params.x1 === params.x2 && params.y1 === params.y2) {\n        return;\n      }\n      var s = new clazz(params);\n      this.segments.push(s);\n      this.totalLength += s.getLength();\n      this.updateBounds(s);\n    }\n  }, {\n    key: \"_clearSegments\",\n    value: function _clearSegments() {\n      this.totalLength = 0;\n      this.segments.length = 0;\n      this.segmentProportions.length = 0;\n      this.segmentProportionalLengths.length = 0;\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.totalLength;\n    }\n  }, {\n    key: \"_prepareCompute\",\n    value: function _prepareCompute(params) {\n      this.strokeWidth = params.strokeWidth;\n      var x1 = params.sourcePos.curX,\n          x2 = params.targetPos.curX,\n          y1 = params.sourcePos.curY,\n          y2 = params.targetPos.curY,\n          segment = quadrant({\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }),\n          swapX = x2 < x1,\n          swapY = y2 < y1,\n          so = [params.sourcePos.ox, params.sourcePos.oy],\n          to = [params.targetPos.ox, params.targetPos.oy],\n          x = swapX ? x2 : x1,\n          y = swapY ? y2 : y1,\n          w = Math.abs(x2 - x1),\n          h = Math.abs(y2 - y1);\n      var noSourceOrientation = so[0] === 0 && so[1] === 0;\n      var noTargetOrientation = to[0] === 0 && to[1] === 0;\n      if (noSourceOrientation || noTargetOrientation) {\n        var index = w > h ? 0 : 1,\n            oIndex = [1, 0][index],\n            v1 = index === 0 ? x1 : y1,\n            v2 = index === 0 ? x2 : y2;\n        if (noSourceOrientation) {\n          so[index] = v1 > v2 ? -1 : 1;\n          so[oIndex] = 0;\n        }\n        if (noTargetOrientation) {\n          to[index] = v1 > v2 ? 1 : -1;\n          to[oIndex] = 0;\n        }\n      }\n      var sx = swapX ? w + this.sourceGap * so[0] : this.sourceGap * so[0],\n          sy = swapY ? h + this.sourceGap * so[1] : this.sourceGap * so[1],\n          tx = swapX ? this.targetGap * to[0] : w + this.targetGap * to[0],\n          ty = swapY ? this.targetGap * to[1] : h + this.targetGap * to[1],\n          oProduct = so[0] * to[0] + so[1] * to[1];\n      var result = {\n        sx: sx,\n        sy: sy,\n        tx: tx,\n        ty: ty,\n        xSpan: Math.abs(tx - sx),\n        ySpan: Math.abs(ty - sy),\n        mx: (sx + tx) / 2,\n        my: (sy + ty) / 2,\n        so: so,\n        to: to,\n        x: x,\n        y: y,\n        w: w,\n        h: h,\n        segment: segment,\n        startStubX: sx + so[0] * this.sourceStub,\n        startStubY: sy + so[1] * this.sourceStub,\n        endStubX: tx + to[0] * this.targetStub,\n        endStubY: ty + to[1] * this.targetStub,\n        isXGreaterThanStubTimes2: Math.abs(sx - tx) > this.sourceStub + this.targetStub,\n        isYGreaterThanStubTimes2: Math.abs(sy - ty) > this.sourceStub + this.targetStub,\n        opposite: oProduct === -1,\n        perpendicular: oProduct === 0,\n        orthogonal: oProduct === 1,\n        sourceAxis: so[0] === 0 ? \"y\" : \"x\",\n        points: [x, y, w, h, sx, sy, tx, ty],\n        stubs: [this.sourceStub, this.targetStub]\n      };\n      result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\n      return result;\n    }\n  }, {\n    key: \"updateBounds\",\n    value: function updateBounds(segment) {\n      var segBounds = segment.extents;\n      this.bounds.xmin = Math.min(this.bounds.xmin, segBounds.xmin);\n      this.bounds.xmax = Math.max(this.bounds.xmax, segBounds.xmax);\n      this.bounds.ymin = Math.min(this.bounds.ymin, segBounds.ymin);\n      this.bounds.ymax = Math.max(this.bounds.ymax, segBounds.ymax);\n    }\n  }, {\n    key: \"dumpSegmentsToConsole\",\n    value: function dumpSegmentsToConsole() {\n      log(\"SEGMENTS:\");\n      for (var i = 0; i < this.segments.length; i++) {\n        log(this.segments[i].type, \"\" + this.segments[i].getLength(), \"\" + this.segmentProportions[i]);\n      }\n    }\n  }, {\n    key: \"pointOnPath\",\n    value: function pointOnPath(location, absolute) {\n      var seg = this._findSegmentForLocation(location, absolute);\n      return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || {\n        x: 0,\n        y: 0\n      };\n    }\n  }, {\n    key: \"gradientAtPoint\",\n    value: function gradientAtPoint(location, absolute) {\n      var seg = this._findSegmentForLocation(location, absolute);\n      return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\n    }\n  }, {\n    key: \"pointAlongPathFrom\",\n    value: function pointAlongPathFrom(location, distance, absolute) {\n      var seg = this._findSegmentForLocation(location, absolute);\n      return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || {\n        x: 0,\n        y: 0\n      };\n    }\n  }, {\n    key: \"compute\",\n    value: function compute(params) {\n      this.paintInfo = this._prepareCompute(params);\n      this._clearSegments();\n      this._compute(this.paintInfo, params);\n      this.x = this.paintInfo.points[0];\n      this.y = this.paintInfo.points[1];\n      this.w = this.paintInfo.points[2];\n      this.h = this.paintInfo.points[3];\n      this.segment = this.paintInfo.segment;\n      this._updateSegmentProportions();\n    }\n  }, {\n    key: \"setAnchorOrientation\",\n    value: function setAnchorOrientation(idx, orientation) {}\n  }]);\n  return AbstractConnector;\n}();\n\nvar StraightSegment = function (_AbstractSegment) {\n  _inherits(StraightSegment, _AbstractSegment);\n  var _super = _createSuper(StraightSegment);\n  function StraightSegment(params) {\n    var _this;\n    _classCallCheck(this, StraightSegment);\n    _this = _super.call(this, params);\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"m\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"m2\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", StraightSegment.segmentType);\n    _this._setCoordinates({\n      x1: params.x1,\n      y1: params.y1,\n      x2: params.x2,\n      y2: params.y2\n    });\n    return _this;\n  }\n  _createClass(StraightSegment, [{\n    key: \"getPath\",\n    value: function getPath(isFirstSegment) {\n      return (isFirstSegment ? \"M \" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"L \" + this.x2 + \" \" + this.y2;\n    }\n  }, {\n    key: \"_recalc\",\n    value: function _recalc() {\n      this.length = Math.sqrt(Math.pow(this.x2 - this.x1, 2) + Math.pow(this.y2 - this.y1, 2));\n      this.m = gradient({\n        x: this.x1,\n        y: this.y1\n      }, {\n        x: this.x2,\n        y: this.y2\n      });\n      this.m2 = -1 / this.m;\n      this.extents = {\n        xmin: Math.min(this.x1, this.x2),\n        ymin: Math.min(this.y1, this.y2),\n        xmax: Math.max(this.x1, this.x2),\n        ymax: Math.max(this.y1, this.y2)\n      };\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.length;\n    }\n  }, {\n    key: \"getGradient\",\n    value: function getGradient() {\n      return this.m;\n    }\n  }, {\n    key: \"_setCoordinates\",\n    value: function _setCoordinates(coords) {\n      this.x1 = coords.x1;\n      this.y1 = coords.y1;\n      this.x2 = coords.x2;\n      this.y2 = coords.y2;\n      this._recalc();\n    }\n  }, {\n    key: \"pointOnPath\",\n    value: function pointOnPath(location, absolute) {\n      if (location === 0 && !absolute) {\n        return {\n          x: this.x1,\n          y: this.y1\n        };\n      } else if (location === 1 && !absolute) {\n        return {\n          x: this.x2,\n          y: this.y2\n        };\n      } else {\n        var l = absolute ? location > 0 ? location : this.length + location : location * this.length;\n        return pointOnLine({\n          x: this.x1,\n          y: this.y1\n        }, {\n          x: this.x2,\n          y: this.y2\n        }, l);\n      }\n    }\n  }, {\n    key: \"gradientAtPoint\",\n    value: function gradientAtPoint(location, absolute) {\n      return this.m;\n    }\n  }, {\n    key: \"pointAlongPathFrom\",\n    value: function pointAlongPathFrom(location, distance, absolute) {\n      var p = this.pointOnPath(location, absolute),\n          farAwayPoint = distance <= 0 ? {\n        x: this.x1,\n        y: this.y1\n      } : {\n        x: this.x2,\n        y: this.y2\n      };\n      if (distance <= 0 && Math.abs(distance) > 1) {\n        distance *= -1;\n      }\n      return pointOnLine(p, farAwayPoint, distance);\n    }\n  }, {\n    key: \"within\",\n    value: function within(a, b, c) {\n      return c >= Math.min(a, b) && c <= Math.max(a, b);\n    }\n  }, {\n    key: \"closest\",\n    value: function closest(a, b, c) {\n      return Math.abs(c - a) < Math.abs(c - b) ? a : b;\n    }\n  }, {\n    key: \"findClosestPointOnPath\",\n    value: function findClosestPointOnPath(x, y) {\n      var out = {\n        d: Infinity,\n        x: null,\n        y: null,\n        l: null,\n        x1: this.x1,\n        x2: this.x2,\n        y1: this.y1,\n        y2: this.y2\n      };\n      if (this.m === 0) {\n        out.y = this.y1;\n        out.x = this.within(this.x1, this.x2, x) ? x : this.closest(this.x1, this.x2, x);\n      } else if (this.m === Infinity || this.m === -Infinity) {\n        out.x = this.x1;\n        out.y = this.within(this.y1, this.y2, y) ? y : this.closest(this.y1, this.y2, y);\n      } else {\n        var b = this.y1 - this.m * this.x1,\n            b2 = y - this.m2 * x,\n        _x1 = (b2 - b) / (this.m - this.m2),\n            _y1 = this.m * _x1 + b;\n        out.x = this.within(this.x1, this.x2, _x1) ? _x1 : this.closest(this.x1, this.x2, _x1);\n        out.y = this.within(this.y1, this.y2, _y1) ? _y1 : this.closest(this.y1, this.y2, _y1);\n      }\n      var fractionInSegment = lineLength({\n        x: out.x,\n        y: out.y\n      }, {\n        x: this.x1,\n        y: this.y1\n      });\n      out.d = lineLength({\n        x: x,\n        y: y\n      }, out);\n      out.l = fractionInSegment / length;\n      return out;\n    }\n  }, {\n    key: \"_pointLiesBetween\",\n    value: function _pointLiesBetween(q, p1, p2) {\n      return p2 > p1 ? p1 <= q && q <= p2 : p1 >= q && q >= p2;\n    }\n  }, {\n    key: \"lineIntersection\",\n    value: function lineIntersection(_x1, _y1, _x2, _y2) {\n      var m2 = Math.abs(gradient({\n        x: _x1,\n        y: _y1\n      }, {\n        x: _x2,\n        y: _y2\n      })),\n          m1 = Math.abs(this.m),\n          b = m1 === Infinity ? this.x1 : this.y1 - m1 * this.x1,\n          out = [],\n          b2 = m2 === Infinity ? _x1 : _y1 - m2 * _x1;\n      if (m2 !== m1) {\n        if (m2 === Infinity && m1 === 0) {\n          if (this._pointLiesBetween(_x1, this.x1, this.x2) && this._pointLiesBetween(this.y1, _y1, _y2)) {\n            out.push({\n              x: _x1,\n              y: this.y1\n            });\n          }\n        } else if (m2 === 0 && m1 === Infinity) {\n          if (this._pointLiesBetween(_y1, this.y1, this.y2) && this._pointLiesBetween(this.x1, _x1, _x2)) {\n            out.push({\n              x: this.x1,\n              y: _y1\n            });\n          }\n        } else {\n          var X, Y;\n          if (m2 === Infinity) {\n            X = _x1;\n            if (this._pointLiesBetween(X, this.x1, this.x2)) {\n              Y = m1 * _x1 + b;\n              if (this._pointLiesBetween(Y, _y1, _y2)) {\n                out.push({\n                  x: X,\n                  y: Y\n                });\n              }\n            }\n          } else if (m2 === 0) {\n            Y = _y1;\n            if (this._pointLiesBetween(Y, this.y1, this.y2)) {\n              X = (_y1 - b) / m1;\n              if (this._pointLiesBetween(X, _x1, _x2)) {\n                out.push({\n                  x: X,\n                  y: Y\n                });\n              }\n            }\n          } else {\n            X = (b2 - b) / (m1 - m2);\n            Y = m1 * X + b;\n            if (this._pointLiesBetween(X, this.x1, this.x2) && this._pointLiesBetween(Y, this.y1, this.y2)) {\n              out.push({\n                x: X,\n                y: Y\n              });\n            }\n          }\n        }\n      }\n      return out;\n    }\n  }, {\n    key: \"boxIntersection\",\n    value: function boxIntersection(x, y, w, h) {\n      var a = [];\n      a.push.apply(a, this.lineIntersection(x, y, x + w, y));\n      a.push.apply(a, this.lineIntersection(x + w, y, x + w, y + h));\n      a.push.apply(a, this.lineIntersection(x + w, y + h, x, y + h));\n      a.push.apply(a, this.lineIntersection(x, y + h, x, y));\n      return a;\n    }\n  }]);\n  return StraightSegment;\n}(AbstractSegment);\n_defineProperty(StraightSegment, \"segmentType\", \"Straight\");\n\nvar StraightConnector = function (_AbstractConnector) {\n  _inherits(StraightConnector, _AbstractConnector);\n  var _super = _createSuper(StraightConnector);\n  function StraightConnector() {\n    var _this;\n    _classCallCheck(this, StraightConnector);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"type\", StraightConnector.type);\n    return _this;\n  }\n  _createClass(StraightConnector, [{\n    key: \"getDefaultStubs\",\n    value: function getDefaultStubs() {\n      return [0, 0];\n    }\n  }, {\n    key: \"_compute\",\n    value: function _compute(paintInfo, p) {\n      this._addSegment(StraightSegment, {\n        x1: paintInfo.sx,\n        y1: paintInfo.sy,\n        x2: paintInfo.startStubX,\n        y2: paintInfo.startStubY\n      });\n      this._addSegment(StraightSegment, {\n        x1: paintInfo.startStubX,\n        y1: paintInfo.startStubY,\n        x2: paintInfo.endStubX,\n        y2: paintInfo.endStubY\n      });\n      this._addSegment(StraightSegment, {\n        x1: paintInfo.endStubX,\n        y1: paintInfo.endStubY,\n        x2: paintInfo.tx,\n        y2: paintInfo.ty\n      });\n      this.geometry = {\n        source: p.sourcePos,\n        target: p.targetPos\n      };\n    }\n  }, {\n    key: \"transformGeometry\",\n    value: function transformGeometry(g, dx, dy) {\n      return {\n        source: this.transformAnchorPlacement(g.source, dx, dy),\n        target: this.transformAnchorPlacement(g.target, dx, dy)\n      };\n    }\n  }]);\n  return StraightConnector;\n}(AbstractConnector);\n_defineProperty(StraightConnector, \"type\", \"Straight\");\n\nvar connectorMap = {};\nvar Connectors = {\n  get: function get(connection, name, params) {\n    var c = connectorMap[name];\n    if (!c) {\n      throw {\n        message: \"jsPlumb: unknown connector type '\" + name + \"'\"\n      };\n    } else {\n      return new c(connection, params);\n    }\n  },\n  register: function register(name, conn) {\n    connectorMap[name] = conn;\n  }\n};\n\nfunction cls() {\n  for (var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++) {\n    className[_key] = arguments[_key];\n  }\n  return className.map(function (cn) {\n    return \".\" + cn;\n  }).join(\",\");\n}\nfunction classList() {\n  for (var _len2 = arguments.length, className = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    className[_key2] = arguments[_key2];\n  }\n  return className.join(\" \");\n}\nfunction att() {\n  for (var _len3 = arguments.length, attName = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    attName[_key3] = arguments[_key3];\n  }\n  return attName.map(function (an) {\n    return \"[\" + an + \"]\";\n  }).join(\",\");\n}\nvar SOURCE = \"source\";\nvar TARGET = \"target\";\nvar BLOCK = \"block\";\nvar NONE = \"none\";\nvar SOURCE_INDEX = 0;\nvar TARGET_INDEX = 1;\nvar ABSOLUTE = \"absolute\";\nvar FIXED = \"fixed\";\nvar STATIC = \"static\";\nvar ATTRIBUTE_GROUP = \"data-jtk-group\";\nvar ATTRIBUTE_MANAGED = \"data-jtk-managed\";\nvar ATTRIBUTE_NOT_DRAGGABLE = \"data-jtk-not-draggable\";\nvar ATTRIBUTE_TABINDEX = \"tabindex\";\nvar ATTRIBUTE_SCOPE = \"data-jtk-scope\";\nvar ATTRIBUTE_SCOPE_PREFIX = ATTRIBUTE_SCOPE + \"-\";\nvar CHECK_CONDITION = \"checkCondition\";\nvar CHECK_DROP_ALLOWED = \"checkDropAllowed\";\nvar CLASS_CONNECTOR = \"jtk-connector\";\nvar CLASS_CONNECTOR_OUTLINE = \"jtk-connector-outline\";\nvar CLASS_CONNECTED = \"jtk-connected\";\nvar CLASS_ENDPOINT = \"jtk-endpoint\";\nvar CLASS_ENDPOINT_CONNECTED = \"jtk-endpoint-connected\";\nvar CLASS_ENDPOINT_FULL = \"jtk-endpoint-full\";\nvar CLASS_ENDPOINT_DROP_ALLOWED = \"jtk-endpoint-drop-allowed\";\nvar CLASS_ENDPOINT_DROP_FORBIDDEN = \"jtk-endpoint-drop-forbidden\";\nvar CLASS_ENDPOINT_ANCHOR_PREFIX = \"jtk-endpoint-anchor\";\nvar CLASS_GROUP_COLLAPSED = \"jtk-group-collapsed\";\nvar CLASS_GROUP_EXPANDED = \"jtk-group-expanded\";\nvar CLASS_OVERLAY = \"jtk-overlay\";\nvar EVENT_ANCHOR_CHANGED = \"anchor:changed\";\nvar EVENT_CONNECTION = \"connection\";\nvar EVENT_INTERNAL_CONNECTION = \"internal.connection\";\nvar EVENT_CONNECTION_DETACHED = \"connection:detach\";\nvar EVENT_CONNECTION_MOVED = \"connection:move\";\nvar EVENT_CONTAINER_CHANGE = \"container:change\";\nvar EVENT_ENDPOINT_REPLACED = \"endpoint:replaced\";\nvar EVENT_INTERNAL_ENDPOINT_UNREGISTERED = \"internal.endpoint:unregistered\";\nvar EVENT_INTERNAL_CONNECTION_DETACHED = \"internal.connection:detached\";\nvar EVENT_MANAGE_ELEMENT = \"element:manage\";\nvar EVENT_GROUP_ADDED = \"group:added\";\nvar EVENT_GROUP_COLLAPSE = \"group:collapse\";\nvar EVENT_GROUP_EXPAND = \"group:expand\";\nvar EVENT_GROUP_MEMBER_ADDED = \"group:member:added\";\nvar EVENT_GROUP_MEMBER_REMOVED = \"group:member:removed\";\nvar EVENT_GROUP_REMOVED = \"group:removed\";\nvar EVENT_MAX_CONNECTIONS = \"maxConnections\";\nvar EVENT_NESTED_GROUP_ADDED = \"group:nested:added\";\nvar EVENT_NESTED_GROUP_REMOVED = \"group:nested:removed\";\nvar EVENT_UNMANAGE_ELEMENT = \"element:unmanage\";\nvar EVENT_ZOOM = \"zoom\";\nvar IS_DETACH_ALLOWED = \"isDetachAllowed\";\nvar INTERCEPT_BEFORE_DRAG = \"beforeDrag\";\nvar INTERCEPT_BEFORE_DROP = \"beforeDrop\";\nvar INTERCEPT_BEFORE_DETACH = \"beforeDetach\";\nvar INTERCEPT_BEFORE_START_DETACH = \"beforeStartDetach\";\nvar SELECTOR_MANAGED_ELEMENT = att(ATTRIBUTE_MANAGED);\nvar ERROR_SOURCE_ENDPOINT_FULL = \"Cannot establish connection: source endpoint is full\";\nvar ERROR_TARGET_ENDPOINT_FULL = \"Cannot establish connection: target endpoint is full\";\nvar ERROR_SOURCE_DOES_NOT_EXIST = \"Cannot establish connection: source does not exist\";\nvar ERROR_TARGET_DOES_NOT_EXIST = \"Cannot establish connection: target does not exist\";\nvar KEY_CONNECTION_OVERLAYS = \"connectionOverlays\";\n\nfunction isFullOverlaySpec(o) {\n  return o.type != null && o.options != null;\n}\nfunction convertToFullOverlaySpec(spec) {\n  var o = null;\n  if (isString(spec)) {\n    o = {\n      type: spec,\n      options: {}\n    };\n  } else {\n    o = spec;\n  }\n  o.options.id = o.options.id || uuid();\n  return o;\n}\nvar Overlay = function (_EventGenerator) {\n  _inherits(Overlay, _EventGenerator);\n  var _super = _createSuper(Overlay);\n  function Overlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, Overlay);\n    _this = _super.call(this);\n    _this.instance = instance;\n    _this.component = component;\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"visible\", true);\n    _defineProperty(_assertThisInitialized(_this), \"location\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"attributes\", void 0);\n    p = p || {};\n    _this.id = p.id || uuid();\n    _this.cssClass = p.cssClass || \"\";\n    _this.location = p.location || 0.5;\n    _this.events = p.events || {};\n    _this.attributes = p.attributes || {};\n    for (var _event in _this.events) {\n      _this.bind(_event, _this.events[_event]);\n    }\n    return _this;\n  }\n  _createClass(Overlay, [{\n    key: \"shouldFireEvent\",\n    value: function shouldFireEvent(event, value, originalEvent) {\n      return true;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v) {\n      this.visible = v;\n      this.instance.setOverlayVisible(this, v);\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.visible;\n    }\n  }]);\n  return Overlay;\n}(EventGenerator);\n\nvar overlayMap = {};\nvar OverlayFactory = {\n  get: function get(instance, name, component, params) {\n    var c = overlayMap[name];\n    if (!c) {\n      throw {\n        message: \"jsPlumb: unknown overlay type '\" + name + \"'\"\n      };\n    } else {\n      return new c(instance, component, params);\n    }\n  },\n  register: function register(name, overlay) {\n    overlayMap[name] = overlay;\n  }\n};\n\nvar LabelOverlay = function (_Overlay) {\n  _inherits(LabelOverlay, _Overlay);\n  var _super = _createSuper(LabelOverlay);\n  function LabelOverlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, LabelOverlay);\n    _this = _super.call(this, instance, component, p);\n    _this.instance = instance;\n    _this.component = component;\n    _defineProperty(_assertThisInitialized(_this), \"label\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"labelText\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", LabelOverlay.type);\n    _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\n    p = p || {\n      label: \"\"\n    };\n    _this.setLabel(p.label);\n    return _this;\n  }\n  _createClass(LabelOverlay, [{\n    key: \"getLabel\",\n    value: function getLabel() {\n      if (isFunction(this.label)) {\n        return this.label(this);\n      } else {\n        return this.labelText;\n      }\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(l) {\n      this.label = l;\n      this.labelText = null;\n      this.instance.updateLabel(this);\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      return {\n        w: 1,\n        h: 1\n      };\n    }\n  }, {\n    key: \"updateFrom\",\n    value: function updateFrom(d) {\n      if (d.label != null) {\n        this.setLabel(d.label);\n      }\n    }\n  }]);\n  return LabelOverlay;\n}(Overlay);\n_defineProperty(LabelOverlay, \"type\", \"Label\");\nfunction isLabelOverlay(o) {\n  return o.type === LabelOverlay.type;\n}\nOverlayFactory.register(\"Label\", LabelOverlay);\n\nfunction _splitType(t) {\n  return t == null ? null : t.split(\" \");\n}\nfunction _mapType(map, obj, typeId) {\n  for (var i in obj) {\n    map[i] = typeId;\n  }\n}\nvar CONNECTOR = \"connector\";\nvar MERGE_STRATEGY_OVERRIDE = \"override\";\nvar CSS_CLASS = \"cssClass\";\nvar DEFAULT_TYPE_KEY = \"__default\";\nvar ANCHOR = \"anchor\";\nvar ANCHORS = \"anchors\";\nvar _internalLabelOverlayId = \"__label\";\nvar TYPE_ITEM_OVERLAY = \"overlay\";\nvar LOCATION_ATTRIBUTE = \"labelLocation\";\nvar ACTION_ADD = \"add\";\nvar ACTION_REMOVE = \"remove\";\nfunction _applyTypes(component, params) {\n  if (component.getDefaultType) {\n    var td = component.getTypeDescriptor(),\n        map = {};\n    var defType = component.getDefaultType();\n    var o = extend({}, defType);\n    _mapType(map, defType, DEFAULT_TYPE_KEY);\n    for (var i = 0, j = component._types.length; i < j; i++) {\n      var tid = component._types[i];\n      if (tid !== DEFAULT_TYPE_KEY) {\n        var _t = component.instance.getType(tid, td);\n        if (_t != null) {\n          var overrides = new Set([CONNECTOR, ANCHOR, ANCHORS]);\n          if (_t.mergeStrategy === MERGE_STRATEGY_OVERRIDE) {\n            for (var k in _t) {\n              overrides.add(k);\n            }\n          }\n          o = merge(o, _t, [CSS_CLASS], setToArray(overrides));\n          _mapType(map, _t, tid);\n        }\n      }\n    }\n    if (params) {\n      o = populate(o, params, \"_\");\n    }\n    component.applyType(o, map);\n  }\n}\nfunction _removeTypeCssHelper(component, typeIndex) {\n  var typeId = component._types[typeIndex],\n      type = component.instance.getType(typeId, component.getTypeDescriptor());\n  if (type != null && type.cssClass) {\n    component.removeClass(type.cssClass);\n  }\n}\nfunction _updateHoverStyle(component) {\n  if (component.paintStyle && component.hoverPaintStyle) {\n    var mergedHoverStyle = {};\n    extend(mergedHoverStyle, component.paintStyle);\n    extend(mergedHoverStyle, component.hoverPaintStyle);\n    component.hoverPaintStyle = mergedHoverStyle;\n  }\n}\nfunction _makeLabelOverlay(component, params) {\n  var _params = {\n    cssClass: params.cssClass,\n    id: _internalLabelOverlayId,\n    component: component\n  },\n      mergedParams = extend(_params, params);\n  return new LabelOverlay(component.instance, component, mergedParams);\n}\nfunction _processOverlay(component, o) {\n  var _newOverlay = null;\n  if (isString(o)) {\n    _newOverlay = OverlayFactory.get(component.instance, o, component, {});\n  } else if (o.type != null && o.options != null) {\n    var oa = o;\n    var p = extend({}, oa.options);\n    _newOverlay = OverlayFactory.get(component.instance, oa.type, component, p);\n  } else {\n    _newOverlay = o;\n  }\n  _newOverlay.id = _newOverlay.id || uuid();\n  component.cacheTypeItem(TYPE_ITEM_OVERLAY, _newOverlay, _newOverlay.id);\n  component.overlays[_newOverlay.id] = _newOverlay;\n  return _newOverlay;\n}\nvar Component = function (_EventGenerator) {\n  _inherits(Component, _EventGenerator);\n  var _super = _createSuper(Component);\n  function Component(instance, params) {\n    var _this;\n    _classCallCheck(this, Component);\n    _this = _super.call(this);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\n    _defineProperty(_assertThisInitialized(_this), \"overlays\", {});\n    _defineProperty(_assertThisInitialized(_this), \"overlayPositions\", {});\n    _defineProperty(_assertThisInitialized(_this), \"overlayPlacements\", {});\n    _defineProperty(_assertThisInitialized(_this), \"clone\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"deleted\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"segment\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"x\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"y\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"w\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"h\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"visible\", true);\n    _defineProperty(_assertThisInitialized(_this), \"typeId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"params\", {});\n    _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"hoverPaintStyle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"paintStyleInUse\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_hover\", false);\n    _defineProperty(_assertThisInitialized(_this), \"lastPaintedAt\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"data\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_defaultType\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"events\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"parameters\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_types\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_typeCache\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cssClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"hoverClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"beforeDetach\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"beforeDrop\", void 0);\n    params = params || {};\n    _this.cssClass = params.cssClass || \"\";\n    _this.hoverClass = params.hoverClass || instance.defaults.hoverClass;\n    _this.beforeDetach = params.beforeDetach;\n    _this.beforeDrop = params.beforeDrop;\n    _this._types = [];\n    _this._typeCache = {};\n    _this.parameters = clone(params.parameters || {});\n    _this.id = params.id || _this.getIdPrefix() + new Date().getTime();\n    _this._defaultType = {\n      parameters: _this.parameters,\n      scope: params.scope || _this.instance.defaultScope,\n      overlays: {}\n    };\n    if (params.events) {\n      for (var evtName in params.events) {\n        _this.bind(evtName, params.events[evtName]);\n      }\n    }\n    _this.clone = function () {\n      var o = Object.create(_this.constructor.prototype);\n      _this.constructor.apply(o, [instance, params]);\n      return o;\n    };\n    _this.overlays = {};\n    _this.overlayPositions = {};\n    var o = params.overlays || [],\n        oo = {};\n    var defaultOverlayKey = _this.getDefaultOverlayKey();\n    if (defaultOverlayKey) {\n      var defaultOverlays = _this.instance.defaults[defaultOverlayKey];\n      if (defaultOverlays) {\n        o.push.apply(o, _toConsumableArray(defaultOverlays));\n      }\n      for (var i = 0; i < o.length; i++) {\n        var fo = convertToFullOverlaySpec(o[i]);\n        oo[fo.options.id] = fo;\n      }\n    }\n    _this._defaultType.overlays = oo;\n    if (params.label) {\n      _this.getDefaultType().overlays[_internalLabelOverlayId] = {\n        type: LabelOverlay.type,\n        options: {\n          label: params.label,\n          location: params.labelLocation || _this.defaultLabelLocation,\n          id: _internalLabelOverlayId\n        }\n      };\n    }\n    return _this;\n  }\n  _createClass(Component, [{\n    key: \"isDetachAllowed\",\n    value: function isDetachAllowed(connection) {\n      var r = true;\n      if (this.beforeDetach) {\n        try {\n          r = this.beforeDetach(connection);\n        } catch (e) {\n          log(\"jsPlumb: beforeDetach callback failed\", e);\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"isDropAllowed\",\n    value: function isDropAllowed(sourceId, targetId, scope, connection, dropEndpoint) {\n      var r;\n      var payload = {\n        sourceId: sourceId,\n        targetId: targetId,\n        scope: scope,\n        connection: connection,\n        dropEndpoint: dropEndpoint\n      };\n      if (this.beforeDrop) {\n        try {\n          r = this.beforeDrop(payload);\n        } catch (e) {\n          log(\"jsPlumb: beforeDrop callback failed\", e);\n        }\n      } else {\n        r = this.instance.checkCondition(INTERCEPT_BEFORE_DROP, payload);\n      }\n      return r;\n    }\n  }, {\n    key: \"getDefaultType\",\n    value: function getDefaultType() {\n      return this._defaultType;\n    }\n  }, {\n    key: \"appendToDefaultType\",\n    value: function appendToDefaultType(obj) {\n      for (var i in obj) {\n        this._defaultType[i] = obj[i];\n      }\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.id;\n    }\n  }, {\n    key: \"cacheTypeItem\",\n    value: function cacheTypeItem(key, item, typeId) {\n      this._typeCache[typeId] = this._typeCache[typeId] || {};\n      this._typeCache[typeId][key] = item;\n    }\n  }, {\n    key: \"getCachedTypeItem\",\n    value: function getCachedTypeItem(key, typeId) {\n      return this._typeCache[typeId] ? this._typeCache[typeId][key] : null;\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(typeId, params) {\n      this.clearTypes();\n      this._types = _splitType(typeId) || [];\n      _applyTypes(this, params);\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return this._types;\n    }\n  }, {\n    key: \"reapplyTypes\",\n    value: function reapplyTypes(params) {\n      _applyTypes(this, params);\n    }\n  }, {\n    key: \"hasType\",\n    value: function hasType(typeId) {\n      return this._types.indexOf(typeId) !== -1;\n    }\n  }, {\n    key: \"addType\",\n    value: function addType(typeId, params) {\n      var t = _splitType(typeId),\n          _somethingAdded = false;\n      if (t != null) {\n        for (var i = 0, j = t.length; i < j; i++) {\n          if (!this.hasType(t[i])) {\n            this._types.push(t[i]);\n            _somethingAdded = true;\n          }\n        }\n        if (_somethingAdded) {\n          _applyTypes(this, params);\n        }\n      }\n    }\n  }, {\n    key: \"removeType\",\n    value: function removeType(typeId, params) {\n      var _this2 = this;\n      var t = _splitType(typeId),\n          _cont = false,\n          _one = function _one(tt) {\n        var idx = _this2._types.indexOf(tt);\n        if (idx !== -1) {\n          _removeTypeCssHelper(_this2, idx);\n          _this2._types.splice(idx, 1);\n          return true;\n        }\n        return false;\n      };\n      if (t != null) {\n        for (var i = 0, j = t.length; i < j; i++) {\n          _cont = _one(t[i]) || _cont;\n        }\n        if (_cont) {\n          _applyTypes(this, params);\n        }\n      }\n    }\n  }, {\n    key: \"clearTypes\",\n    value: function clearTypes(params, doNotRepaint) {\n      var i = this._types.length;\n      for (var j = 0; j < i; j++) {\n        _removeTypeCssHelper(this, 0);\n        this._types.splice(0, 1);\n      }\n      _applyTypes(this, params);\n    }\n  }, {\n    key: \"toggleType\",\n    value: function toggleType(typeId, params) {\n      var t = _splitType(typeId);\n      if (t != null) {\n        for (var i = 0, j = t.length; i < j; i++) {\n          var idx = this._types.indexOf(t[i]);\n          if (idx !== -1) {\n            _removeTypeCssHelper(this, idx);\n            this._types.splice(idx, 1);\n          } else {\n            this._types.push(t[i]);\n          }\n        }\n        _applyTypes(this, params);\n      }\n    }\n  }, {\n    key: \"applyType\",\n    value: function applyType(t, params) {\n      this.setPaintStyle(t.paintStyle);\n      this.setHoverPaintStyle(t.hoverPaintStyle);\n      this.mergeParameters(t.parameters);\n      this.paintStyleInUse = this.getPaintStyle();\n      if (t.overlays) {\n        var keep = {},\n            i;\n        for (i in t.overlays) {\n          var existing = this.overlays[t.overlays[i].options.id];\n          if (existing) {\n            existing.updateFrom(t.overlays[i].options);\n            keep[t.overlays[i].options.id] = true;\n            this.instance.reattachOverlay(existing, this);\n          } else {\n            var _c = this.getCachedTypeItem(\"overlay\", t.overlays[i].options.id);\n            if (_c != null) {\n              this.instance.reattachOverlay(_c, this);\n              _c.setVisible(true);\n              _c.updateFrom(t.overlays[i].options);\n              this.overlays[_c.id] = _c;\n            } else {\n              _c = this.addOverlay(t.overlays[i]);\n            }\n            keep[_c.id] = true;\n          }\n        }\n        for (i in this.overlays) {\n          if (keep[this.overlays[i].id] == null) {\n            this.removeOverlay(this.overlays[i].id, true);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setPaintStyle\",\n    value: function setPaintStyle(style) {\n      this.paintStyle = style;\n      this.paintStyleInUse = this.paintStyle;\n      _updateHoverStyle(this);\n    }\n  }, {\n    key: \"getPaintStyle\",\n    value: function getPaintStyle() {\n      return this.paintStyle;\n    }\n  }, {\n    key: \"setHoverPaintStyle\",\n    value: function setHoverPaintStyle(style) {\n      this.hoverPaintStyle = style;\n      _updateHoverStyle(this);\n    }\n  }, {\n    key: \"getHoverPaintStyle\",\n    value: function getHoverPaintStyle() {\n      return this.hoverPaintStyle;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      for (var i in this.overlays) {\n        this.instance.destroyOverlay(this.overlays[i]);\n      }\n      this.overlays = {};\n      this.overlayPositions = {};\n      this.unbind();\n      this.clone = null;\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover() {\n      return this._hover;\n    }\n  }, {\n    key: \"mergeParameters\",\n    value: function mergeParameters(p) {\n      if (p != null) {\n        extend(this.parameters, p);\n      }\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v) {\n      this.visible = v;\n      if (v) {\n        this.showOverlays();\n      } else {\n        this.hideOverlays();\n      }\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.visible;\n    }\n  }, {\n    key: \"setAbsoluteOverlayPosition\",\n    value: function setAbsoluteOverlayPosition(overlay, xy) {\n      this.overlayPositions[overlay.id] = xy;\n    }\n  }, {\n    key: \"getAbsoluteOverlayPosition\",\n    value: function getAbsoluteOverlayPosition(overlay) {\n      return this.overlayPositions ? this.overlayPositions[overlay.id] : null;\n    }\n  }, {\n    key: \"_clazzManip\",\n    value: function _clazzManip(action, clazz) {\n      for (var i in this.overlays) {\n        if (action === ACTION_ADD) {\n          this.instance.addOverlayClass(this.overlays[i], clazz);\n        } else if (action === ACTION_REMOVE) {\n          this.instance.removeOverlayClass(this.overlays[i], clazz);\n        }\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(clazz, cascade) {\n      var parts = (this.cssClass || \"\").split(\" \");\n      parts.push(clazz);\n      this.cssClass = parts.join(\" \");\n      this._clazzManip(ACTION_ADD, clazz);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(clazz, cascade) {\n      var parts = (this.cssClass || \"\").split(\" \");\n      this.cssClass = parts.filter(function (p) {\n        return p !== clazz;\n      }).join(\" \");\n      this._clazzManip(ACTION_REMOVE, clazz);\n    }\n  }, {\n    key: \"getClass\",\n    value: function getClass() {\n      return this.cssClass;\n    }\n  }, {\n    key: \"shouldFireEvent\",\n    value: function shouldFireEvent(event, value, originalEvent) {\n      return true;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(d) {\n      this.data = d || {};\n    }\n  }, {\n    key: \"mergeData\",\n    value: function mergeData(d) {\n      this.data = extend(this.data, d);\n    }\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(overlay) {\n      var o = _processOverlay(this, overlay);\n      if (this.getData && o.type === LabelOverlay.type && !isString(overlay)) {\n        var d = this.getData(),\n            p = overlay.options;\n        if (d) {\n          var locationAttribute = p.labelLocationAttribute || LOCATION_ATTRIBUTE;\n          var loc = d[locationAttribute];\n          if (loc) {\n            o.location = loc;\n          }\n        }\n      }\n      return o;\n    }\n  }, {\n    key: \"getOverlay\",\n    value: function getOverlay(id) {\n      return this.overlays[id];\n    }\n  }, {\n    key: \"getOverlays\",\n    value: function getOverlays() {\n      return this.overlays;\n    }\n  }, {\n    key: \"hideOverlay\",\n    value: function hideOverlay(id) {\n      var o = this.getOverlay(id);\n      if (o) {\n        o.setVisible(false);\n      }\n    }\n  }, {\n    key: \"hideOverlays\",\n    value: function hideOverlays() {\n      for (var _len = arguments.length, ids = new Array(_len), _key = 0; _key < _len; _key++) {\n        ids[_key] = arguments[_key];\n      }\n      ids = ids || [];\n      for (var i in this.overlays) {\n        if (ids.length === 0 || ids.indexOf(i) !== -1) {\n          this.overlays[i].setVisible(false);\n        }\n      }\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay(id) {\n      var o = this.getOverlay(id);\n      if (o) {\n        o.setVisible(true);\n      }\n    }\n  }, {\n    key: \"showOverlays\",\n    value: function showOverlays() {\n      for (var _len2 = arguments.length, ids = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        ids[_key2] = arguments[_key2];\n      }\n      ids = ids || [];\n      for (var i in this.overlays) {\n        if (ids.length === 0 || ids.indexOf(i) !== -1) {\n          this.overlays[i].setVisible(true);\n        }\n      }\n    }\n  }, {\n    key: \"removeAllOverlays\",\n    value: function removeAllOverlays() {\n      for (var i in this.overlays) {\n        this.instance.destroyOverlay(this.overlays[i]);\n      }\n      this.overlays = {};\n      this.overlayPositions = null;\n      this.overlayPlacements = {};\n    }\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay(overlayId, dontCleanup) {\n      var o = this.overlays[overlayId];\n      if (o) {\n        o.setVisible(false);\n        if (!dontCleanup) {\n          this.instance.destroyOverlay(o);\n        }\n        delete this.overlays[overlayId];\n        if (this.overlayPositions) {\n          delete this.overlayPositions[overlayId];\n        }\n        if (this.overlayPlacements) {\n          delete this.overlayPlacements[overlayId];\n        }\n      }\n    }\n  }, {\n    key: \"removeOverlays\",\n    value: function removeOverlays() {\n      for (var _len3 = arguments.length, overlays = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        overlays[_key3] = arguments[_key3];\n      }\n      for (var i = 0, j = overlays.length; i < j; i++) {\n        this.removeOverlay(arguments[i]);\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      var lo = this.getLabelOverlay();\n      return lo != null ? lo.getLabel() : null;\n    }\n  }, {\n    key: \"getLabelOverlay\",\n    value: function getLabelOverlay() {\n      return this.getOverlay(_internalLabelOverlayId);\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(l) {\n      var lo = this.getLabelOverlay();\n      if (!lo) {\n        var _params2 = isString(l) || isFunction(l) ? {\n          label: l\n        } : l;\n        lo = _makeLabelOverlay(this, _params2);\n        this.overlays[_internalLabelOverlayId] = lo;\n      } else {\n        if (isString(l) || isFunction(l)) {\n          lo.setLabel(l);\n        } else {\n          var ll = l;\n          if (ll.label) {\n            lo.setLabel(ll.label);\n          }\n          if (ll.location) {\n            lo.location = ll.location;\n          }\n        }\n      }\n    }\n  }]);\n  return Component;\n}(EventGenerator);\n\nvar _opposites, _clockwiseOptions, _antiClockwiseOptions;\nvar FaceValues;\n(function (FaceValues) {\n  FaceValues[\"top\"] = \"top\";\n  FaceValues[\"left\"] = \"left\";\n  FaceValues[\"right\"] = \"right\";\n  FaceValues[\"bottom\"] = \"bottom\";\n})(FaceValues || (FaceValues = {}));\nvar TOP = FaceValues.top;\nvar LEFT = FaceValues.left;\nvar RIGHT = FaceValues.right;\nvar BOTTOM = FaceValues.bottom;\nvar X_AXIS_FACES = [LEFT, RIGHT];\nvar Y_AXIS_FACES = [TOP, BOTTOM];\nvar LightweightFloatingAnchor = function () {\n  function LightweightFloatingAnchor(instance, element) {\n    _classCallCheck(this, LightweightFloatingAnchor);\n    this.instance = instance;\n    this.element = element;\n    _defineProperty(this, \"isFloating\", true);\n    _defineProperty(this, \"isContinuous\", void 0);\n    _defineProperty(this, \"isDynamic\", void 0);\n    _defineProperty(this, \"locations\", []);\n    _defineProperty(this, \"currentLocation\", 0);\n    _defineProperty(this, \"locked\", false);\n    _defineProperty(this, \"cssClass\", '');\n    _defineProperty(this, \"timestamp\", null);\n    _defineProperty(this, \"type\", \"Floating\");\n    _defineProperty(this, \"id\", uuid());\n    _defineProperty(this, \"orientation\", [0, 0]);\n    _defineProperty(this, \"size\", void 0);\n    this.size = instance.getSize(element);\n    this.locations.push({\n      x: 0.5,\n      y: 0.5,\n      ox: this.orientation[0],\n      oy: this.orientation[1],\n      offx: 0,\n      offy: 0,\n      iox: this.orientation[0],\n      ioy: this.orientation[1],\n      cls: ''\n    });\n  }\n  _createClass(LightweightFloatingAnchor, [{\n    key: \"_updateOrientationInRouter\",\n    value: function _updateOrientationInRouter() {\n      this.instance.router.setAnchorOrientation(this, [this.locations[0].ox, this.locations[0].oy]);\n    }\n  }, {\n    key: \"over\",\n    value: function over(endpoint) {\n      this.orientation = this.instance.router.getEndpointOrientation(endpoint);\n      this.locations[0].ox = this.orientation[0];\n      this.locations[0].oy = this.orientation[1];\n      this._updateOrientationInRouter();\n    }\n  }, {\n    key: \"out\",\n    value: function out() {\n      this.orientation = null;\n      this.locations[0].ox = this.locations[0].iox;\n      this.locations[0].oy = this.locations[0].ioy;\n      this._updateOrientationInRouter();\n    }\n  }]);\n  return LightweightFloatingAnchor;\n}();\nvar opposites = (_opposites = {}, _defineProperty(_opposites, TOP, BOTTOM), _defineProperty(_opposites, RIGHT, LEFT), _defineProperty(_opposites, LEFT, RIGHT), _defineProperty(_opposites, BOTTOM, TOP), _opposites);\nvar clockwiseOptions = (_clockwiseOptions = {}, _defineProperty(_clockwiseOptions, TOP, RIGHT), _defineProperty(_clockwiseOptions, RIGHT, BOTTOM), _defineProperty(_clockwiseOptions, LEFT, TOP), _defineProperty(_clockwiseOptions, BOTTOM, LEFT), _clockwiseOptions);\nvar antiClockwiseOptions = (_antiClockwiseOptions = {}, _defineProperty(_antiClockwiseOptions, TOP, LEFT), _defineProperty(_antiClockwiseOptions, RIGHT, TOP), _defineProperty(_antiClockwiseOptions, LEFT, BOTTOM), _defineProperty(_antiClockwiseOptions, BOTTOM, RIGHT), _antiClockwiseOptions);\nfunction getDefaultFace(a) {\n  return a.faces.length === 0 ? TOP : a.faces[0];\n}\nfunction _isFaceAvailable(a, face) {\n  return a.faces.indexOf(face) !== -1;\n}\nfunction _secondBest(a, edge) {\n  return (a.clockwise ? clockwiseOptions : antiClockwiseOptions)[edge];\n}\nfunction _lastChoice(a, edge) {\n  return (a.clockwise ? antiClockwiseOptions : clockwiseOptions)[edge];\n}\nfunction isEdgeSupported(a, edge) {\n  return a.lockedAxis == null ? a.lockedFace == null ? _isFaceAvailable(a, edge) === true : a.lockedFace === edge : a.lockedAxis.indexOf(edge) !== -1;\n}\nfunction verifyFace(a, edge) {\n  if (_isFaceAvailable(a, edge)) {\n    return edge;\n  } else if (_isFaceAvailable(a, opposites[edge])) {\n    return opposites[edge];\n  } else {\n    var secondBest = _secondBest(a, edge);\n    if (_isFaceAvailable(a, secondBest)) {\n      return secondBest;\n    } else {\n      var lastChoice = _lastChoice(a, edge);\n      if (_isFaceAvailable(a, lastChoice)) {\n        return lastChoice;\n      }\n    }\n  }\n  return edge;\n}\nvar _top = {\n  x: 0.5,\n  y: 0,\n  ox: 0,\n  oy: -1,\n  offx: 0,\n  offy: 0\n},\n    _bottom = {\n  x: 0.5,\n  y: 1,\n  ox: 0,\n  oy: 1,\n  offx: 0,\n  offy: 0\n},\n    _left = {\n  x: 0,\n  y: 0.5,\n  ox: -1,\n  oy: 0,\n  offx: 0,\n  offy: 0\n},\n    _right = {\n  x: 1,\n  y: 0.5,\n  ox: 1,\n  oy: 0,\n  offx: 0,\n  offy: 0\n},\n    _topLeft = {\n  x: 0,\n  y: 0,\n  ox: 0,\n  oy: -1,\n  offx: 0,\n  offy: 0\n},\n    _topRight = {\n  x: 1,\n  y: 0,\n  ox: 1,\n  oy: -1,\n  offx: 0,\n  offy: 0\n},\n    _bottomLeft = {\n  x: 0,\n  y: 1,\n  ox: 0,\n  oy: 1,\n  offx: 0,\n  offy: 0\n},\n    _bottomRight = {\n  x: 1,\n  y: 1,\n  ox: 0,\n  oy: 1,\n  offx: 0,\n  offy: 0\n},\n    _center = {\n  x: 0.5,\n  y: 0.5,\n  ox: 0,\n  oy: 0,\n  offx: 0,\n  offy: 0\n};\nvar namedValues = {\n  \"Top\": [_top],\n  \"Bottom\": [_bottom],\n  \"Left\": [_left],\n  \"Right\": [_right],\n  \"TopLeft\": [_topLeft],\n  \"TopRight\": [_topRight],\n  \"BottomLeft\": [_bottomLeft],\n  \"BottomRight\": [_bottomRight],\n  \"Center\": [_center],\n  \"AutoDefault\": [_top, _left, _bottom, _right]\n};\nvar namedContinuousValues = {\n  \"Continuous\": {\n    faces: [TOP, LEFT, BOTTOM, RIGHT]\n  },\n  \"ContinuousTop\": {\n    faces: [TOP]\n  },\n  \"ContinuousRight\": {\n    faces: [RIGHT]\n  },\n  \"ContinuousBottom\": {\n    faces: [BOTTOM]\n  },\n  \"ContinuousLeft\": {\n    faces: [LEFT]\n  },\n  \"ContinuousLeftRight\": {\n    faces: [LEFT, RIGHT]\n  },\n  \"ContinuousTopBottom\": {\n    faces: [TOP, BOTTOM]\n  }\n};\nfunction getNamedAnchor(name, params) {\n  params = params || {};\n  if (name === AnchorLocations.Perimeter) {\n    return _createPerimeterAnchor(params);\n  }\n  var a = namedValues[name];\n  if (a != null) {\n    return _createAnchor(name, map(a, function (_a) {\n      return extend({\n        iox: _a.ox,\n        ioy: _a.oy\n      }, _a);\n    }), params);\n  }\n  a = namedContinuousValues[name];\n  if (a != null) {\n    return _createContinuousAnchor(name, a.faces, params);\n  }\n  throw {\n    message: \"jsPlumb: unknown anchor type '\" + name + \"'\"\n  };\n}\nfunction _createAnchor(type, locations, params) {\n  return {\n    type: type,\n    locations: locations,\n    currentLocation: 0,\n    locked: false,\n    id: uuid(),\n    isFloating: false,\n    isContinuous: false,\n    isDynamic: locations.length > 1,\n    timestamp: null,\n    cssClass: params.cssClass || \"\"\n  };\n}\nfunction createFloatingAnchor(instance, element) {\n  return new LightweightFloatingAnchor(instance, element);\n}\nvar PROPERTY_CURRENT_FACE = \"currentFace\";\nfunction _createContinuousAnchor(type, faces, params) {\n  var ca = {\n    type: type,\n    locations: [],\n    currentLocation: 0,\n    locked: false,\n    id: uuid(),\n    cssClass: params.cssClass || \"\",\n    isFloating: false,\n    isContinuous: true,\n    timestamp: null,\n    faces: params.faces || faces,\n    lockedFace: null,\n    lockedAxis: null,\n    clockwise: !(params.clockwise === false),\n    __currentFace: null\n  };\n  Object.defineProperty(ca, PROPERTY_CURRENT_FACE, {\n    get: function get() {\n      return this.__currentFace;\n    },\n    set: function set(f) {\n      this.__currentFace = verifyFace(this, f);\n    }\n  });\n  return ca;\n}\nfunction isPrimitiveAnchorSpec(sa) {\n  return sa.length < 7 && sa.every(isNumber) || sa.length === 7 && sa.slice(0, 5).every(isNumber) && isString(sa[6]);\n}\nfunction makeLightweightAnchorFromSpec(spec) {\n  if (isString(spec)) {\n    return getNamedAnchor(spec, null);\n  } else if (Array.isArray(spec)) {\n    if (isPrimitiveAnchorSpec(spec)) {\n      var _spec = spec;\n      return _createAnchor(null, [{\n        x: _spec[0],\n        y: _spec[1],\n        ox: _spec[2],\n        oy: _spec[3],\n        offx: _spec[4] == null ? 0 : _spec[4],\n        offy: _spec[5] == null ? 0 : _spec[5],\n        iox: _spec[2],\n        ioy: _spec[3],\n        cls: _spec[6] || \"\"\n      }], {\n        cssClass: _spec[6] || \"\"\n      });\n    } else {\n      var locations = map(spec, function (aSpec) {\n        if (isString(aSpec)) {\n          var a = namedValues[aSpec];\n          return a != null ? extend({\n            iox: a[0].ox,\n            ioy: a[0].oy,\n            cls: \"\"\n          }, a[0]) : null;\n        } else if (isPrimitiveAnchorSpec(aSpec)) {\n          return {\n            x: aSpec[0],\n            y: aSpec[1],\n            ox: aSpec[2],\n            oy: aSpec[3],\n            offx: aSpec[4] == null ? 0 : aSpec[4],\n            offy: aSpec[5] == null ? 0 : aSpec[5],\n            iox: aSpec[2],\n            ioy: aSpec[3],\n            cls: aSpec[6] || \"\"\n          };\n        }\n      }).filter(function (ar) {\n        return ar != null;\n      });\n      return _createAnchor(\"Dynamic\", locations, {});\n    }\n  } else {\n    var sa = spec;\n    return getNamedAnchor(sa.type, sa.options);\n  }\n}\nfunction circleGenerator(anchorCount) {\n  var r = 0.5,\n      step = Math.PI * 2 / anchorCount,\n      a = [];\n  var current = 0;\n  for (var i = 0; i < anchorCount; i++) {\n    var x = r + r * Math.sin(current),\n        y = r + r * Math.cos(current);\n    a.push({\n      x: x,\n      y: y,\n      ox: 0,\n      oy: 0,\n      offx: 0,\n      offy: 0,\n      iox: 0,\n      ioy: 0,\n      cls: ''\n    });\n    current += step;\n  }\n  return a;\n}\nfunction _path(segments, anchorCount) {\n  var anchorsPerFace = anchorCount / segments.length,\n      a = [],\n      _computeFace = function _computeFace(x1, y1, x2, y2, fractionalLength, ox, oy) {\n    anchorsPerFace = anchorCount * fractionalLength;\n    var dx = (x2 - x1) / anchorsPerFace,\n        dy = (y2 - y1) / anchorsPerFace;\n    for (var i = 0; i < anchorsPerFace; i++) {\n      a.push({\n        x: x1 + dx * i,\n        y: y1 + dy * i,\n        ox: ox == null ? 0 : ox,\n        oy: oy == null ? 0 : oy,\n        offx: 0,\n        offy: 0,\n        iox: 0,\n        ioy: 0,\n        cls: ''\n      });\n    }\n  };\n  for (var i = 0; i < segments.length; i++) {\n    _computeFace.apply(null, segments[i]);\n  }\n  return a;\n}\nfunction shapeGenerator(faces, anchorCount) {\n  var s = [];\n  for (var i = 0; i < faces.length; i++) {\n    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length, faces[i][4], faces[i][5]]);\n  }\n  return _path(s, anchorCount);\n}\nfunction rectangleGenerator(anchorCount) {\n  return shapeGenerator([[0, 0, 1, 0, 0, -1], [1, 0, 1, 1, 1, 0], [1, 1, 0, 1, 0, 1], [0, 1, 0, 0, -1, 0]], anchorCount);\n}\nfunction diamondGenerator(anchorCount) {\n  return shapeGenerator([[0.5, 0, 1, 0.5], [1, 0.5, 0.5, 1], [0.5, 1, 0, 0.5], [0, 0.5, 0.5, 0]], anchorCount);\n}\nfunction triangleGenerator(anchorCount) {\n  return shapeGenerator([[0.5, 0, 1, 1], [1, 1, 0, 1], [0, 1, 0.5, 0]], anchorCount);\n}\nfunction rotate$1(points, amountInDegrees) {\n  var o = [],\n      theta = amountInDegrees / 180 * Math.PI;\n  for (var i = 0; i < points.length; i++) {\n    var _x = points[i].x - 0.5,\n        _y = points[i].y - 0.5;\n    o.push({\n      x: 0.5 + (_x * Math.cos(theta) - _y * Math.sin(theta)),\n      y: 0.5 + (_x * Math.sin(theta) + _y * Math.cos(theta)),\n      ox: points[i].ox,\n      oy: points[i].oy,\n      offx: 0,\n      offy: 0,\n      iox: 0,\n      ioy: 0,\n      cls: ''\n    });\n  }\n  return o;\n}\nvar anchorGenerators = new Map();\nanchorGenerators.set(PerimeterAnchorShapes.Circle, circleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Ellipse, circleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Rectangle, rectangleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Square, rectangleGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Diamond, diamondGenerator);\nanchorGenerators.set(PerimeterAnchorShapes.Triangle, triangleGenerator);\nfunction _createPerimeterAnchor(params) {\n  params = params || {};\n  var anchorCount = params.anchorCount || 60,\n      shape = params.shape;\n  if (!shape) {\n    throw new Error(\"no shape supplied to Perimeter Anchor type\");\n  }\n  if (!anchorGenerators.has(shape)) {\n    throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\n  }\n  var da = anchorGenerators.get(shape)(anchorCount);\n  if (params.rotation) {\n    da = rotate$1(da, params.rotation);\n  }\n  var a = _createAnchor(AnchorLocations.Perimeter, da, params);\n  var aa = extend(a, {\n    shape: shape\n  });\n  return aa;\n}\n\nvar TYPE_ITEM_ANCHORS = \"anchors\";\nvar TYPE_ITEM_CONNECTOR = \"connector\";\nfunction prepareEndpoint(conn, existing, index, anchor, element, elementId, endpoint) {\n  var e;\n  if (existing) {\n    conn.endpoints[index] = existing;\n    existing.addConnection(conn);\n  } else {\n    var ep = endpoint || conn.endpointSpec || conn.endpointsSpec[index] || conn.instance.defaults.endpoints[index] || conn.instance.defaults.endpoint;\n    var es = conn.endpointStyles[index] || conn.endpointStyle || conn.instance.defaults.endpointStyles[index] || conn.instance.defaults.endpointStyle;\n    if (es.fill == null && conn.paintStyle != null) {\n      es.fill = conn.paintStyle.stroke;\n    }\n    if (es.outlineStroke == null && conn.paintStyle != null) {\n      es.outlineStroke = conn.paintStyle.outlineStroke;\n    }\n    if (es.outlineWidth == null && conn.paintStyle != null) {\n      es.outlineWidth = conn.paintStyle.outlineWidth;\n    }\n    var ehs = conn.endpointHoverStyles[index] || conn.endpointHoverStyle || conn.endpointHoverStyle || conn.instance.defaults.endpointHoverStyles[index] || conn.instance.defaults.endpointHoverStyle;\n    if (conn.hoverPaintStyle != null) {\n      if (ehs == null) {\n        ehs = {};\n      }\n      if (ehs.fill == null) {\n        ehs.fill = conn.hoverPaintStyle.stroke;\n      }\n    }\n    var u = conn.uuids ? conn.uuids[index] : null;\n    anchor = anchor != null ? anchor : conn.instance.defaults.anchors != null ? conn.instance.defaults.anchors[index] : conn.instance.defaults.anchor;\n    e = conn.instance._internal_newEndpoint({\n      paintStyle: es,\n      hoverPaintStyle: ehs,\n      endpoint: ep,\n      connections: [conn],\n      uuid: u,\n      element: element,\n      scope: conn.scope,\n      anchor: anchor,\n      reattachConnections: conn.reattach || conn.instance.defaults.reattachConnections,\n      connectionsDetachable: conn.detachable || conn.instance.defaults.connectionsDetachable\n    });\n    if (existing == null) {\n      e.deleteOnEmpty = true;\n    }\n    conn.endpoints[index] = e;\n  }\n  return e;\n}\nvar Connection = function (_Component) {\n  _inherits(Connection, _Component);\n  var _super = _createSuper(Connection);\n  function Connection(instance, params) {\n    var _this;\n    _classCallCheck(this, Connection);\n    _this = _super.call(this, instance, params);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", 0.5);\n    _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"typeId\", \"_jsplumb_connection\");\n    _defineProperty(_assertThisInitialized(_this), \"previousConnection\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"sourceId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"targetId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"source\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"target\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"detachable\", true);\n    _defineProperty(_assertThisInitialized(_this), \"reattach\", false);\n    _defineProperty(_assertThisInitialized(_this), \"uuids\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cost\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"directed\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endpoints\", [null, null]);\n    _defineProperty(_assertThisInitialized(_this), \"endpointStyles\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endpointSpec\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endpointsSpec\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endpointStyle\", {});\n    _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyle\", {});\n    _defineProperty(_assertThisInitialized(_this), \"endpointHoverStyles\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"suspendedEndpoint\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"suspendedIndex\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElement\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElementId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"suspendedElementType\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_forceReattach\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_forceDetach\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"proxies\", []);\n    _defineProperty(_assertThisInitialized(_this), \"pending\", false);\n    _this.id = params.id;\n    _this.previousConnection = params.previousConnection;\n    _this.source = params.source;\n    _this.target = params.target;\n    if (params.sourceEndpoint) {\n      _this.source = params.sourceEndpoint.element;\n      _this.sourceId = params.sourceEndpoint.elementId;\n    } else {\n      _this.sourceId = instance.getId(_this.source);\n    }\n    if (params.targetEndpoint) {\n      _this.target = params.targetEndpoint.element;\n      _this.targetId = params.targetEndpoint.elementId;\n    } else {\n      _this.targetId = instance.getId(_this.target);\n    }\n    _this.scope = params.scope;\n    var sourceAnchor = params.anchors ? params.anchors[0] : params.anchor;\n    var targetAnchor = params.anchors ? params.anchors[1] : params.anchor;\n    instance.manage(_this.source);\n    instance.manage(_this.target);\n    _this.visible = true;\n    _this.params = {\n      cssClass: params.cssClass,\n      hoverClass: params.hoverClass,\n      \"pointer-events\": params[\"pointer-events\"],\n      overlays: params.overlays\n    };\n    _this.lastPaintedAt = null;\n    if (params.type) {\n      params.endpoints = params.endpoints || _this.instance._deriveEndpointAndAnchorSpec(params.type).endpoints;\n    }\n    _this.endpointSpec = params.endpoint;\n    _this.endpointsSpec = params.endpoints || [null, null];\n    _this.endpointStyle = params.endpointStyle;\n    _this.endpointHoverStyle = params.endpointHoverStyle;\n    _this.endpointStyles = params.endpointStyles || [null, null];\n    _this.endpointHoverStyles = params.endpointHoverStyles || [null, null];\n    _this.paintStyle = params.paintStyle;\n    _this.hoverPaintStyle = params.hoverPaintStyle;\n    _this.uuids = params.uuids;\n    _this.makeEndpoint(true, _this.source, _this.sourceId, sourceAnchor, params.sourceEndpoint);\n    _this.makeEndpoint(false, _this.target, _this.targetId, targetAnchor, params.targetEndpoint);\n    if (!_this.scope) {\n      _this.scope = _this.endpoints[0].scope;\n    }\n    if (params.deleteEndpointsOnEmpty != null) {\n      _this.endpoints[0].deleteOnEmpty = params.deleteEndpointsOnEmpty;\n      _this.endpoints[1].deleteOnEmpty = params.deleteEndpointsOnEmpty;\n    }\n    var _detachable = _this.instance.defaults.connectionsDetachable;\n    if (params.detachable === false) {\n      _detachable = false;\n    }\n    if (_this.endpoints[0].connectionsDetachable === false) {\n      _detachable = false;\n    }\n    if (_this.endpoints[1].connectionsDetachable === false) {\n      _detachable = false;\n    }\n    _this.endpointsSpec = params.endpoints || [null, null];\n    _this.endpointSpec = params.endpoint || null;\n    var _reattach = params.reattach || _this.endpoints[0].reattachConnections || _this.endpoints[1].reattachConnections || _this.instance.defaults.reattachConnections;\n    _this.appendToDefaultType({\n      detachable: _detachable,\n      reattach: _reattach,\n      paintStyle: _this.endpoints[0].connectorStyle || _this.endpoints[1].connectorStyle || params.paintStyle || _this.instance.defaults.paintStyle,\n      hoverPaintStyle: _this.endpoints[0].connectorHoverStyle || _this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _this.instance.defaults.hoverPaintStyle\n    });\n    if (!_this.instance._suspendDrawing) {\n      var initialTimestamp = _this.instance._suspendedAt || uuid();\n      _this.instance._paintEndpoint(_this.endpoints[0], {\n        timestamp: initialTimestamp\n      });\n      _this.instance._paintEndpoint(_this.endpoints[1], {\n        timestamp: initialTimestamp\n      });\n    }\n    _this.cost = params.cost || _this.endpoints[0].connectionCost;\n    _this.directed = params.directed;\n    if (params.directed == null) {\n      _this.directed = _this.endpoints[0].connectionsDirected;\n    }\n    var _p = extend({}, _this.endpoints[1].parameters);\n    extend(_p, _this.endpoints[0].parameters);\n    extend(_p, _this.parameters);\n    _this.parameters = _p;\n    _this.paintStyleInUse = _this.getPaintStyle() || {};\n    _this.setConnector(_this.endpoints[0].connector || _this.endpoints[1].connector || params.connector || _this.instance.defaults.connector, true);\n    var data = params.data == null || !isObject(params.data) ? {} : params.data;\n    _this.setData(data);\n    var _types = [DEFAULT, _this.endpoints[0].edgeType, _this.endpoints[1].edgeType, params.type].join(\" \");\n    if (/[^\\s]/.test(_types)) {\n      _this.addType(_types, params.data);\n    }\n    return _this;\n  }\n  _createClass(Connection, [{\n    key: \"getIdPrefix\",\n    value: function getIdPrefix() {\n      return \"_jsPlumb_c\";\n    }\n  }, {\n    key: \"getDefaultOverlayKey\",\n    value: function getDefaultOverlayKey() {\n      return KEY_CONNECTION_OVERLAYS;\n    }\n  }, {\n    key: \"getXY\",\n    value: function getXY() {\n      return {\n        x: this.connector.x,\n        y: this.connector.y\n      };\n    }\n  }, {\n    key: \"makeEndpoint\",\n    value: function makeEndpoint(isSource, el, elId, anchor, ep) {\n      elId = elId || this.instance.getId(el);\n      return prepareEndpoint(this, ep, isSource ? 0 : 1, anchor, el);\n    }\n  }, {\n    key: \"getTypeDescriptor\",\n    value: function getTypeDescriptor() {\n      return Connection.type;\n    }\n  }, {\n    key: \"isDetachable\",\n    value: function isDetachable(ep) {\n      return this.detachable === false ? false : ep != null ? ep.connectionsDetachable === true : this.detachable === true;\n    }\n  }, {\n    key: \"setDetachable\",\n    value: function setDetachable(detachable) {\n      this.detachable = detachable === true;\n    }\n  }, {\n    key: \"isReattach\",\n    value: function isReattach() {\n      return this.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\n    }\n  }, {\n    key: \"setReattach\",\n    value: function setReattach(reattach) {\n      this.reattach = reattach === true;\n    }\n  }, {\n    key: \"applyType\",\n    value: function applyType(t, typeMap) {\n      var _connector = null;\n      if (t.connector != null) {\n        _connector = this.getCachedTypeItem(TYPE_ITEM_CONNECTOR, typeMap.connector);\n        if (_connector == null) {\n          _connector = this.prepareConnector(t.connector, typeMap.connector);\n          this.cacheTypeItem(TYPE_ITEM_CONNECTOR, _connector, typeMap.connector);\n        }\n        this.setPreparedConnector(_connector);\n      }\n      _get(_getPrototypeOf(Connection.prototype), \"applyType\", this).call(this, t, typeMap);\n      if (t.detachable != null) {\n        this.setDetachable(t.detachable);\n      }\n      if (t.reattach != null) {\n        this.setReattach(t.reattach);\n      }\n      if (t.scope) {\n        this.scope = t.scope;\n      }\n      var _anchors = null;\n      if (t.anchor) {\n        _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchor);\n        if (_anchors == null) {\n          _anchors = [makeLightweightAnchorFromSpec(t.anchor), makeLightweightAnchorFromSpec(t.anchor)];\n          this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchor);\n        }\n      } else if (t.anchors) {\n        _anchors = this.getCachedTypeItem(TYPE_ITEM_ANCHORS, typeMap.anchors);\n        if (_anchors == null) {\n          _anchors = [makeLightweightAnchorFromSpec(t.anchors[0]), makeLightweightAnchorFromSpec(t.anchors[1])];\n          this.cacheTypeItem(TYPE_ITEM_ANCHORS, _anchors, typeMap.anchors);\n        }\n      }\n      if (_anchors != null) {\n        this.instance.router.setConnectionAnchors(this, _anchors);\n        if (this.instance.router.isDynamicAnchor(this.endpoints[1])) {\n          this.instance.repaint(this.endpoints[1].element);\n        }\n      }\n      this.instance.applyConnectorType(this.connector, t);\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(c, cascade) {\n      _get(_getPrototypeOf(Connection.prototype), \"addClass\", this).call(this, c);\n      if (cascade) {\n        this.endpoints[0].addClass(c);\n        this.endpoints[1].addClass(c);\n        if (this.suspendedEndpoint) {\n          this.suspendedEndpoint.addClass(c);\n        }\n      }\n      if (this.connector) {\n        this.instance.addConnectorClass(this.connector, c);\n      }\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(c, cascade) {\n      _get(_getPrototypeOf(Connection.prototype), \"removeClass\", this).call(this, c);\n      if (cascade) {\n        this.endpoints[0].removeClass(c);\n        this.endpoints[1].removeClass(c);\n        if (this.suspendedEndpoint) {\n          this.suspendedEndpoint.removeClass(c);\n        }\n      }\n      if (this.connector) {\n        this.instance.removeConnectorClass(this.connector, c);\n      }\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v) {\n      _get(_getPrototypeOf(Connection.prototype), \"setVisible\", this).call(this, v);\n      if (this.connector) {\n        this.instance.setConnectorVisible(this.connector, v);\n      }\n      this.instance._paintConnection(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Connection.prototype), \"destroy\", this).call(this);\n      this.endpoints = null;\n      this.endpointStyles = null;\n      this.source = null;\n      this.target = null;\n      this.instance.destroyConnector(this);\n      this.connector = null;\n      this.deleted = true;\n    }\n  }, {\n    key: \"getUuids\",\n    value: function getUuids() {\n      return [this.endpoints[0].getUuid(), this.endpoints[1].getUuid()];\n    }\n  }, {\n    key: \"prepareConnector\",\n    value: function prepareConnector(connectorSpec, typeId) {\n      var connectorArgs = {\n        cssClass: this.params.cssClass,\n        hoverClass: this.params.hoverClass,\n        \"pointer-events\": this.params[\"pointer-events\"]\n      },\n          connector;\n      if (isString(connectorSpec)) {\n        connector = this.instance._makeConnector(this, connectorSpec, connectorArgs);\n      } else {\n        var co = connectorSpec;\n        connector = this.instance._makeConnector(this, co.type, merge(co.options, connectorArgs));\n      }\n      if (typeId != null) {\n        connector.typeId = typeId;\n      }\n      return connector;\n    }\n  }, {\n    key: \"setPreparedConnector\",\n    value: function setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\n      if (this.connector !== connector) {\n        var previous,\n            previousClasses = \"\";\n        if (this.connector != null) {\n          previous = this.connector;\n          previousClasses = this.instance.getConnectorClass(this.connector);\n          this.instance.destroyConnector(this);\n        }\n        this.connector = connector;\n        if (typeId) {\n          this.cacheTypeItem(TYPE_ITEM_CONNECTOR, connector, typeId);\n        }\n        this.addClass(previousClasses);\n        if (previous != null) {\n          var o = this.getOverlays();\n          for (var i in o) {\n            this.instance.reattachOverlay(o[i], this);\n          }\n        }\n        if (!doNotRepaint) {\n          this.instance._paintConnection(this);\n        }\n      }\n    }\n  }, {\n    key: \"setConnector\",\n    value: function setConnector(connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\n      var connector = this.prepareConnector(connectorSpec, typeId);\n      this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\n    }\n  }, {\n    key: \"replaceEndpoint\",\n    value: function replaceEndpoint(idx, endpointDef) {\n      var current = this.endpoints[idx],\n          elId = current.elementId,\n          ebe = this.instance.getEndpoints(current.element),\n          _idx = ebe.indexOf(current),\n          _new = prepareEndpoint(this, null, idx, null, current.element, elId, endpointDef);\n      this.endpoints[idx] = _new;\n      ebe.splice(_idx, 1, _new);\n      current.detachFromConnection(this);\n      this.instance.deleteEndpoint(current);\n      this.instance.fire(EVENT_ENDPOINT_REPLACED, {\n        previous: current,\n        current: _new\n      });\n    }\n  }]);\n  return Connection;\n}(Component);\n_defineProperty(Connection, \"type\", \"connection\");\n\nvar typeParameters = [\"connectorStyle\", \"connectorHoverStyle\", \"connectorOverlays\", \"connector\", \"connectionType\", \"connectorClass\", \"connectorHoverClass\"];\nvar Endpoint = function (_Component) {\n  _inherits(Endpoint, _Component);\n  var _super = _createSuper(Endpoint);\n  function Endpoint(instance, params) {\n    var _this;\n    _classCallCheck(this, Endpoint);\n    _this = _super.call(this, instance, params);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"connections\", []);\n    _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"elementId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"dragAllowedWhenFull\", true);\n    _defineProperty(_assertThisInitialized(_this), \"timestamp\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"portId\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"maxConnections\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"proxiedBy\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectorClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectorHoverClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"finalEndpoint\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n    _defineProperty(_assertThisInitialized(_this), \"isSource\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isTarget\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isTemporarySource\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectionCost\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"connectionsDirected\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectionsDetachable\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"reattachConnections\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"currentAnchorClass\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"referenceEndpoint\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"edgeType\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connector\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectorOverlays\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectorStyle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connectorHoverStyle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"deleteOnEmpty\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"uuid\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"scope\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_anchor\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"defaultLabelLocation\", [0.5, 0.5]);\n    _this.appendToDefaultType({\n      edgeType: params.edgeType,\n      maxConnections: params.maxConnections == null ? _this.instance.defaults.maxConnections : params.maxConnections,\n      paintStyle: params.paintStyle || _this.instance.defaults.endpointStyle,\n      hoverPaintStyle: params.hoverPaintStyle || _this.instance.defaults.endpointHoverStyle,\n      connectorStyle: params.connectorStyle,\n      connectorHoverStyle: params.connectorHoverStyle,\n      connectorClass: params.connectorClass,\n      connectorHoverClass: params.connectorHoverClass,\n      connectorOverlays: params.connectorOverlays,\n      connector: params.connector\n    });\n    _this.enabled = !(params.enabled === false);\n    _this.visible = true;\n    _this.element = params.element;\n    _this.uuid = params.uuid;\n    _this.portId = params.portId;\n    _this.elementId = params.elementId;\n    _this.connectionCost = params.connectionCost == null ? 1 : params.connectionCost;\n    _this.connectionsDirected = params.connectionsDirected;\n    _this.currentAnchorClass = \"\";\n    _this.events = {};\n    _this.connectorOverlays = params.connectorOverlays;\n    _this.connectorStyle = params.connectorStyle;\n    _this.connectorHoverStyle = params.connectorHoverStyle;\n    _this.connector = params.connector;\n    _this.edgeType = params.edgeType;\n    _this.connectorClass = params.connectorClass;\n    _this.connectorHoverClass = params.connectorHoverClass;\n    _this.deleteOnEmpty = params.deleteOnEmpty === true;\n    _this.isSource = params.source || false;\n    _this.isTemporarySource = params.isTemporarySource || false;\n    _this.isTarget = params.target || false;\n    _this.connections = params.connections || [];\n    _this.scope = params.scope || instance.defaultScope;\n    _this.timestamp = null;\n    _this.reattachConnections = params.reattachConnections || instance.defaults.reattachConnections;\n    _this.connectionsDetachable = instance.defaults.connectionsDetachable;\n    if (params.connectionsDetachable === false) {\n      _this.connectionsDetachable = false;\n    }\n    _this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\n    if (params.onMaxConnections) {\n      _this.bind(EVENT_MAX_CONNECTIONS, params.onMaxConnections);\n    }\n    var ep = params.endpoint || params.existingEndpoint || instance.defaults.endpoint;\n    _this.setEndpoint(ep);\n    if (params.preparedAnchor != null) {\n      _this.setPreparedAnchor(params.preparedAnchor);\n    } else {\n      var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : instance.defaults.anchor || AnchorLocations.Top;\n      _this.setAnchor(anchorParamsToUse);\n    }\n    var type = [DEFAULT, params.type || \"\"].join(\" \");\n    _this.addType(type, params.data);\n    return _this;\n  }\n  _createClass(Endpoint, [{\n    key: \"getIdPrefix\",\n    value: function getIdPrefix() {\n      return \"_jsplumb_e\";\n    }\n  }, {\n    key: \"getTypeDescriptor\",\n    value: function getTypeDescriptor() {\n      return \"endpoint\";\n    }\n  }, {\n    key: \"getXY\",\n    value: function getXY() {\n      return {\n        x: this.endpoint.x,\n        y: this.endpoint.y\n      };\n    }\n  }, {\n    key: \"getDefaultOverlayKey\",\n    value: function getDefaultOverlayKey() {\n      return \"endpointOverlays\";\n    }\n  }, {\n    key: \"_updateAnchorClass\",\n    value: function _updateAnchorClass() {\n      var ac = this._anchor && this._anchor.cssClass;\n      if (ac != null && ac.length > 0) {\n        var oldAnchorClass = this.instance.endpointAnchorClassPrefix + \"-\" + this.currentAnchorClass;\n        this.currentAnchorClass = ac;\n        var anchorClass = this.instance.endpointAnchorClassPrefix + (this.currentAnchorClass ? \"-\" + this.currentAnchorClass : \"\");\n        if (oldAnchorClass !== anchorClass) {\n          this.removeClass(oldAnchorClass);\n          this.addClass(anchorClass);\n          this.instance.removeClass(this.element, oldAnchorClass);\n          this.instance.addClass(this.element, anchorClass);\n        }\n      }\n    }\n  }, {\n    key: \"setPreparedAnchor\",\n    value: function setPreparedAnchor(anchor) {\n      this.instance.router.setAnchor(this, anchor);\n      this._updateAnchorClass();\n      return this;\n    }\n  }, {\n    key: \"_anchorLocationChanged\",\n    value: function _anchorLocationChanged(currentAnchor) {\n      this.fire(EVENT_ANCHOR_CHANGED, {\n        endpoint: this,\n        anchor: currentAnchor\n      });\n      this._updateAnchorClass();\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(anchorParams) {\n      var a = this.instance.router.prepareAnchor(anchorParams);\n      this.setPreparedAnchor(a);\n      return this;\n    }\n  }, {\n    key: \"addConnection\",\n    value: function addConnection(conn) {\n      var wasFull = this.isFull();\n      var wasEmpty = this.connections.length === 0;\n      this.connections.push(conn);\n      if (wasEmpty) {\n        this.addClass(this.instance.endpointConnectedClass);\n      }\n      if (this.isFull()) {\n        if (!wasFull) {\n          this.addClass(this.instance.endpointFullClass);\n        }\n      } else if (wasFull) {\n        this.removeClass(this.instance.endpointFullClass);\n      }\n    }\n  }, {\n    key: \"detachFromConnection\",\n    value: function detachFromConnection(connection, idx, transientDetach) {\n      idx = idx == null ? this.connections.indexOf(connection) : idx;\n      if (idx >= 0) {\n        this.connections.splice(idx, 1);\n        this.instance._refreshEndpoint(this);\n      }\n      if (!transientDetach && this.deleteOnEmpty && this.connections.length === 0) {\n        this.instance.deleteEndpoint(this);\n      }\n    }\n  }, {\n    key: \"deleteEveryConnection\",\n    value: function deleteEveryConnection(params) {\n      var c = this.connections.length;\n      for (var i = 0; i < c; i++) {\n        this.instance.deleteConnection(this.connections[0], params);\n      }\n    }\n  }, {\n    key: \"detachFrom\",\n    value: function detachFrom(otherEndpoint) {\n      var c = [];\n      for (var i = 0; i < this.connections.length; i++) {\n        if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) {\n          c.push(this.connections[i]);\n        }\n      }\n      for (var j = 0, count = c.length; j < count; j++) {\n        this.instance.deleteConnection(c[0]);\n      }\n      return this;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\n      _get(_getPrototypeOf(Endpoint.prototype), \"setVisible\", this).call(this, v);\n      this.endpoint.setVisible(v);\n      if (v) {\n        this.showOverlays();\n      } else {\n        this.hideOverlays();\n      }\n      if (!doNotChangeConnections) {\n        for (var i = 0; i < this.connections.length; i++) {\n          this.connections[i].setVisible(v);\n          if (!doNotNotifyOtherEndpoint) {\n            var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\n            if (this.connections[i].endpoints[oIdx].connections.length === 1) {\n              this.connections[i].endpoints[oIdx].setVisible(v, true, true);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"applyType\",\n    value: function applyType(t, typeMap) {\n      _get(_getPrototypeOf(Endpoint.prototype), \"applyType\", this).call(this, t, typeMap);\n      this.setPaintStyle(t.endpointStyle || t.paintStyle);\n      this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle);\n      this.connectorStyle = t.connectorStyle;\n      this.connectorHoverStyle = t.connectorHoverStyle;\n      this.connector = t.connector;\n      this.connectorOverlays = t.connectorOverlays;\n      this.edgeType = t.edgeType;\n      if (t.maxConnections != null) {\n        this.maxConnections = t.maxConnections;\n      }\n      if (t.scope) {\n        this.scope = t.scope;\n      }\n      extend(t, typeParameters);\n      this.instance.applyEndpointType(this, t);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Endpoint.prototype), \"destroy\", this).call(this);\n      if (this.endpoint != null) {\n        this.instance.destroyEndpoint(this);\n      }\n    }\n  }, {\n    key: \"isFull\",\n    value: function isFull() {\n      return this.maxConnections === 0 ? true : !(this.isFloating() || this.maxConnections < 0 || this.connections.length < this.maxConnections);\n    }\n  }, {\n    key: \"isFloating\",\n    value: function isFloating() {\n      return this.instance.router.isFloating(this);\n    }\n  }, {\n    key: \"isConnectedTo\",\n    value: function isConnectedTo(otherEndpoint) {\n      var found = false;\n      if (otherEndpoint) {\n        for (var i = 0; i < this.connections.length; i++) {\n          if (this.connections[i].endpoints[1] === otherEndpoint || this.connections[i].endpoints[0] === otherEndpoint) {\n            found = true;\n            break;\n          }\n        }\n      }\n      return found;\n    }\n  }, {\n    key: \"setDragAllowedWhenFull\",\n    value: function setDragAllowedWhenFull(allowed) {\n      this.dragAllowedWhenFull = allowed;\n    }\n  }, {\n    key: \"getUuid\",\n    value: function getUuid() {\n      return this.uuid;\n    }\n  }, {\n    key: \"connectorSelector\",\n    value: function connectorSelector() {\n      return this.connections[0];\n    }\n  }, {\n    key: \"prepareEndpoint\",\n    value: function prepareEndpoint(ep, typeId) {\n      var endpointArgs = {\n        cssClass: this.cssClass,\n        endpoint: this\n      };\n      var endpoint;\n      if (isAssignableFrom(ep, EndpointRepresentation)) {\n        var epr = ep;\n        endpoint = EndpointFactory.clone(epr);\n      } else if (isString(ep)) {\n        endpoint = EndpointFactory.get(this, ep, endpointArgs);\n      } else {\n        var fep = ep;\n        extend(endpointArgs, fep.options || {});\n        endpoint = EndpointFactory.get(this, fep.type, endpointArgs);\n      }\n      endpoint.typeId = typeId;\n      return endpoint;\n    }\n  }, {\n    key: \"setEndpoint\",\n    value: function setEndpoint(ep) {\n      var _ep = this.prepareEndpoint(ep);\n      this.setPreparedEndpoint(_ep);\n    }\n  }, {\n    key: \"setPreparedEndpoint\",\n    value: function setPreparedEndpoint(ep) {\n      if (this.endpoint != null) {\n        this.instance.destroyEndpoint(this);\n      }\n      this.endpoint = ep;\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(clazz, cascade) {\n      _get(_getPrototypeOf(Endpoint.prototype), \"addClass\", this).call(this, clazz, cascade);\n      if (this.endpoint != null) {\n        this.endpoint.addClass(clazz);\n      }\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(clazz, cascade) {\n      _get(_getPrototypeOf(Endpoint.prototype), \"removeClass\", this).call(this, clazz, cascade);\n      if (this.endpoint != null) {\n        this.endpoint.removeClass(clazz);\n      }\n    }\n  }]);\n  return Endpoint;\n}(Component);\n\nvar UINode = function UINode(instance, el) {\n  _classCallCheck(this, UINode);\n  this.instance = instance;\n  this.el = el;\n  _defineProperty(this, \"group\", void 0);\n};\nvar UIGroup = function (_UINode) {\n  _inherits(UIGroup, _UINode);\n  var _super = _createSuper(UIGroup);\n  function UIGroup(instance, el, options) {\n    var _this;\n    _classCallCheck(this, UIGroup);\n    _this = _super.call(this, instance, el);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"children\", []);\n    _defineProperty(_assertThisInitialized(_this), \"collapsed\", false);\n    _defineProperty(_assertThisInitialized(_this), \"droppable\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"orphan\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"constrain\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"proxied\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"ghost\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"revert\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"prune\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"dropOverride\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"anchor\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endpoint\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"connections\", {\n      source: [],\n      target: [],\n      internal: []\n    });\n    _defineProperty(_assertThisInitialized(_this), \"manager\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"elId\", void 0);\n    var jel = _this.el;\n    jel._isJsPlumbGroup = true;\n    jel._jsPlumbGroup = _assertThisInitialized(_this);\n    _this.elId = instance.getId(el);\n    _this.orphan = options.orphan === true;\n    _this.revert = _this.orphan === true ? false : options.revert !== false;\n    _this.droppable = options.droppable !== false;\n    _this.ghost = options.ghost === true;\n    _this.enabled = options.enabled !== false;\n    _this.prune = _this.orphan !== true && options.prune === true;\n    _this.constrain = _this.ghost || options.constrain === true;\n    _this.proxied = options.proxied !== false;\n    _this.id = options.id || uuid();\n    _this.dropOverride = options.dropOverride === true;\n    _this.anchor = options.anchor;\n    _this.endpoint = options.endpoint;\n    _this.anchor = options.anchor;\n    instance.setAttribute(el, ATTRIBUTE_GROUP, \"\");\n    return _this;\n  }\n  _createClass(UIGroup, [{\n    key: \"overrideDrop\",\n    value: function overrideDrop(el, targetGroup) {\n      return this.dropOverride && (this.revert || this.prune || this.orphan);\n    }\n  }, {\n    key: \"getAnchor\",\n    value: function getAnchor(conn, endpointIndex) {\n      return this.anchor || \"Continuous\";\n    }\n  }, {\n    key: \"getEndpoint\",\n    value: function getEndpoint(conn, endpointIndex) {\n      return this.endpoint || {\n        type: DotEndpoint.type,\n        options: {\n          radius: 10\n        }\n      };\n    }\n  }, {\n    key: \"add\",\n    value: function add(_el, doNotFireEvent) {\n      var dragArea = this.instance.getGroupContentArea(this);\n      var __el = _el;\n      if (__el._jsPlumbParentGroup != null) {\n        if (__el._jsPlumbParentGroup === this) {\n          return;\n        } else {\n          __el._jsPlumbParentGroup.remove(_el, true, doNotFireEvent, false);\n        }\n      }\n      __el._jsPlumbParentGroup = this;\n      this.children.push(new UINode(this.instance, _el));\n      this.instance._appendElement(__el, dragArea);\n      this.manager._updateConnectionsForGroup(this);\n    }\n  }, {\n    key: \"resolveNode\",\n    value: function resolveNode(el) {\n      return el == null ? null : getWithFunction(this.children, function (u) {\n        return u.el === el;\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(el, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n      var uiNode = this.resolveNode(el);\n      if (uiNode != null) {\n        this._doRemove(uiNode, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup);\n      }\n    }\n  }, {\n    key: \"_doRemove\",\n    value: function _doRemove(child, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n      var __el = child.el;\n      delete __el._jsPlumbParentGroup;\n      removeWithFunction(this.children, function (e) {\n        return e === child;\n      });\n      if (manipulateDOM) {\n        try {\n          this.instance.getGroupContentArea(this).removeChild(__el);\n        } catch (e) {\n          log(\"Could not remove element from Group \" + e);\n        }\n      }\n      if (!doNotFireEvent) {\n        var p = {\n          group: this,\n          el: __el\n        };\n        if (targetGroup) {\n          p.targetGroup = targetGroup;\n        }\n        this.instance.fire(EVENT_GROUP_MEMBER_REMOVED, p);\n      }\n      if (!doNotUpdateConnections) {\n        this.manager._updateConnectionsForGroup(this);\n      }\n    }\n  }, {\n    key: \"removeAll\",\n    value: function removeAll(manipulateDOM, doNotFireEvent) {\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[0];\n        this._doRemove(child, manipulateDOM, doNotFireEvent, true);\n        this.instance.unmanage(child.el, true);\n      }\n      this.children.length = 0;\n      this.manager._updateConnectionsForGroup(this);\n    }\n  }, {\n    key: \"orphanAll\",\n    value: function orphanAll() {\n      var orphanedPositions = {};\n      for (var i = 0; i < this.children.length; i++) {\n        var newPosition = this.manager.orphan(this.children[i].el, false);\n        orphanedPositions[newPosition.id] = newPosition.pos;\n      }\n      this.children.length = 0;\n      return orphanedPositions;\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(group) {\n      if (this.instance.allowNestedGroups && group !== this) {\n        if (this.instance.groupManager.isAncestor(this, group)) {\n          return false;\n        }\n        if (group.group != null) {\n          group.group.removeGroup(group);\n        }\n        var groupElId = this.instance.getId(group.el);\n        var entry = this.instance.getManagedElements()[groupElId];\n        entry.group = this.elId;\n        var elpos = this.instance.getOffsetRelativeToRoot(group.el);\n        var cpos = this.collapsed ? this.instance.getOffsetRelativeToRoot(this.el) : this.instance.getOffsetRelativeToRoot(this.instance.getGroupContentArea(this));\n        group.el._jsPlumbParentGroup = this;\n        this.children.push(group);\n        this.instance._appendElement(group.el, this.instance.getGroupContentArea(this));\n        group.group = this;\n        var newPosition = {\n          x: elpos.x - cpos.x,\n          y: elpos.y - cpos.y\n        };\n        this.instance.setPosition(group.el, newPosition);\n        this.instance.fire(EVENT_NESTED_GROUP_ADDED, {\n          parent: this,\n          child: group\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(group) {\n      if (group.group === this) {\n        var jel = group.el;\n        var d = this.instance.getGroupContentArea(this);\n        if (d === jel.parentNode) {\n          d.removeChild(group.el);\n        }\n        var groupElId = this.instance.getId(group.el);\n        var entry = this.instance.getManagedElements()[groupElId];\n        if (entry) {\n          delete entry.group;\n        }\n        this.children = this.children.filter(function (cg) {\n          return cg.id !== group.id;\n        });\n        delete group.group;\n        delete jel._jsPlumbParentGroup;\n        this.instance.fire(EVENT_NESTED_GROUP_REMOVED, {\n          parent: this,\n          child: group\n        });\n      }\n    }\n  }, {\n    key: \"getGroups\",\n    value: function getGroups() {\n      return this.children.filter(function (cg) {\n        return cg.constructor === UIGroup;\n      });\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return this.children.filter(function (cg) {\n        return cg.constructor === UINode;\n      });\n    }\n  }, {\n    key: \"collapseParent\",\n    get: function get() {\n      var cg = null;\n      if (this.group == null) {\n        return null;\n      } else {\n        var g = this.group;\n        while (g != null) {\n          if (g.collapsed) {\n            cg = g;\n          }\n          g = g.group;\n        }\n        return cg;\n      }\n    }\n  }]);\n  return UIGroup;\n}(UINode);\n\nvar GroupManager = function () {\n  function GroupManager(instance) {\n    var _this = this;\n    _classCallCheck(this, GroupManager);\n    this.instance = instance;\n    _defineProperty(this, \"groupMap\", {});\n    _defineProperty(this, \"_connectionSourceMap\", {});\n    _defineProperty(this, \"_connectionTargetMap\", {});\n    instance.bind(EVENT_INTERNAL_CONNECTION, function (p) {\n      var sourceGroup = _this.getGroupFor(p.source);\n      var targetGroup = _this.getGroupFor(p.target);\n      if (sourceGroup != null && targetGroup != null && sourceGroup === targetGroup) {\n        _this._connectionSourceMap[p.connection.id] = sourceGroup;\n        _this._connectionTargetMap[p.connection.id] = sourceGroup;\n        suggest(sourceGroup.connections.internal, p.connection);\n      } else {\n        if (sourceGroup != null) {\n          if (p.target._jsPlumbGroup === sourceGroup) {\n            suggest(sourceGroup.connections.internal, p.connection);\n          } else {\n            suggest(sourceGroup.connections.source, p.connection);\n          }\n          _this._connectionSourceMap[p.connection.id] = sourceGroup;\n        }\n        if (targetGroup != null) {\n          if (p.source._jsPlumbGroup === targetGroup) {\n            suggest(targetGroup.connections.internal, p.connection);\n          } else {\n            suggest(targetGroup.connections.target, p.connection);\n          }\n          _this._connectionTargetMap[p.connection.id] = targetGroup;\n        }\n      }\n    });\n    instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function (p) {\n      _this._cleanupDetachedConnection(p.connection);\n    });\n    instance.bind(EVENT_CONNECTION_MOVED, function (p) {\n      var originalElement = p.originalEndpoint.element,\n          originalGroup = _this.getGroupFor(originalElement),\n          newEndpoint = p.connection.endpoints[p.index],\n          newElement = newEndpoint.element,\n          newGroup = _this.getGroupFor(newElement),\n          connMap = p.index === 0 ? _this._connectionSourceMap : _this._connectionTargetMap,\n          otherConnMap = p.index === 0 ? _this._connectionTargetMap : _this._connectionSourceMap;\n      if (newGroup != null) {\n        connMap[p.connection.id] = newGroup;\n        if (p.connection.source === p.connection.target) {\n          otherConnMap[p.connection.id] = newGroup;\n        }\n      } else {\n        delete connMap[p.connection.id];\n        if (p.connection.source === p.connection.target) {\n          delete otherConnMap[p.connection.id];\n        }\n      }\n      if (originalGroup != null) {\n        _this._updateConnectionsForGroup(originalGroup);\n      }\n      if (newGroup != null) {\n        _this._updateConnectionsForGroup(newGroup);\n      }\n    });\n  }\n  _createClass(GroupManager, [{\n    key: \"_cleanupDetachedConnection\",\n    value: function _cleanupDetachedConnection(conn) {\n      conn.proxies.length = 0;\n      var group = this._connectionSourceMap[conn.id],\n          f;\n      if (group != null) {\n        f = function f(c) {\n          return c.id === conn.id;\n        };\n        removeWithFunction(group.connections.source, f);\n        removeWithFunction(group.connections.target, f);\n        removeWithFunction(group.connections.internal, f);\n        delete this._connectionSourceMap[conn.id];\n      }\n      group = this._connectionTargetMap[conn.id];\n      if (group != null) {\n        f = function f(c) {\n          return c.id === conn.id;\n        };\n        removeWithFunction(group.connections.source, f);\n        removeWithFunction(group.connections.target, f);\n        removeWithFunction(group.connections.internal, f);\n        delete this._connectionTargetMap[conn.id];\n      }\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(params) {\n      var jel = params.el;\n      if (this.groupMap[params.id] != null) {\n        throw new Error(\"cannot create Group [\" + params.id + \"]; a Group with that ID exists\");\n      }\n      if (jel._isJsPlumbGroup != null) {\n        throw new Error(\"cannot create Group [\" + params.id + \"]; the given element is already a Group\");\n      }\n      var group = new UIGroup(this.instance, params.el, params);\n      this.groupMap[group.id] = group;\n      if (params.collapsed) {\n        this.collapseGroup(group);\n      }\n      this.instance.manage(group.el);\n      this.instance.addClass(group.el, CLASS_GROUP_EXPANDED);\n      group.manager = this;\n      this._updateConnectionsForGroup(group);\n      this.instance.fire(EVENT_GROUP_ADDED, {\n        group: group\n      });\n      return group;\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupId) {\n      var group = groupId;\n      if (isString(groupId)) {\n        group = this.groupMap[groupId];\n        if (group == null) {\n          throw new Error(\"No such group [\" + groupId + \"]\");\n        }\n      }\n      return group;\n    }\n  }, {\n    key: \"getGroupFor\",\n    value: function getGroupFor(el) {\n      var jel = el;\n      var c = this.instance.getContainer();\n      var abort = false,\n          g = null;\n      while (!abort) {\n        if (jel == null || jel === c) {\n          abort = true;\n        } else {\n          if (jel._jsPlumbParentGroup) {\n            g = jel._jsPlumbParentGroup;\n            abort = true;\n          } else {\n            jel = jel.parentNode;\n          }\n        }\n      }\n      return g;\n    }\n  }, {\n    key: \"getGroups\",\n    value: function getGroups() {\n      var g = [];\n      for (var key in this.groupMap) {\n        g.push(this.groupMap[key]);\n      }\n      return g;\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(group, deleteMembers, manipulateView, doNotFireEvent) {\n      var _this2 = this;\n      var actualGroup = this.getGroup(group);\n      this.expandGroup(actualGroup, true);\n      var newPositions = {};\n      forEach(actualGroup.children, function (uiNode) {\n        var entry = _this2.instance.getManagedElements()[_this2.instance.getId(uiNode.el)];\n        if (entry) {\n          delete entry.group;\n        }\n      });\n      if (deleteMembers) {\n        forEach(actualGroup.getGroups(), function (cg) {\n          return _this2.removeGroup(cg, deleteMembers, manipulateView);\n        });\n        actualGroup.removeAll(manipulateView, doNotFireEvent);\n      } else {\n        if (actualGroup.group) {\n          forEach(actualGroup.children, function (c) {\n            return actualGroup.group.add(c.el);\n          });\n        }\n        newPositions = actualGroup.orphanAll();\n      }\n      if (actualGroup.group) {\n        actualGroup.group.removeGroup(actualGroup);\n      }\n      this.instance.unmanage(actualGroup.el, true);\n      delete this.groupMap[actualGroup.id];\n      this.instance.fire(EVENT_GROUP_REMOVED, {\n        group: actualGroup\n      });\n      return newPositions;\n    }\n  }, {\n    key: \"removeAllGroups\",\n    value: function removeAllGroups(deleteMembers, manipulateView, doNotFireEvent) {\n      for (var _g in this.groupMap) {\n        this.removeGroup(this.groupMap[_g], deleteMembers, manipulateView, doNotFireEvent);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(f) {\n      for (var key in this.groupMap) {\n        f(this.groupMap[key]);\n      }\n    }\n  }, {\n    key: \"orphan\",\n    value: function orphan(el, doNotTransferToAncestor) {\n      var jel = el;\n      if (jel._jsPlumbParentGroup) {\n        var currentParent = jel._jsPlumbParentGroup;\n        var positionRelativeToGroup = this.instance.getOffset(jel);\n        var id = this.instance.getId(jel);\n        var pos = this.instance.getOffset(el);\n        jel.parentNode.removeChild(jel);\n        if (doNotTransferToAncestor !== true && currentParent.group) {\n          pos.x += positionRelativeToGroup.x;\n          pos.y += positionRelativeToGroup.y;\n          this.instance.getGroupContentArea(currentParent.group).appendChild(el);\n        } else {\n          this.instance._appendElement(el, this.instance.getContainer());\n        }\n        this.instance.setPosition(el, pos);\n        delete jel._jsPlumbParentGroup;\n        return {\n          id: id,\n          pos: pos\n        };\n      }\n    }\n  }, {\n    key: \"_updateConnectionsForGroup\",\n    value: function _updateConnectionsForGroup(group) {\n      var _this3 = this;\n      group.connections.source.length = 0;\n      group.connections.target.length = 0;\n      group.connections.internal.length = 0;\n      var members = group.children.slice().map(function (cn) {\n        return cn.el;\n      });\n      var childMembers = [];\n      forEach(members, function (member) {\n        Array.prototype.push.apply(childMembers, _this3.instance.getSelector(member, SELECTOR_MANAGED_ELEMENT));\n      });\n      Array.prototype.push.apply(members, childMembers);\n      if (members.length > 0) {\n        var c1 = this.instance.getConnections({\n          source: members,\n          scope: WILDCARD\n        }, true);\n        var c2 = this.instance.getConnections({\n          target: members,\n          scope: WILDCARD\n        }, true);\n        var processed = {};\n        var gs, gt;\n        var oneSet = function oneSet(c) {\n          for (var i = 0; i < c.length; i++) {\n            if (processed[c[i].id]) {\n              continue;\n            }\n            processed[c[i].id] = true;\n            gs = _this3.getGroupFor(c[i].source);\n            gt = _this3.getGroupFor(c[i].target);\n            if (c[i].source === group.el && gt === group || c[i].target === group.el && gs === group) {\n              group.connections.internal.push(c[i]);\n            } else if (gs === group) {\n              if (gt !== group) {\n                group.connections.source.push(c[i]);\n              } else {\n                group.connections.internal.push(c[i]);\n              }\n              _this3._connectionSourceMap[c[i].id] = group;\n            } else if (gt === group) {\n              group.connections.target.push(c[i]);\n              _this3._connectionTargetMap[c[i].id] = group;\n            }\n          }\n        };\n        oneSet(c1);\n        oneSet(c2);\n      }\n    }\n  }, {\n    key: \"_collapseConnection\",\n    value: function _collapseConnection(conn, index, group) {\n      var otherEl = conn.endpoints[index === 0 ? 1 : 0].element;\n      if (otherEl._jsPlumbParentGroup && !otherEl._jsPlumbParentGroup.proxied && otherEl._jsPlumbParentGroup.collapsed) {\n        return false;\n      }\n      var es = conn.endpoints[0].element,\n          esg = es._jsPlumbParentGroup,\n          esgcp = esg != null ? esg.collapseParent || esg : null,\n          et = conn.endpoints[1].element,\n          etg = et._jsPlumbParentGroup,\n          etgcp = etg != null ? etg.collapseParent || etg : null;\n      if (esgcp == null || etgcp == null || esgcp.id !== etgcp.id) {\n        var groupEl = group.el;\n            this.instance.getId(groupEl);\n        this.instance.proxyConnection(conn, index, groupEl,\n        function (conn, index) {\n          return group.getEndpoint(conn, index);\n        }, function (conn, index) {\n          return group.getAnchor(conn, index);\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"_expandConnection\",\n    value: function _expandConnection(c, index, group) {\n      this.instance.unproxyConnection(c, index);\n    }\n  }, {\n    key: \"isElementDescendant\",\n    value: function isElementDescendant(el, parentEl) {\n      var c = this.instance.getContainer();\n      var abort = false;\n      while (!abort) {\n        if (el == null || el === c) {\n          return false;\n        } else {\n          if (el === parentEl) {\n            return true;\n          } else {\n            el = el.parentNode;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"collapseGroup\",\n    value: function collapseGroup(group) {\n      var _this4 = this;\n      var actualGroup = this.getGroup(group);\n      if (actualGroup == null || actualGroup.collapsed) {\n        return;\n      }\n      var groupEl = actualGroup.el;\n      if (actualGroup.collapseParent == null) {\n        this.instance.setGroupVisible(actualGroup, false);\n        actualGroup.collapsed = true;\n        this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\n        this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\n        if (actualGroup.proxied) {\n          var collapsedConnectionIds = new Set();\n          var _collapseSet = function _collapseSet(conns, index) {\n            for (var i = 0; i < conns.length; i++) {\n              var c = conns[i];\n              if (_this4._collapseConnection(c, index, actualGroup) === true) {\n                collapsedConnectionIds.add(c.id);\n              }\n            }\n          };\n          _collapseSet(actualGroup.connections.source, 0);\n          _collapseSet(actualGroup.connections.target, 1);\n          forEach(actualGroup.getGroups(), function (cg) {\n            _this4.cascadeCollapse(actualGroup, cg, collapsedConnectionIds);\n          });\n        }\n        this.instance.revalidate(groupEl);\n        this.repaintGroup(actualGroup);\n        this.instance.fire(EVENT_GROUP_COLLAPSE, {\n          group: actualGroup\n        });\n      } else {\n        actualGroup.collapsed = true;\n        this.instance.removeClass(groupEl, CLASS_GROUP_EXPANDED);\n        this.instance.addClass(groupEl, CLASS_GROUP_COLLAPSED);\n      }\n    }\n  }, {\n    key: \"cascadeCollapse\",\n    value: function cascadeCollapse(collapsedGroup, targetGroup, collapsedIds) {\n      var _this5 = this;\n      if (collapsedGroup.proxied) {\n        var _collapseSet = function _collapseSet(conns, index) {\n          for (var i = 0; i < conns.length; i++) {\n            var c = conns[i];\n            if (!collapsedIds.has(c.id)) {\n              if (_this5._collapseConnection(c, index, collapsedGroup) === true) {\n                collapsedIds.add(c.id);\n              }\n            }\n          }\n        };\n        _collapseSet(targetGroup.connections.source, 0);\n        _collapseSet(targetGroup.connections.target, 1);\n      }\n      forEach(targetGroup.getGroups(), function (cg) {\n        _this5.cascadeCollapse(collapsedGroup, cg, collapsedIds);\n      });\n    }\n  }, {\n    key: \"expandGroup\",\n    value: function expandGroup(group, doNotFireEvent) {\n      var _this6 = this;\n      var actualGroup = this.getGroup(group);\n      if (actualGroup == null) {\n        return;\n      }\n      var groupEl = actualGroup.el;\n      if (actualGroup.collapseParent == null) {\n        this.instance.setGroupVisible(actualGroup, true);\n        actualGroup.collapsed = false;\n        this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\n        this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\n        if (actualGroup.proxied) {\n          var _expandSet = function _expandSet(conns, index) {\n            for (var i = 0; i < conns.length; i++) {\n              var c = conns[i];\n              _this6._expandConnection(c, index, actualGroup);\n            }\n          };\n          _expandSet(actualGroup.connections.source, 0);\n          _expandSet(actualGroup.connections.target, 1);\n          var _expandNestedGroup = function _expandNestedGroup(group, ignoreCollapsedStateForNested) {\n            if (ignoreCollapsedStateForNested || group.collapsed) {\n              var _collapseSet = function _collapseSet(conns, index) {\n                for (var i = 0; i < conns.length; i++) {\n                  var c = conns[i];\n                  _this6._collapseConnection(c, index, group.collapseParent || group);\n                }\n              };\n              _collapseSet(group.connections.source, 0);\n              _collapseSet(group.connections.target, 1);\n              forEach(group.connections.internal, function (c) {\n                return c.setVisible(false);\n              });\n              forEach(group.getGroups(), function (g) {\n                return _expandNestedGroup(g, true);\n              });\n            } else {\n              _this6.expandGroup(group, true);\n            }\n          };\n          forEach(actualGroup.getGroups(), _expandNestedGroup);\n        }\n        this.instance.revalidate(groupEl);\n        this.repaintGroup(actualGroup);\n        if (!doNotFireEvent) {\n          this.instance.fire(EVENT_GROUP_EXPAND, {\n            group: actualGroup\n          });\n        }\n      } else {\n        actualGroup.collapsed = false;\n        this.instance.addClass(groupEl, CLASS_GROUP_EXPANDED);\n        this.instance.removeClass(groupEl, CLASS_GROUP_COLLAPSED);\n      }\n    }\n  }, {\n    key: \"toggleGroup\",\n    value: function toggleGroup(group) {\n      group = this.getGroup(group);\n      if (group != null) {\n        if (group.collapsed) {\n          this.expandGroup(group);\n        } else {\n          this.collapseGroup(group);\n        }\n      }\n    }\n  }, {\n    key: \"repaintGroup\",\n    value: function repaintGroup(group) {\n      var actualGroup = this.getGroup(group);\n      var m = actualGroup.children;\n      for (var i = 0; i < m.length; i++) {\n        this.instance.revalidate(m[i].el);\n      }\n    }\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(group, doNotFireEvent) {\n      var _this7 = this;\n      var actualGroup = this.getGroup(group);\n      if (actualGroup) {\n        var groupEl = actualGroup.el;\n        var _one = function _one(el) {\n          var jel = el;\n          var isGroup = jel._isJsPlumbGroup != null,\n              droppingGroup = jel._jsPlumbGroup;\n          var currentGroup = jel._jsPlumbParentGroup;\n          if (currentGroup !== actualGroup) {\n            var entry = _this7.instance.manage(el);\n            var elpos = _this7.instance.getOffset(el);\n            var cpos = actualGroup.collapsed ? _this7.instance.getOffsetRelativeToRoot(groupEl) : _this7.instance.getOffset(_this7.instance.getGroupContentArea(actualGroup));\n            entry.group = actualGroup.elId;\n            if (currentGroup != null) {\n              currentGroup.remove(el, false, doNotFireEvent, false, actualGroup);\n              _this7._updateConnectionsForGroup(currentGroup);\n            }\n            if (isGroup) {\n              actualGroup.addGroup(droppingGroup);\n            } else {\n              actualGroup.add(el, doNotFireEvent);\n            }\n            var handleDroppedConnections = function handleDroppedConnections(list, index) {\n              var oidx = index === 0 ? 1 : 0;\n              list.each(function (c) {\n                c.setVisible(false);\n                if (c.endpoints[oidx].element._jsPlumbGroup === actualGroup) {\n                  c.endpoints[oidx].setVisible(false);\n                  _this7._expandConnection(c, oidx, actualGroup);\n                } else {\n                  c.endpoints[index].setVisible(false);\n                  _this7._collapseConnection(c, index, actualGroup);\n                }\n              });\n            };\n            if (actualGroup.collapsed) {\n              handleDroppedConnections(_this7.instance.select({\n                source: el\n              }), 0);\n              handleDroppedConnections(_this7.instance.select({\n                target: el\n              }), 1);\n            }\n            _this7.instance.getId(el);\n            var newPosition = {\n              x: elpos.x - cpos.x,\n              y: elpos.y - cpos.y\n            };\n            _this7.instance.setPosition(el, newPosition);\n            _this7._updateConnectionsForGroup(actualGroup);\n            _this7.instance.revalidate(el);\n            if (!doNotFireEvent) {\n              var p = {\n                group: actualGroup,\n                el: el,\n                pos: newPosition\n              };\n              if (currentGroup) {\n                p.sourceGroup = currentGroup;\n              }\n              _this7.instance.fire(EVENT_GROUP_MEMBER_ADDED, p);\n            }\n          }\n        };\n        for (var _len = arguments.length, el = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          el[_key - 2] = arguments[_key];\n        }\n        forEach(el, _one);\n      }\n    }\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(group, doNotFireEvent) {\n      var _this8 = this;\n      var actualGroup = this.getGroup(group);\n      if (actualGroup) {\n        var _one = function _one(_el) {\n          if (actualGroup.collapsed) {\n            var _expandSet = function _expandSet(conns, index) {\n              for (var i = 0; i < conns.length; i++) {\n                var c = conns[i];\n                if (c.proxies) {\n                  for (var j = 0; j < c.proxies.length; j++) {\n                    if (c.proxies[j] != null) {\n                      var proxiedElement = c.proxies[j].originalEp.element;\n                      if (proxiedElement === _el || _this8.isElementDescendant(proxiedElement, _el)) {\n                        _this8._expandConnection(c, index, actualGroup);\n                      }\n                    }\n                  }\n                }\n              }\n            };\n            _expandSet(actualGroup.connections.source.slice(), 0);\n            _expandSet(actualGroup.connections.target.slice(), 1);\n          }\n          actualGroup.remove(_el, null, doNotFireEvent);\n          var entry = _this8.instance.getManagedElements()[_this8.instance.getId(_el)];\n          if (entry) {\n            delete entry.group;\n          }\n        };\n        for (var _len2 = arguments.length, el = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          el[_key2 - 2] = arguments[_key2];\n        }\n        forEach(el, _one);\n      }\n    }\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors(group) {\n      var ancestors = [];\n      var p = group.group;\n      while (p != null) {\n        ancestors.push(p);\n        p = p.group;\n      }\n      return ancestors;\n    }\n  }, {\n    key: \"isAncestor\",\n    value: function isAncestor(group, possibleAncestor) {\n      if (group == null || possibleAncestor == null) {\n        return false;\n      }\n      return this.getAncestors(group).indexOf(possibleAncestor) !== -1;\n    }\n  }, {\n    key: \"getDescendants\",\n    value: function getDescendants(group) {\n      var d = [];\n      var _one = function _one(g) {\n        var childGroups = g.getGroups();\n        d.push.apply(d, _toConsumableArray(childGroups));\n        forEach(childGroups, _one);\n      };\n      _one(group);\n      return d;\n    }\n  }, {\n    key: \"isDescendant\",\n    value: function isDescendant(possibleDescendant, ancestor) {\n      if (possibleDescendant == null || ancestor == null) {\n        return false;\n      }\n      return this.getDescendants(ancestor).indexOf(possibleDescendant) !== -1;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._connectionSourceMap = {};\n      this._connectionTargetMap = {};\n      this.groupMap = {};\n    }\n  }]);\n  return GroupManager;\n}();\n\nvar SelectionBase = function () {\n  function SelectionBase(instance, entries) {\n    _classCallCheck(this, SelectionBase);\n    this.instance = instance;\n    this.entries = entries;\n  }\n  _createClass(SelectionBase, [{\n    key: \"length\",\n    get: function get() {\n      return this.entries.length;\n    }\n  }, {\n    key: \"each\",\n    value: function each(handler) {\n      forEach(this.entries, function (e) {\n        return handler(e);\n      });\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(index) {\n      return this.entries[index];\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(clazz, cascade) {\n      this.each(function (c) {\n        return c.addClass(clazz, cascade);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(clazz, cascade) {\n      this.each(function (c) {\n        return c.removeClass(clazz, cascade);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeAllOverlays\",\n    value: function removeAllOverlays() {\n      this.each(function (c) {\n        return c.removeAllOverlays();\n      });\n      return this;\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label) {\n      this.each(function (c) {\n        return c.setLabel(label);\n      });\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.entries.length = 0;\n      return this;\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var a = [];\n      this.each(function (e) {\n        return a.push(fn(e));\n      });\n      return a;\n    }\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(spec) {\n      this.each(function (c) {\n        return c.addOverlay(spec);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeOverlay\",\n    value: function removeOverlay(id) {\n      this.each(function (c) {\n        return c.removeOverlay(id);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeOverlays\",\n    value: function removeOverlays() {\n      this.each(function (c) {\n        return c.removeOverlays();\n      });\n      return this;\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay(id) {\n      this.each(function (c) {\n        return c.showOverlay(id);\n      });\n      return this;\n    }\n  }, {\n    key: \"hideOverlay\",\n    value: function hideOverlay(id) {\n      this.each(function (c) {\n        return c.hideOverlay(id);\n      });\n      return this;\n    }\n  }, {\n    key: \"setPaintStyle\",\n    value: function setPaintStyle(style) {\n      this.each(function (c) {\n        return c.setPaintStyle(style);\n      });\n      return this;\n    }\n  }, {\n    key: \"setHoverPaintStyle\",\n    value: function setHoverPaintStyle(style) {\n      this.each(function (c) {\n        return c.setHoverPaintStyle(style);\n      });\n      return this;\n    }\n  }, {\n    key: \"setSuspendEvents\",\n    value: function setSuspendEvents(suspend) {\n      this.each(function (c) {\n        return c.setSuspendEvents(suspend);\n      });\n      return this;\n    }\n  }, {\n    key: \"setParameter\",\n    value: function setParameter(name, value) {\n      this.each(function (c) {\n        return c.parameters[name] = value;\n      });\n      return this;\n    }\n  }, {\n    key: \"setParameters\",\n    value: function setParameters(p) {\n      this.each(function (c) {\n        return c.parameters = p;\n      });\n      return this;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(v) {\n      this.each(function (c) {\n        return c.setVisible(v);\n      });\n      return this;\n    }\n  }, {\n    key: \"addType\",\n    value: function addType(name) {\n      this.each(function (c) {\n        return c.addType(name);\n      });\n      return this;\n    }\n  }, {\n    key: \"toggleType\",\n    value: function toggleType(name) {\n      this.each(function (c) {\n        return c.toggleType(name);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeType\",\n    value: function removeType(name) {\n      this.each(function (c) {\n        return c.removeType(name);\n      });\n      return this;\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(evt, handler) {\n      this.each(function (c) {\n        return c.bind(evt, handler);\n      });\n      return this;\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind(evt, handler) {\n      this.each(function (c) {\n        return c.unbind(evt, handler);\n      });\n      return this;\n    }\n  }, {\n    key: \"setHover\",\n    value: function setHover(h) {\n      var _this = this;\n      this.each(function (c) {\n        return _this.instance.setHover(c, h);\n      });\n      return this;\n    }\n  }]);\n  return SelectionBase;\n}();\n\nvar EndpointSelection = function (_SelectionBase) {\n  _inherits(EndpointSelection, _SelectionBase);\n  var _super = _createSuper(EndpointSelection);\n  function EndpointSelection() {\n    _classCallCheck(this, EndpointSelection);\n    return _super.apply(this, arguments);\n  }\n  _createClass(EndpointSelection, [{\n    key: \"setEnabled\",\n    value: function setEnabled(e) {\n      this.each(function (ep) {\n        return ep.enabled = e;\n      });\n      return this;\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(a) {\n      this.each(function (ep) {\n        return ep.setAnchor(a);\n      });\n      return this;\n    }\n  }, {\n    key: \"deleteEveryConnection\",\n    value: function deleteEveryConnection() {\n      this.each(function (ep) {\n        return ep.deleteEveryConnection();\n      });\n      return this;\n    }\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      var _this = this;\n      this.each(function (ep) {\n        return _this.instance.deleteEndpoint(ep);\n      });\n      this.clear();\n      return this;\n    }\n  }]);\n  return EndpointSelection;\n}(SelectionBase);\n\nvar ConnectionSelection = function (_SelectionBase) {\n  _inherits(ConnectionSelection, _SelectionBase);\n  var _super = _createSuper(ConnectionSelection);\n  function ConnectionSelection() {\n    _classCallCheck(this, ConnectionSelection);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ConnectionSelection, [{\n    key: \"setDetachable\",\n    value: function setDetachable(d) {\n      this.each(function (c) {\n        return c.setDetachable(d);\n      });\n      return this;\n    }\n  }, {\n    key: \"setReattach\",\n    value: function setReattach(d) {\n      this.each(function (c) {\n        return c.setReattach(d);\n      });\n      return this;\n    }\n  }, {\n    key: \"setConnector\",\n    value: function setConnector(spec) {\n      this.each(function (c) {\n        return c.setConnector(spec);\n      });\n      return this;\n    }\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      var _this = this;\n      this.each(function (c) {\n        return _this.instance.deleteConnection(c);\n      });\n      this.clear();\n    }\n  }, {\n    key: \"repaint\",\n    value: function repaint() {\n      var _this2 = this;\n      this.each(function (c) {\n        return _this2.instance._paintConnection(c);\n      });\n      return this;\n    }\n  }]);\n  return ConnectionSelection;\n}(SelectionBase);\n\nvar Transaction = function Transaction() {\n  _classCallCheck(this, Transaction);\n  _defineProperty(this, \"affectedElements\", new Set());\n};\nfunction EMPTY_POSITION() {\n  return {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0,\n    r: 0,\n    c: {\n      x: 0,\n      y: 0\n    },\n    x2: 0,\n    y2: 0,\n    t: {\n      x: 0,\n      y: 0,\n      c: {\n        x: 0,\n        y: 0\n      },\n      w: 0,\n      h: 0,\n      r: 0,\n      x2: 0,\n      y2: 0,\n      cr: 0,\n      sr: 0\n    },\n    dirty: true\n  };\n}\nfunction rotate(x, y, w, h, r) {\n  var center = {\n    x: x + w / 2,\n    y: y + h / 2\n  },\n      cr = Math.cos(r / 360 * Math.PI * 2),\n      sr = Math.sin(r / 360 * Math.PI * 2),\n      _point = function _point(x, y) {\n    return {\n      x: center.x + Math.round((x - center.x) * cr - (y - center.y) * sr),\n      y: center.y + Math.round((y - center.y) * cr - (x - center.x) * sr)\n    };\n  };\n  var p1 = _point(x, y),\n      p2 = _point(x + w, y),\n      p3 = _point(x + w, y + h),\n      p4 = _point(x, y + h),\n      c = _point(x + w / 2, y + h / 2);\n  var xmin = Math.min(p1.x, p2.x, p3.x, p4.x),\n      xmax = Math.max(p1.x, p2.x, p3.x, p4.x),\n      ymin = Math.min(p1.y, p2.y, p3.y, p4.y),\n      ymax = Math.max(p1.y, p2.y, p3.y, p4.y);\n  return {\n    x: xmin,\n    y: ymin,\n    w: xmax - xmin,\n    h: ymax - ymin,\n    c: c,\n    r: r,\n    x2: xmax,\n    y2: ymax,\n    cr: cr,\n    sr: sr\n  };\n}\nvar entryComparator = function entryComparator(value, arrayEntry) {\n  var c = 0;\n  if (arrayEntry[1] > value[1]) {\n    c = -1;\n  } else if (arrayEntry[1] < value[1]) {\n    c = 1;\n  }\n  return c;\n};\nvar reverseEntryComparator = function reverseEntryComparator(value, arrayEntry) {\n  return entryComparator(value, arrayEntry) * -1;\n};\nfunction _updateElementIndex(id, value, array, sortDescending) {\n  insertSorted([id, value], array, entryComparator, sortDescending);\n}\nfunction _clearElementIndex(id, array) {\n  var idx = findWithFunction(array, function (entry) {\n    return entry[0] === id;\n  });\n  if (idx > -1) {\n    array.splice(idx, 1);\n  }\n}\nvar Viewport = function (_EventGenerator) {\n  _inherits(Viewport, _EventGenerator);\n  var _super = _createSuper(Viewport);\n  function Viewport(instance) {\n    var _this;\n    _classCallCheck(this, Viewport);\n    _this = _super.call(this);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"_currentTransaction\", null);\n    _defineProperty(_assertThisInitialized(_this), \"_sortedElements\", {\n      xmin: [],\n      xmax: [],\n      ymin: [],\n      ymax: []\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_elementMap\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"_transformedElementMap\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"_bounds\", {\n      minx: 0,\n      maxx: 0,\n      miny: 0,\n      maxy: 0\n    });\n    return _this;\n  }\n  _createClass(Viewport, [{\n    key: \"_updateBounds\",\n    value: function _updateBounds(id, updatedElement, doNotRecalculateBounds) {\n      if (updatedElement != null) {\n        _clearElementIndex(id, this._sortedElements.xmin);\n        _clearElementIndex(id, this._sortedElements.xmax);\n        _clearElementIndex(id, this._sortedElements.ymin);\n        _clearElementIndex(id, this._sortedElements.ymax);\n        _updateElementIndex(id, updatedElement.t.x, this._sortedElements.xmin, false);\n        _updateElementIndex(id, updatedElement.t.x + updatedElement.t.w, this._sortedElements.xmax, true);\n        _updateElementIndex(id, updatedElement.t.y, this._sortedElements.ymin, false);\n        _updateElementIndex(id, updatedElement.t.y + updatedElement.t.h, this._sortedElements.ymax, true);\n        if (doNotRecalculateBounds !== true) {\n          this._recalculateBounds();\n        }\n      }\n    }\n  }, {\n    key: \"_recalculateBounds\",\n    value: function _recalculateBounds() {\n      this._bounds.minx = this._sortedElements.xmin.length > 0 ? this._sortedElements.xmin[0][1] : 0;\n      this._bounds.maxx = this._sortedElements.xmax.length > 0 ? this._sortedElements.xmax[0][1] : 0;\n      this._bounds.miny = this._sortedElements.ymin.length > 0 ? this._sortedElements.ymin[0][1] : 0;\n      this._bounds.maxy = this._sortedElements.ymax.length > 0 ? this._sortedElements.ymax[0][1] : 0;\n    }\n  }, {\n    key: \"recomputeBounds\",\n    value: function recomputeBounds() {\n      var _this2 = this;\n      this._sortedElements.xmin.length = 0;\n      this._sortedElements.xmax.length = 0;\n      this._sortedElements.ymin.length = 0;\n      this._sortedElements.ymax.length = 0;\n      this._elementMap.forEach(function (vp, id) {\n        _this2._sortedElements.xmin.push([id, vp.t.x]);\n        _this2._sortedElements.xmax.push([id, vp.t.x + vp.t.w]);\n        _this2._sortedElements.ymin.push([id, vp.t.y]);\n        _this2._sortedElements.ymax.push([id, vp.t.y + vp.t.h]);\n      });\n      this._sortedElements.xmin.sort(entryComparator);\n      this._sortedElements.ymin.sort(entryComparator);\n      this._sortedElements.xmax.sort(reverseEntryComparator);\n      this._sortedElements.ymax.sort(reverseEntryComparator);\n      this._recalculateBounds();\n    }\n  }, {\n    key: \"_finaliseUpdate\",\n    value: function _finaliseUpdate(id, e, doNotRecalculateBounds) {\n      e.t = rotate(e.x, e.y, e.w, e.h, e.r);\n      this._transformedElementMap.set(id, e.t);\n      if (doNotRecalculateBounds !== true) {\n        this._updateBounds(id, e, doNotRecalculateBounds);\n      }\n    }\n  }, {\n    key: \"shouldFireEvent\",\n    value: function shouldFireEvent(event, value, originalEvent) {\n      return true;\n    }\n  }, {\n    key: \"startTransaction\",\n    value: function startTransaction() {\n      if (this._currentTransaction != null) {\n        throw new Error(\"Viewport: cannot start transaction; a transaction is currently active.\");\n      }\n      this._currentTransaction = new Transaction();\n    }\n  }, {\n    key: \"endTransaction\",\n    value: function endTransaction() {\n      var _this3 = this;\n      if (this._currentTransaction != null) {\n        this._currentTransaction.affectedElements.forEach(function (id) {\n          var entry = _this3.getPosition(id);\n          _this3._finaliseUpdate(id, entry, true);\n        });\n        this.recomputeBounds();\n        this._currentTransaction = null;\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(entries) {\n      var _this4 = this;\n      forEach(entries, function (e) {\n        return _this4.updateElement(e.id, e.x, e.y, e.width, e.height, e.rotation);\n      });\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(id, x, y, width, height, rotation, doNotRecalculateBounds) {\n      var e = getsert(this._elementMap, id, EMPTY_POSITION);\n      e.dirty = x == null && e.x == null || y == null && e.y == null || width == null && e.w == null || height == null && e.h == null;\n      if (x != null) {\n        e.x = x;\n      }\n      if (y != null) {\n        e.y = y;\n      }\n      if (width != null) {\n        e.w = width;\n      }\n      if (height != null) {\n        e.h = height;\n      }\n      if (rotation != null) {\n        e.r = rotation || 0;\n      }\n      e.c.x = e.x + e.w / 2;\n      e.c.y = e.y + e.h / 2;\n      e.x2 = e.x + e.w;\n      e.y2 = e.y + e.h;\n      if (this._currentTransaction == null) {\n        this._finaliseUpdate(id, e, doNotRecalculateBounds);\n      } else {\n        this._currentTransaction.affectedElements.add(id);\n      }\n      return e;\n    }\n  }, {\n    key: \"refreshElement\",\n    value: function refreshElement(elId, doNotRecalculateBounds) {\n      var me = this.instance.getManagedElements();\n      var s = me[elId] ? me[elId].el : null;\n      if (s != null) {\n        var size = this.getSize(s);\n        var offset = this.getOffset(s);\n        return this.updateElement(elId, offset.x, offset.y, size.w, size.h, null, doNotRecalculateBounds);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(el) {\n      return this.instance.getSize(el);\n    }\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(el) {\n      return this.instance.getOffset(el);\n    }\n  }, {\n    key: \"registerElement\",\n    value: function registerElement(id, doNotRecalculateBounds) {\n      return this.updateElement(id, 0, 0, 0, 0, 0, doNotRecalculateBounds);\n    }\n  }, {\n    key: \"addElement\",\n    value: function addElement(id, x, y, width, height, rotation) {\n      return this.updateElement(id, x, y, width, height, rotation);\n    }\n  }, {\n    key: \"rotateElement\",\n    value: function rotateElement(id, rotation) {\n      var e = getsert(this._elementMap, id, EMPTY_POSITION);\n      e.r = rotation || 0;\n      this._finaliseUpdate(id, e);\n      return e;\n    }\n  }, {\n    key: \"getBoundsWidth\",\n    value: function getBoundsWidth() {\n      return this._bounds.maxx - this._bounds.minx;\n    }\n  }, {\n    key: \"getBoundsHeight\",\n    value: function getBoundsHeight() {\n      return this._bounds.maxy - this._bounds.miny;\n    }\n  }, {\n    key: \"getX\",\n    value: function getX() {\n      return this._bounds.minx;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this._bounds.miny;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(id, w, h) {\n      if (this._elementMap.has(id)) {\n        return this.updateElement(id, null, null, w, h, null);\n      }\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(id, x, y) {\n      if (this._elementMap.has(id)) {\n        return this.updateElement(id, x, y, null, null, null);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._sortedElements.xmin.length = 0;\n      this._sortedElements.xmax.length = 0;\n      this._sortedElements.ymin.length = 0;\n      this._sortedElements.ymax.length = 0;\n      this._elementMap.clear();\n      this._transformedElementMap.clear();\n      this._recalculateBounds();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      _clearElementIndex(id, this._sortedElements.xmin);\n      _clearElementIndex(id, this._sortedElements.xmax);\n      _clearElementIndex(id, this._sortedElements.ymin);\n      _clearElementIndex(id, this._sortedElements.ymax);\n      this._elementMap[\"delete\"](id);\n      this._transformedElementMap[\"delete\"](id);\n      this._recalculateBounds();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition(id) {\n      return this._elementMap.get(id);\n    }\n  }, {\n    key: \"getElements\",\n    value: function getElements() {\n      return this._elementMap;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._elementMap.size === 0;\n    }\n  }]);\n  return Viewport;\n}(EventGenerator);\n\nvar ConnectionDragSelector = function () {\n  function ConnectionDragSelector(selector, def) {\n    var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, ConnectionDragSelector);\n    this.selector = selector;\n    this.def = def;\n    this.exclude = exclude;\n    _defineProperty(this, \"id\", void 0);\n    this.id = uuid();\n  }\n  _createClass(ConnectionDragSelector, [{\n    key: \"setEnabled\",\n    value: function setEnabled(enabled) {\n      this.def.enabled = enabled;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.def.enabled !== false;\n    }\n  }]);\n  return ConnectionDragSelector;\n}();\nvar REDROP_POLICY_STRICT = \"strict\";\nvar REDROP_POLICY_ANY = \"any\";\nvar SourceSelector = function (_ConnectionDragSelect) {\n  _inherits(SourceSelector, _ConnectionDragSelect);\n  var _super = _createSuper(SourceSelector);\n  function SourceSelector(selector, def, exclude) {\n    var _this;\n    _classCallCheck(this, SourceSelector);\n    _this = _super.call(this, selector, def, exclude);\n    _this.def = def;\n    _defineProperty(_assertThisInitialized(_this), \"redrop\", void 0);\n    _this.redrop = def.def.redrop || REDROP_POLICY_STRICT;\n    return _this;\n  }\n  return SourceSelector;\n}(ConnectionDragSelector);\nvar TargetSelector = function (_ConnectionDragSelect2) {\n  _inherits(TargetSelector, _ConnectionDragSelect2);\n  var _super2 = _createSuper(TargetSelector);\n  function TargetSelector(selector, def, exclude) {\n    var _this2;\n    _classCallCheck(this, TargetSelector);\n    _this2 = _super2.call(this, selector, def, exclude);\n    _this2.def = def;\n    return _this2;\n  }\n  return TargetSelector;\n}(ConnectionDragSelector);\n\nvar _edgeSortFunctions;\nfunction _placeAnchorsOnLine(element, connections, horizontal, otherMultiplier, reverse) {\n  var sizeInAxis = horizontal ? element.w : element.h;\n  var sizeInOtherAxis = horizontal ? element.h : element.w;\n  var a = [],\n      step = sizeInAxis / (connections.length + 1);\n  for (var i = 0; i < connections.length; i++) {\n    var val = (i + 1) * step,\n        other = otherMultiplier * sizeInOtherAxis;\n    if (reverse) {\n      val = sizeInAxis - val;\n    }\n    var dx = horizontal ? val : other,\n        x = element.x + dx,\n        xp = dx / element.w;\n    var dy = horizontal ? other : val,\n        y = element.y + dy,\n        yp = dy / element.h;\n    if (element.r !== 0 && element.r != null) {\n      var rotated = rotatePoint({\n        x: x,\n        y: y\n      }, element.c, element.r);\n      x = rotated.x;\n      y = rotated.y;\n    }\n    a.push({\n      x: x,\n      y: y,\n      xLoc: xp,\n      yLoc: yp,\n      c: connections[i].c\n    });\n  }\n  return a;\n}\nfunction _rightAndBottomSort(a, b) {\n  return b.theta - a.theta;\n}\nfunction _leftAndTopSort(a, b) {\n  var p1 = a.theta < 0 ? -Math.PI - a.theta : Math.PI - a.theta,\n      p2 = b.theta < 0 ? -Math.PI - b.theta : Math.PI - b.theta;\n  return p1 - p2;\n}\nvar edgeSortFunctions = (_edgeSortFunctions = {}, _defineProperty(_edgeSortFunctions, TOP, _leftAndTopSort), _defineProperty(_edgeSortFunctions, RIGHT, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, BOTTOM, _rightAndBottomSort), _defineProperty(_edgeSortFunctions, LEFT, _leftAndTopSort), _edgeSortFunctions);\nfunction isContinuous(a) {\n  return a.isContinuous === true;\n}\nfunction _isFloating(a) {\n  return a.isContinuous === true;\n}\nfunction isDynamic(a) {\n  return a.locations.length > 1;\n}\nfunction getCurrentLocation(anchor) {\n  return [anchor.currentLocation, anchor.locations[anchor.currentLocation]];\n}\nvar LightweightRouter = function () {\n  function LightweightRouter(instance) {\n    var _this = this;\n    _classCallCheck(this, LightweightRouter);\n    this.instance = instance;\n    _defineProperty(this, \"anchorLists\", new Map());\n    _defineProperty(this, \"anchorLocations\", new Map());\n    instance.bind(EVENT_INTERNAL_CONNECTION_DETACHED, function (p) {\n      if (p.sourceEndpoint._anchor.isContinuous) {\n        _this._removeEndpointFromAnchorLists(p.sourceEndpoint);\n      }\n      if (p.targetEndpoint._anchor.isContinuous) {\n        _this._removeEndpointFromAnchorLists(p.targetEndpoint);\n      }\n    });\n    instance.bind(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, function (ep) {\n      _this._removeEndpointFromAnchorLists(ep);\n    });\n  }\n  _createClass(LightweightRouter, [{\n    key: \"getAnchorOrientation\",\n    value: function getAnchorOrientation(anchor) {\n      var loc = this.anchorLocations.get(anchor.id);\n      return loc ? [loc.ox, loc.oy] : [0, 0];\n    }\n  }, {\n    key: \"_distance\",\n    value: function _distance(anchor, cx, cy, xy, wh, rotation, targetRotation) {\n      var ax = xy.x + anchor.x * wh.w,\n          ay = xy.y + anchor.y * wh.h,\n          acx = xy.x + wh.w / 2,\n          acy = xy.y + wh.h / 2;\n      if (rotation != null && rotation.length > 0) {\n        var rotated = this.instance._applyRotations([ax, ay, 0, 0], rotation);\n        ax = rotated.x;\n        ay = rotated.y;\n      }\n      return Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) + Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2));\n    }\n  }, {\n    key: \"_anchorSelector\",\n    value: function _anchorSelector(xy, wh, txy, twh, rotation, targetRotation, locations) {\n      var cx = txy.x + twh.w / 2,\n          cy = txy.y + twh.h / 2;\n      var minIdx = -1,\n          minDist = Infinity;\n      for (var i = 0; i < locations.length; i++) {\n        var d = this._distance(locations[i], cx, cy, xy, wh, rotation, targetRotation);\n        if (d < minDist) {\n          minIdx = i + 0;\n          minDist = d;\n        }\n      }\n      return [minIdx, locations[minIdx]];\n    }\n  }, {\n    key: \"_floatingAnchorCompute\",\n    value: function _floatingAnchorCompute(anchor, params) {\n      var xy = params.xy;\n      var pos = {\n        curX: xy.x + anchor.size.w / 2,\n        curY: xy.y + anchor.size.h / 2,\n        x: 0,\n        y: 0,\n        ox: 0,\n        oy: 0\n      };\n      return this._setComputedPosition(anchor, pos);\n    }\n  }, {\n    key: \"_setComputedPosition\",\n    value: function _setComputedPosition(anchor, pos, timestamp) {\n      this.anchorLocations.set(anchor.id, pos);\n      anchor.computedPosition = pos;\n      if (timestamp) {\n        anchor.timestamp = timestamp;\n      }\n      return pos;\n    }\n  }, {\n    key: \"_computeSingleLocation\",\n    value: function _computeSingleLocation(loc, xy, wh, params) {\n      var candidate = {\n        curX: xy.x + loc.x * wh.w + loc.offx,\n        curY: xy.y + loc.y * wh.h + loc.offy,\n        x: loc.x,\n        y: loc.y,\n        ox: 0,\n        oy: 0\n      };\n      var pos;\n      var rotation = params.rotation;\n      if (rotation != null && rotation.length > 0) {\n        var o = [loc.iox, loc.ioy],\n            current = {\n          x: candidate.curX,\n          y: candidate.curY,\n          cr: 0,\n          sr: 0\n        };\n        forEach(rotation, function (r) {\n          current = rotatePoint(current, r.c, r.r);\n          var _o = [Math.round(o[0] * current.cr - o[1] * current.sr), Math.round(o[1] * current.cr + o[0] * current.sr)];\n          o = _o.slice();\n        });\n        loc.ox = o[0];\n        loc.oy = o[1];\n        pos = {\n          curX: current.x,\n          curY: current.y,\n          x: loc.x,\n          y: loc.y,\n          ox: o[0],\n          oy: o[1]\n        };\n      } else {\n        loc.ox = loc.iox;\n        loc.oy = loc.ioy;\n        pos = extend({\n          ox: loc.iox,\n          oy: loc.ioy\n        }, candidate);\n      }\n      return pos;\n    }\n  }, {\n    key: \"_singleAnchorCompute\",\n    value: function _singleAnchorCompute(anchor, params) {\n      var xy = params.xy,\n          wh = params.wh,\n          timestamp = params.timestamp,\n          pos = this.anchorLocations.get(anchor.id);\n      if (pos != null && timestamp && timestamp === anchor.timestamp) {\n        return pos;\n      }\n      var _getCurrentLocation = getCurrentLocation(anchor),\n          _getCurrentLocation2 = _slicedToArray(_getCurrentLocation, 2);\n          _getCurrentLocation2[0];\n          var currentLoc = _getCurrentLocation2[1];\n      pos = this._computeSingleLocation(currentLoc, xy, wh, params);\n      return this._setComputedPosition(anchor, pos, timestamp);\n    }\n  }, {\n    key: \"_defaultAnchorCompute\",\n    value: function _defaultAnchorCompute(anchor, params) {\n      var pos;\n      if (anchor.locations.length === 1) {\n        return this._singleAnchorCompute(anchor, params);\n      }\n      var xy = params.xy,\n          wh = params.wh,\n          txy = params.txy,\n          twh = params.twh;\n      var _getCurrentLocation3 = getCurrentLocation(anchor),\n          _getCurrentLocation4 = _slicedToArray(_getCurrentLocation3, 2),\n          currentIdx = _getCurrentLocation4[0],\n          currentLoc = _getCurrentLocation4[1];\n      if (anchor.locked || txy == null || twh == null) {\n        pos = this._computeSingleLocation(currentLoc, xy, wh, params);\n      } else {\n        var _this$_anchorSelector = this._anchorSelector(xy, wh, txy, twh, params.rotation, params.tRotation, anchor.locations),\n            _this$_anchorSelector2 = _slicedToArray(_this$_anchorSelector, 2),\n            newIdx = _this$_anchorSelector2[0],\n            newLoc = _this$_anchorSelector2[1];\n        anchor.currentLocation = newIdx;\n        if (newIdx !== currentIdx) {\n          anchor.cssClass = newLoc.cls || anchor.cssClass;\n          params.element._anchorLocationChanged(anchor);\n        }\n        pos = this._computeSingleLocation(newLoc, xy, wh, params);\n      }\n      return this._setComputedPosition(anchor, pos, params.timestamp);\n    }\n  }, {\n    key: \"_placeAnchors\",\n    value: function _placeAnchors(elementId, _anchorLists) {\n      var _this2 = this;\n      var cd = this.instance.viewport.getPosition(elementId),\n          placeSomeAnchors = function placeSomeAnchors(desc, element, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\n        if (unsortedConnections.length > 0) {\n          var sc = unsortedConnections.sort(edgeSortFunctions[desc]),\n          reverse = desc === RIGHT || desc === TOP,\n              anchors = _placeAnchorsOnLine(cd, sc, isHorizontal, otherMultiplier, reverse);\n          for (var i = 0; i < anchors.length; i++) {\n            var c = anchors[i].c,\n                weAreSource = c.endpoints[0].elementId === elementId,\n                ep = weAreSource ? c.endpoints[0] : c.endpoints[1];\n            _this2._setComputedPosition(ep._anchor, {\n              curX: anchors[i].x,\n              curY: anchors[i].y,\n              x: anchors[i].xLoc,\n              y: anchors[i].yLoc,\n              ox: orientation[0],\n              oy: orientation[1]\n            });\n          }\n        }\n      };\n      placeSomeAnchors(BOTTOM, cd, _anchorLists.bottom, true, 1, [0, 1]);\n      placeSomeAnchors(TOP, cd, _anchorLists.top, true, 0, [0, -1]);\n      placeSomeAnchors(LEFT, cd, _anchorLists.left, false, 0, [-1, 0]);\n      placeSomeAnchors(RIGHT, cd, _anchorLists.right, false, 1, [1, 0]);\n    }\n  }, {\n    key: \"_updateAnchorList\",\n    value: function _updateAnchorList(lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, connsToPaint, endpointsToPaint) {\n      var endpoint = conn.endpoints[idx],\n          endpointId = endpoint.id,\n          oIdx = [1, 0][idx],\n          values = {\n        theta: theta,\n        order: order,\n        c: conn,\n        b: aBoolean,\n        elId: otherElId,\n        epId: endpointId\n      },\n          listToAddTo = lists[edgeId],\n          listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\n          candidate;\n      if (listToRemoveFrom) {\n        var rIdx = findWithFunction(listToRemoveFrom, function (e) {\n          return e.epId === endpointId;\n        });\n        if (rIdx !== -1) {\n          listToRemoveFrom.splice(rIdx, 1);\n          for (var i = 0; i < listToRemoveFrom.length; i++) {\n            candidate = listToRemoveFrom[i].c;\n            if (candidate.placeholder !== true) {\n              connsToPaint.add(candidate);\n            }\n            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[idx]);\n            endpointsToPaint.add(listToRemoveFrom[i].c.endpoints[oIdx]);\n          }\n        }\n      }\n      for (var _i = 0; _i < listToAddTo.length; _i++) {\n        candidate = listToAddTo[_i].c;\n        if (candidate.placeholder !== true) {\n          connsToPaint.add(candidate);\n        }\n        endpointsToPaint.add(listToAddTo[_i].c.endpoints[idx]);\n        endpointsToPaint.add(listToAddTo[_i].c.endpoints[oIdx]);\n      }\n      {\n        var insertIdx = reverse ? 0 : listToAddTo.length;\n        listToAddTo.splice(insertIdx, 0, values);\n      }\n      endpoint._continuousAnchorEdge = edgeId;\n    }\n  }, {\n    key: \"_removeEndpointFromAnchorLists\",\n    value: function _removeEndpointFromAnchorLists(endpoint) {\n      var listsForElement = this.anchorLists.get(endpoint.elementId);\n      var total = 0;\n      (function (list, eId) {\n        if (list) {\n          var f = function f(e) {\n            return e.epId === eId;\n          };\n          removeWithFunction(list.top, f);\n          removeWithFunction(list.left, f);\n          removeWithFunction(list.bottom, f);\n          removeWithFunction(list.right, f);\n          total += list.top.length;\n          total += list.left.length;\n          total += list.bottom.length;\n          total += list.right.length;\n        }\n      })(listsForElement, endpoint.id);\n      if (total === 0) {\n        this.anchorLists[\"delete\"](endpoint.elementId);\n      }\n      this.anchorLocations[\"delete\"](endpoint._anchor.id);\n    }\n  }, {\n    key: \"computeAnchorLocation\",\n    value: function computeAnchorLocation(anchor, params) {\n      var pos;\n      if (isContinuous(anchor)) {\n        pos = this.anchorLocations.get(anchor.id) || {\n          curX: 0,\n          curY: 0,\n          x: 0,\n          y: 0,\n          ox: 0,\n          oy: 0\n        };\n      } else if (_isFloating(anchor)) {\n        pos = this._floatingAnchorCompute(anchor, params);\n      } else {\n        pos = this._defaultAnchorCompute(anchor, params);\n      }\n      anchor.timestamp = params.timestamp;\n      return pos;\n    }\n  }, {\n    key: \"computePath\",\n    value: function computePath(connection, timestamp) {\n      var sourceInfo = this.instance.viewport.getPosition(connection.sourceId),\n          targetInfo = this.instance.viewport.getPosition(connection.targetId),\n          sE = connection.endpoints[0],\n          tE = connection.endpoints[1];\n      var sAnchorP = this.getEndpointLocation(sE, {\n        xy: sourceInfo,\n        wh: sourceInfo,\n        element: sE,\n        timestamp: timestamp,\n        rotation: this.instance._getRotations(connection.sourceId)\n      }),\n          tAnchorP = this.getEndpointLocation(tE, {\n        xy: targetInfo,\n        wh: targetInfo,\n        element: tE,\n        timestamp: timestamp,\n        rotation: this.instance._getRotations(connection.targetId)\n      });\n      connection.connector.resetBounds();\n      connection.connector.compute({\n        sourcePos: sAnchorP,\n        targetPos: tAnchorP,\n        sourceEndpoint: connection.endpoints[0],\n        targetEndpoint: connection.endpoints[1],\n        strokeWidth: connection.paintStyleInUse.strokeWidth,\n        sourceInfo: sourceInfo,\n        targetInfo: targetInfo\n      });\n    }\n  }, {\n    key: \"getEndpointLocation\",\n    value: function getEndpointLocation(endpoint, params) {\n      params = params || {};\n      var anchor = endpoint._anchor;\n      var pos = this.anchorLocations.get(anchor.id);\n      if (pos == null || params.timestamp != null && anchor.timestamp !== params.timestamp) {\n        pos = this.computeAnchorLocation(anchor, params);\n        this._setComputedPosition(anchor, pos, params.timestamp);\n      }\n      return pos;\n    }\n  }, {\n    key: \"getEndpointOrientation\",\n    value: function getEndpointOrientation(ep) {\n      return ep._anchor ? this.getAnchorOrientation(ep._anchor) : [0, 0];\n    }\n  }, {\n    key: \"setAnchorOrientation\",\n    value: function setAnchorOrientation(anchor, orientation) {\n      var anchorLoc = this.anchorLocations.get(anchor.id);\n      if (anchorLoc != null) {\n        anchorLoc.ox = orientation[0];\n        anchorLoc.oy = orientation[1];\n      }\n    }\n  }, {\n    key: \"isDynamicAnchor\",\n    value: function isDynamicAnchor(ep) {\n      return ep._anchor ? !isContinuous(ep._anchor) && ep._anchor.locations.length > 1 : false;\n    }\n  }, {\n    key: \"isFloating\",\n    value: function isFloating(ep) {\n      return ep._anchor ? _isFloating(ep._anchor) : false;\n    }\n  }, {\n    key: \"prepareAnchor\",\n    value: function prepareAnchor(params) {\n      return makeLightweightAnchorFromSpec(params);\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw(elementId, timestamp, offsetToUI) {\n      var _this3 = this;\n      var connectionsToPaint = new Set(),\n          endpointsToPaint = new Set(),\n          anchorsToUpdate = new Set();\n      if (!this.instance._suspendDrawing) {\n        var ep = this.instance.endpointsByElement[elementId] || [];\n        timestamp = timestamp || uuid();\n        var orientationCache = {},\n            a,\n            anEndpoint;\n        for (var i = 0; i < ep.length; i++) {\n          anEndpoint = ep[i];\n          endpointsToPaint.add(anEndpoint);\n          a = anEndpoint._anchor;\n          if (anEndpoint.connections.length === 0) {\n            if (isContinuous(a)) {\n              if (!this.anchorLists.has(elementId)) {\n                this.anchorLists.set(elementId, {\n                  top: [],\n                  right: [],\n                  bottom: [],\n                  left: []\n                });\n              }\n              this._updateAnchorList(this.anchorLists.get(elementId), -Math.PI / 2, 0, {\n                endpoints: [anEndpoint, anEndpoint],\n                placeholder: true\n              }, false, elementId, 0, false, getDefaultFace(a), connectionsToPaint, endpointsToPaint);\n              anchorsToUpdate.add(elementId);\n            }\n          } else {\n            for (var _i2 = 0; _i2 < anEndpoint.connections.length; _i2++) {\n              var conn = anEndpoint.connections[_i2],\n                  sourceId = conn.sourceId,\n                  targetId = conn.targetId,\n                  sourceContinuous = isContinuous(conn.endpoints[0]._anchor),\n                  targetContinuous = isContinuous(conn.endpoints[1]._anchor);\n              if (sourceContinuous || targetContinuous) {\n                var c1 = (conn.endpoints[0]._anchor.faces || []).join(\"-\"),\n                    c2 = (conn.endpoints[1]._anchor.faces || []).join(\"-\"),\n                    oKey = [sourceId, c1, targetId, c2].join(\"-\"),\n                    o = orientationCache[oKey],\n                    oIdx = conn.sourceId === elementId ? 1 : 0;\n                if (sourceContinuous && !this.anchorLists.has(sourceId)) {\n                  this.anchorLists.set(sourceId, {\n                    top: [],\n                    right: [],\n                    bottom: [],\n                    left: []\n                  });\n                }\n                if (targetContinuous && !this.anchorLists.has(targetId)) {\n                  this.anchorLists.set(targetId, {\n                    top: [],\n                    right: [],\n                    bottom: [],\n                    left: []\n                  });\n                }\n                var td = this.instance.viewport.getPosition(targetId),\n                    sd = this.instance.viewport.getPosition(sourceId);\n                if (targetId === sourceId && (sourceContinuous || targetContinuous)) {\n                  this._updateAnchorList(this.anchorLists.get(sourceId), -Math.PI / 2, 0, conn, false, targetId, 0, false, TOP, connectionsToPaint, endpointsToPaint);\n                  this._updateAnchorList(this.anchorLists.get(targetId), -Math.PI / 2, 0, conn, false, sourceId, 1, false, TOP, connectionsToPaint, endpointsToPaint);\n                } else {\n                  var sourceRotation = this.instance._getRotations(sourceId);\n                  var targetRotation = this.instance._getRotations(targetId);\n                  if (!o) {\n                    o = this._calculateOrientation(sourceId, targetId, sd, td, conn.endpoints[0]._anchor, conn.endpoints[1]._anchor, sourceRotation, targetRotation);\n                    orientationCache[oKey] = o;\n                  }\n                  if (sourceContinuous) {\n                    this._updateAnchorList(this.anchorLists.get(sourceId), o.theta, 0, conn, false, targetId, 0, false, o.a[0], connectionsToPaint, endpointsToPaint);\n                  }\n                  if (targetContinuous) {\n                    this._updateAnchorList(this.anchorLists.get(targetId), o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], connectionsToPaint, endpointsToPaint);\n                  }\n                }\n                if (sourceContinuous) {\n                  anchorsToUpdate.add(sourceId);\n                }\n                if (targetContinuous) {\n                  anchorsToUpdate.add(targetId);\n                }\n                connectionsToPaint.add(conn);\n                if (sourceContinuous && oIdx === 0 || targetContinuous && oIdx === 1) {\n                  endpointsToPaint.add(conn.endpoints[oIdx]);\n                }\n              } else {\n                var otherEndpoint = anEndpoint.connections[_i2].endpoints[conn.sourceId === elementId ? 1 : 0],\n                    otherAnchor = otherEndpoint._anchor;\n                if (isDynamic(otherAnchor)) {\n                  this.instance._paintEndpoint(otherEndpoint, {\n                    elementWithPrecedence: elementId,\n                    timestamp: timestamp\n                  });\n                  connectionsToPaint.add(anEndpoint.connections[_i2]);\n                  for (var k = 0; k < otherEndpoint.connections.length; k++) {\n                    if (otherEndpoint.connections[k] !== anEndpoint.connections[_i2]) {\n                      connectionsToPaint.add(otherEndpoint.connections[k]);\n                    }\n                  }\n                } else {\n                  connectionsToPaint.add(anEndpoint.connections[_i2]);\n                }\n              }\n            }\n          }\n        }\n        anchorsToUpdate.forEach(function (anchor) {\n          _this3._placeAnchors(anchor, _this3.anchorLists.get(anchor));\n        });\n        endpointsToPaint.forEach(function (ep) {\n          var cd = _this3.instance.viewport.getPosition(ep.elementId);\n          _this3.instance._paintEndpoint(ep, {\n            timestamp: timestamp,\n            offset: cd\n          });\n        });\n        connectionsToPaint.forEach(function (c) {\n          _this3.instance._paintConnection(c, {\n            timestamp: timestamp\n          });\n        });\n      }\n      return {\n        c: connectionsToPaint,\n        e: endpointsToPaint\n      };\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.anchorLocations.clear();\n      this.anchorLists.clear();\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(endpoint, anchor) {\n      if (anchor != null) {\n        endpoint._anchor = anchor;\n      }\n    }\n  }, {\n    key: \"setConnectionAnchors\",\n    value: function setConnectionAnchors(conn, anchors) {\n      conn.endpoints[0]._anchor = anchors[0];\n      conn.endpoints[1]._anchor = anchors[1];\n    }\n  }, {\n    key: \"_calculateOrientation\",\n    value: function _calculateOrientation(sourceId, targetId, sd, td, sourceAnchor, targetAnchor, sourceRotation, targetRotation) {\n      var _this4 = this;\n      var Orientation = {\n        HORIZONTAL: \"horizontal\",\n        VERTICAL: \"vertical\",\n        DIAGONAL: \"diagonal\",\n        IDENTITY: \"identity\"\n      };\n      if (sourceId === targetId) {\n        return {\n          orientation: Orientation.IDENTITY,\n          a: [TOP, TOP]\n        };\n      }\n      var theta = Math.atan2(td.c.y - sd.c.y, td.c.x - sd.c.x),\n          theta2 = Math.atan2(sd.c.y - td.c.y, sd.c.x - td.c.x);\n      var candidates = [],\n          midpoints = {};\n      (function (types, dim) {\n        for (var i = 0; i < types.length; i++) {\n          var _midpoints$types$i;\n          midpoints[types[i]] = (_midpoints$types$i = {}, _defineProperty(_midpoints$types$i, LEFT, {\n            x: dim[i][0].x,\n            y: dim[i][0].c.y\n          }), _defineProperty(_midpoints$types$i, RIGHT, {\n            x: dim[i][0].x + dim[i][0].w,\n            y: dim[i][0].c.y\n          }), _defineProperty(_midpoints$types$i, TOP, {\n            x: dim[i][0].c.x,\n            y: dim[i][0].y\n          }), _defineProperty(_midpoints$types$i, BOTTOM, {\n            x: dim[i][0].c.x,\n            y: dim[i][0].y + dim[i][0].h\n          }), _midpoints$types$i);\n          if (dim[i][1] != null && dim[i][1].length > 0) {\n            for (var axis in midpoints[types[i]]) {\n              midpoints[types[i]][axis] = _this4.instance._applyRotationsXY(midpoints[types[i]][axis], dim[i][1]);\n            }\n          }\n        }\n      })([SOURCE, TARGET], [[sd, sourceRotation], [td, targetRotation]]);\n      var FACES = [TOP, LEFT, RIGHT, BOTTOM];\n      for (var sf = 0; sf < FACES.length; sf++) {\n        for (var tf = 0; tf < FACES.length; tf++) {\n          candidates.push({\n            source: FACES[sf],\n            target: FACES[tf],\n            dist: lineLength(midpoints.source[FACES[sf]], midpoints.target[FACES[tf]])\n          });\n        }\n      }\n      candidates.sort(function (a, b) {\n        if (a.dist < b.dist) {\n          return -1;\n        } else if (b.dist < a.dist) {\n          return 1;\n        } else {\n          var _axisIndices;\n          var axisIndices = (_axisIndices = {}, _defineProperty(_axisIndices, LEFT, 0), _defineProperty(_axisIndices, TOP, 1), _defineProperty(_axisIndices, RIGHT, 2), _defineProperty(_axisIndices, BOTTOM, 3), _axisIndices),\n              ais = axisIndices[a.source],\n              bis = axisIndices[b.source],\n              ait = axisIndices[a.target],\n              bit = axisIndices[b.target];\n          return ais < bis ? -1 : bis < ais ? 1 : ait < bit ? -1 : bit < ait ? 1 : 0;\n        }\n      });\n      var sourceEdge = candidates[0].source,\n          targetEdge = candidates[0].target;\n      for (var i = 0; i < candidates.length; i++) {\n        if (isContinuous(sourceAnchor) && sourceAnchor.locked) {\n          sourceEdge = sourceAnchor.currentFace;\n        } else if (!sourceAnchor.isContinuous || isEdgeSupported(sourceAnchor, candidates[i].source)) {\n          sourceEdge = candidates[i].source;\n        } else {\n          sourceEdge = null;\n        }\n        if (targetAnchor.isContinuous && targetAnchor.locked) {\n          targetEdge = targetAnchor.currentFace;\n        } else if (!targetAnchor.isContinuous || isEdgeSupported(targetAnchor, candidates[i].target)) {\n          targetEdge = candidates[i].target;\n        } else {\n          targetEdge = null;\n        }\n        if (sourceEdge != null && targetEdge != null) {\n          break;\n        }\n      }\n      if (sourceAnchor.isContinuous) {\n        this.setCurrentFace(sourceAnchor, sourceEdge);\n      }\n      if (targetAnchor.isContinuous) {\n        this.setCurrentFace(targetAnchor, targetEdge);\n      }\n      return {\n        a: [sourceEdge, targetEdge],\n        theta: theta,\n        theta2: theta2\n      };\n    }\n  }, {\n    key: \"setCurrentFace\",\n    value: function setCurrentFace(a, face, overrideLock) {\n      a.currentFace = face;\n      if (overrideLock && a.lockedFace != null) {\n        a.lockedFace = a.currentFace;\n      }\n    }\n  }, {\n    key: \"lock\",\n    value: function lock(a) {\n      a.locked = true;\n      if (isContinuous(a)) {\n        a.lockedFace = a.currentFace;\n      }\n    }\n  }, {\n    key: \"unlock\",\n    value: function unlock(a) {\n      a.locked = false;\n      if (isContinuous(a)) {\n        a.lockedFace = null;\n      }\n    }\n  }, {\n    key: \"selectAnchorLocation\",\n    value: function selectAnchorLocation(a, coords) {\n      var idx = findWithFunction(a.locations, function (loc) {\n        return loc.x === coords.x && loc.y === coords.y;\n      });\n      if (idx !== -1) {\n        a.currentLocation = idx;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"lockCurrentAxis\",\n    value: function lockCurrentAxis(a) {\n      if (a.currentFace != null) {\n        a.lockedAxis = a.currentFace === LEFT || a.currentFace === RIGHT ? X_AXIS_FACES : Y_AXIS_FACES;\n      }\n    }\n  }, {\n    key: \"unlockCurrentAxis\",\n    value: function unlockCurrentAxis(a) {\n      a.lockedAxis = null;\n    }\n  }, {\n    key: \"anchorsEqual\",\n    value: function anchorsEqual(a1, a2) {\n      if (!a1 || !a2) {\n        return false;\n      }\n      var l1 = a1.locations[a1.currentLocation],\n          l2 = a2.locations[a2.currentLocation];\n      return l1.x === l2.x && l1.y === l2.y && l1.offx === l2.offx && l1.offy === l2.offy && l1.ox === l2.ox && l1.oy === l2.oy;\n    }\n  }]);\n  return LightweightRouter;\n}();\n\nfunction _scopeMatch(e1, e2) {\n  var s1 = e1.scope.split(/\\s/),\n      s2 = e2.scope.split(/\\s/);\n  for (var i = 0; i < s1.length; i++) {\n    for (var j = 0; j < s2.length; j++) {\n      if (s2[j] === s1[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction prepareList(instance, input, doNotGetIds) {\n  var r = [];\n  var _resolveId = function _resolveId(i) {\n    if (isString(i)) {\n      return i;\n    } else {\n      return instance.getId(i);\n    }\n  };\n  if (input) {\n    if (typeof input === 'string') {\n      if (input === \"*\") {\n        return input;\n      }\n      r.push(input);\n    } else {\n      if (doNotGetIds) {\n        r = input;\n      } else {\n        if (input.length != null) {\n          var _r;\n          (_r = r).push.apply(_r, _toConsumableArray(_toConsumableArray(input).map(_resolveId)));\n        } else {\n          r.push(_resolveId(input));\n        }\n      }\n    }\n  }\n  return r;\n}\nfunction addManagedEndpoint(managedElement, ep) {\n  if (managedElement != null) {\n    managedElement.endpoints.push(ep);\n  }\n}\nfunction removeManagedEndpoint(managedElement, endpoint) {\n  if (managedElement != null) {\n    removeWithFunction(managedElement.endpoints, function (ep) {\n      return ep === endpoint;\n    });\n  }\n}\nfunction addManagedConnection(connection, sourceEl, targetEl) {\n  if (sourceEl != null) {\n    sourceEl.connections.push(connection);\n    if (sourceEl.connections.length === 1) {\n      connection.instance.addClass(connection.source, connection.instance.connectedClass);\n    }\n  }\n  if (targetEl != null) {\n    if (sourceEl == null || connection.sourceId !== connection.targetId) {\n      targetEl.connections.push(connection);\n      if (targetEl.connections.length === 1) {\n        connection.instance.addClass(connection.target, connection.instance.connectedClass);\n      }\n    }\n  }\n}\nfunction removeManagedConnection(connection, sourceEl, targetEl) {\n  if (sourceEl != null) {\n    var sourceCount = sourceEl.connections.length;\n    removeWithFunction(sourceEl.connections, function (_c) {\n      return connection.id === _c.id;\n    });\n    if (sourceCount > 0 && sourceEl.connections.length === 0) {\n      connection.instance.removeClass(connection.source, connection.instance.connectedClass);\n    }\n  }\n  if (targetEl != null) {\n    var targetCount = targetEl.connections.length;\n    if (sourceEl == null || connection.sourceId !== connection.targetId) {\n      removeWithFunction(targetEl.connections, function (_c) {\n        return connection.id === _c.id;\n      });\n    }\n    if (targetCount > 0 && targetEl.connections.length === 0) {\n      connection.instance.removeClass(connection.target, connection.instance.connectedClass);\n    }\n  }\n}\nvar JsPlumbInstance = function (_EventGenerator) {\n  _inherits(JsPlumbInstance, _EventGenerator);\n  var _super = _createSuper(JsPlumbInstance);\n  function JsPlumbInstance(_instanceIndex, defaults) {\n    var _this;\n    _classCallCheck(this, JsPlumbInstance);\n    _this = _super.call(this);\n    _this._instanceIndex = _instanceIndex;\n    _defineProperty(_assertThisInitialized(_this), \"defaults\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_initialDefaults\", {});\n    _defineProperty(_assertThisInitialized(_this), \"isConnectionBeingDragged\", false);\n    _defineProperty(_assertThisInitialized(_this), \"currentlyDragging\", false);\n    _defineProperty(_assertThisInitialized(_this), \"hoverSuspended\", false);\n    _defineProperty(_assertThisInitialized(_this), \"_suspendDrawing\", false);\n    _defineProperty(_assertThisInitialized(_this), \"_suspendedAt\", null);\n    _defineProperty(_assertThisInitialized(_this), \"connectorClass\", CLASS_CONNECTOR);\n    _defineProperty(_assertThisInitialized(_this), \"connectorOutlineClass\", CLASS_CONNECTOR_OUTLINE);\n    _defineProperty(_assertThisInitialized(_this), \"connectedClass\", CLASS_CONNECTED);\n    _defineProperty(_assertThisInitialized(_this), \"endpointClass\", CLASS_ENDPOINT);\n    _defineProperty(_assertThisInitialized(_this), \"endpointConnectedClass\", CLASS_ENDPOINT_CONNECTED);\n    _defineProperty(_assertThisInitialized(_this), \"endpointFullClass\", CLASS_ENDPOINT_FULL);\n    _defineProperty(_assertThisInitialized(_this), \"endpointDropAllowedClass\", CLASS_ENDPOINT_DROP_ALLOWED);\n    _defineProperty(_assertThisInitialized(_this), \"endpointDropForbiddenClass\", CLASS_ENDPOINT_DROP_FORBIDDEN);\n    _defineProperty(_assertThisInitialized(_this), \"endpointAnchorClassPrefix\", CLASS_ENDPOINT_ANCHOR_PREFIX);\n    _defineProperty(_assertThisInitialized(_this), \"overlayClass\", CLASS_OVERLAY);\n    _defineProperty(_assertThisInitialized(_this), \"connections\", []);\n    _defineProperty(_assertThisInitialized(_this), \"endpointsByElement\", {});\n    _defineProperty(_assertThisInitialized(_this), \"endpointsByUUID\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"sourceSelectors\", []);\n    _defineProperty(_assertThisInitialized(_this), \"targetSelectors\", []);\n    _defineProperty(_assertThisInitialized(_this), \"allowNestedGroups\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_curIdStamp\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", new Viewport(_assertThisInitialized(_this)));\n    _defineProperty(_assertThisInitialized(_this), \"router\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"groupManager\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_connectionTypes\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"_endpointTypes\", new Map());\n    _defineProperty(_assertThisInitialized(_this), \"_container\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_managedElements\", {});\n    _defineProperty(_assertThisInitialized(_this), \"DEFAULT_SCOPE\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_zoom\", 1);\n    _this.defaults = {\n      anchor: AnchorLocations.Bottom,\n      anchors: [null, null],\n      connectionsDetachable: true,\n      connectionOverlays: [],\n      connector: StraightConnector.type,\n      container: null,\n      endpoint: DotEndpoint.type,\n      endpointOverlays: [],\n      endpoints: [null, null],\n      endpointStyle: {\n        fill: \"#456\"\n      },\n      endpointStyles: [null, null],\n      endpointHoverStyle: null,\n      endpointHoverStyles: [null, null],\n      hoverPaintStyle: null,\n      listStyle: {},\n      maxConnections: 1,\n      paintStyle: {\n        strokeWidth: 2,\n        stroke: \"#456\"\n      },\n      reattachConnections: false,\n      scope: \"jsplumb_defaultscope\",\n      allowNestedGroups: true\n    };\n    if (defaults) {\n      extend(_this.defaults, defaults);\n    }\n    extend(_this._initialDefaults, _this.defaults);\n    _this.DEFAULT_SCOPE = _this.defaults.scope;\n    _this.allowNestedGroups = _this._initialDefaults.allowNestedGroups !== false;\n    _this.router = new LightweightRouter(_assertThisInitialized(_this));\n    _this.groupManager = new GroupManager(_assertThisInitialized(_this));\n    _this.setContainer(_this._initialDefaults.container);\n    return _this;\n  }\n  _createClass(JsPlumbInstance, [{\n    key: \"defaultScope\",\n    get: function get() {\n      return this.DEFAULT_SCOPE;\n    }\n  }, {\n    key: \"currentZoom\",\n    get: function get() {\n      return this._zoom;\n    }\n  }, {\n    key: \"areDefaultAnchorsSet\",\n    value: function areDefaultAnchorsSet() {\n      return this.validAnchorsSpec(this.defaults.anchors);\n    }\n  }, {\n    key: \"validAnchorsSpec\",\n    value: function validAnchorsSpec(anchors) {\n      return anchors != null && anchors[0] != null && anchors[1] != null;\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this._container;\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(z, repaintEverything) {\n      this._zoom = z;\n      this.fire(EVENT_ZOOM, this._zoom);\n      if (repaintEverything) {\n        this.repaintEverything();\n      }\n      return true;\n    }\n  }, {\n    key: \"_idstamp\",\n    value: function _idstamp() {\n      return \"\" + this._curIdStamp++;\n    }\n  }, {\n    key: \"checkCondition\",\n    value: function checkCondition(conditionName, args) {\n      var l = this.getListener(conditionName),\n          r = true;\n      if (l && l.length > 0) {\n        var values = Array.prototype.slice.call(arguments, 1);\n        try {\n          for (var i = 0, j = l.length; i < j; i++) {\n            r = r && l[i].apply(l[i], values);\n          }\n        } catch (e) {\n          log(\"cannot check condition [\" + conditionName + \"]\" + e);\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"getId\",\n    value: function getId(element, uuid) {\n      if (element == null) {\n        return null;\n      }\n      var id = this.getAttribute(element, ATTRIBUTE_MANAGED);\n      if (!id || id === \"undefined\") {\n        if (arguments.length === 2 && arguments[1] !== undefined) {\n          id = uuid;\n        } else if (arguments.length === 1 || arguments.length === 3 && !arguments[2]) {\n          id = \"jsplumb-\" + this._instanceIndex + \"-\" + this._idstamp();\n        }\n        this.setAttribute(element, ATTRIBUTE_MANAGED, id);\n      }\n      return id;\n    }\n  }, {\n    key: \"getConnections\",\n    value: function getConnections(options, flat) {\n      if (!options) {\n        options = {};\n      } else if (options.constructor === String) {\n        options = {\n          \"scope\": options\n        };\n      }\n      var scope = options.scope || this.defaultScope,\n          scopes = prepareList(this, scope, true),\n          sources = prepareList(this, options.source),\n          targets = prepareList(this, options.target),\n          results = !flat && scopes.length > 1 ? {} : [],\n          _addOne = function _addOne(scope, obj) {\n        if (!flat && scopes.length > 1) {\n          var ss = results[scope];\n          if (ss == null) {\n            ss = results[scope] = [];\n          }\n          ss.push(obj);\n        } else {\n          results.push(obj);\n        }\n      };\n      for (var j = 0, jj = this.connections.length; j < jj; j++) {\n        var _c2 = this.connections[j],\n            sourceId = _c2.proxies && _c2.proxies[0] ? _c2.proxies[0].originalEp.elementId : _c2.sourceId,\n            targetId = _c2.proxies && _c2.proxies[1] ? _c2.proxies[1].originalEp.elementId : _c2.targetId;\n        if (filterList(scopes, _c2.scope) && filterList(sources, sourceId) && filterList(targets, targetId)) {\n          _addOne(_c2.scope, _c2);\n        }\n      }\n      return results;\n    }\n  }, {\n    key: \"select\",\n    value: function select(params) {\n      params = params || {};\n      params.scope = params.scope || \"*\";\n      return new ConnectionSelection(this, params.connections || this.getConnections(params, true));\n    }\n  }, {\n    key: \"selectEndpoints\",\n    value: function selectEndpoints(params) {\n      params = params || {};\n      params.scope = params.scope || WILDCARD;\n      var noElementFilters = !params.element && !params.source && !params.target,\n          elements = noElementFilters ? WILDCARD : prepareList(this, params.element),\n          sources = noElementFilters ? WILDCARD : prepareList(this, params.source),\n          targets = noElementFilters ? WILDCARD : prepareList(this, params.target),\n          scopes = prepareList(this, params.scope, true);\n      var ep = [];\n      for (var _el2 in this.endpointsByElement) {\n        var either = filterList(elements, _el2, true),\n            source = filterList(sources, _el2, true),\n            sourceMatchExact = sources !== \"*\",\n            target = filterList(targets, _el2, true),\n            targetMatchExact = targets !== \"*\";\n        if (either || source || target) {\n          inner: for (var i = 0, ii = this.endpointsByElement[_el2].length; i < ii; i++) {\n            var _ep = this.endpointsByElement[_el2][i];\n            if (filterList(scopes, _ep.scope, true)) {\n              var noMatchSource = sourceMatchExact && sources.length > 0 && !_ep.isSource,\n                  noMatchTarget = targetMatchExact && targets.length > 0 && !_ep.isTarget;\n              if (noMatchSource || noMatchTarget) {\n                continue inner;\n              }\n              ep.push(_ep);\n            }\n          }\n        }\n      }\n      return new EndpointSelection(this, ep);\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(c) {\n      this._container = c;\n      this.fire(EVENT_CONTAINER_CHANGE, this._container);\n    }\n  }, {\n    key: \"_set\",\n    value: function _set(c, el, idx) {\n      var stTypes = [{\n        el: \"source\",\n        elId: \"sourceId\"\n      }, {\n        el: \"target\",\n        elId: \"targetId\"\n      }];\n      var ep,\n          _st = stTypes[idx],\n          cId = c[_st.elId],\n          sid,\n          oldEndpoint = c.endpoints[idx];\n      var evtParams = {\n        index: idx,\n        originalEndpoint: oldEndpoint,\n        originalSourceId: idx === 0 ? cId : c.sourceId,\n        newSourceId: c.sourceId,\n        originalTargetId: idx === 1 ? cId : c.targetId,\n        newTargetId: c.targetId,\n        connection: c,\n        newEndpoint: oldEndpoint\n      };\n      if (el instanceof Endpoint) {\n        ep = el;\n        ep.addConnection(c);\n      } else {\n        sid = this.getId(el);\n        if (sid === c[_st.elId]) {\n          ep = null;\n        } else {\n          ep = c.makeEndpoint(idx === 0, el, sid);\n        }\n      }\n      if (ep != null) {\n        evtParams.newEndpoint = ep;\n        oldEndpoint.detachFromConnection(c);\n        c.endpoints[idx] = ep;\n        c[_st.el] = ep.element;\n        c[_st.elId] = ep.elementId;\n        evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\n        this.fireMoveEvent(evtParams);\n        this._paintConnection(c);\n      }\n      return evtParams;\n    }\n  }, {\n    key: \"setSource\",\n    value: function setSource(connection, el) {\n      removeManagedConnection(connection, this._managedElements[connection.sourceId]);\n      var p = this._set(connection, el, 0);\n      addManagedConnection(connection, this._managedElements[p.newSourceId]);\n    }\n  }, {\n    key: \"setTarget\",\n    value: function setTarget(connection, el) {\n      removeManagedConnection(connection, this._managedElements[connection.targetId]);\n      var p = this._set(connection, el, 1);\n      addManagedConnection(connection, this._managedElements[p.newTargetId]);\n    }\n  }, {\n    key: \"isHoverSuspended\",\n    value: function isHoverSuspended() {\n      return this.hoverSuspended;\n    }\n  }, {\n    key: \"setSuspendDrawing\",\n    value: function setSuspendDrawing(val, repaintAfterwards) {\n      var curVal = this._suspendDrawing;\n      this._suspendDrawing = val;\n      if (val) {\n        this._suspendedAt = \"\" + new Date().getTime();\n      } else {\n        this._suspendedAt = null;\n        this.viewport.recomputeBounds();\n      }\n      if (repaintAfterwards) {\n        this.repaintEverything();\n      }\n      return curVal;\n    }\n  }, {\n    key: \"getSuspendedAt\",\n    value: function getSuspendedAt() {\n      return this._suspendedAt;\n    }\n  }, {\n    key: \"batch\",\n    value: function batch(fn, doNotRepaintAfterwards) {\n      var _wasSuspended = this._suspendDrawing === true;\n      if (!_wasSuspended) {\n        this.setSuspendDrawing(true);\n      }\n      fn();\n      if (!_wasSuspended) {\n        this.setSuspendDrawing(false, !doNotRepaintAfterwards);\n      }\n    }\n  }, {\n    key: \"each\",\n    value: function each(spec, fn) {\n      if (spec == null) {\n        return;\n      }\n      if (spec.length != null) {\n        for (var i = 0; i < spec.length; i++) {\n          fn(spec[i]);\n        }\n      } else {\n        fn(spec);\n      }\n      return this;\n    }\n  }, {\n    key: \"updateOffset\",\n    value: function updateOffset(params) {\n      var elId = params.elId;\n      if (params.recalc) {\n        return this.viewport.refreshElement(elId);\n      } else {\n        return this.viewport.getPosition(elId);\n      }\n    }\n  }, {\n    key: \"deleteConnection\",\n    value: function deleteConnection(connection, params) {\n      if (connection != null && connection.deleted !== true) {\n        params = params || {};\n        if (params.force || functionChain(true, false, [[connection.endpoints[0], IS_DETACH_ALLOWED, [connection]], [connection.endpoints[1], IS_DETACH_ALLOWED, [connection]], [connection, IS_DETACH_ALLOWED, [connection]], [this, CHECK_CONDITION, [INTERCEPT_BEFORE_DETACH, connection]]])) {\n          removeManagedConnection(connection, this._managedElements[connection.sourceId], this._managedElements[connection.targetId]);\n          this.fireDetachEvent(connection, !connection.pending && params.fireEvent !== false, params.originalEvent);\n          var _sourceEndpoint = connection.endpoints[0];\n          var targetEndpoint = connection.endpoints[1];\n          if (_sourceEndpoint !== params.endpointToIgnore) {\n            _sourceEndpoint.detachFromConnection(connection, null, true);\n          }\n          if (targetEndpoint !== params.endpointToIgnore) {\n            targetEndpoint.detachFromConnection(connection, null, true);\n          }\n          removeWithFunction(this.connections, function (_c) {\n            return connection.id === _c.id;\n          });\n          connection.destroy();\n          if (_sourceEndpoint !== params.endpointToIgnore && _sourceEndpoint.deleteOnEmpty && _sourceEndpoint.connections.length === 0) {\n            this.deleteEndpoint(_sourceEndpoint);\n          }\n          if (targetEndpoint !== params.endpointToIgnore && targetEndpoint.deleteOnEmpty && targetEndpoint.connections.length === 0) {\n            this.deleteEndpoint(targetEndpoint);\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"deleteEveryConnection\",\n    value: function deleteEveryConnection(params) {\n      var _this2 = this;\n      params = params || {};\n      var count = this.connections.length,\n          deletedCount = 0;\n      this.batch(function () {\n        for (var i = 0; i < count; i++) {\n          deletedCount += _this2.deleteConnection(_this2.connections[0], params) ? 1 : 0;\n        }\n      });\n      return deletedCount;\n    }\n  }, {\n    key: \"deleteConnectionsForElement\",\n    value: function deleteConnectionsForElement(el, params) {\n      var id = this.getId(el),\n          m = this._managedElements[id];\n      if (m) {\n        var l = m.connections.length;\n        for (var i = 0; i < l; i++) {\n          this.deleteConnection(m.connections[0], params);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"fireDetachEvent\",\n    value: function fireDetachEvent(jpc, doFireEvent, originalEvent) {\n      var argIsConnection = jpc.id != null,\n          params = argIsConnection ? {\n        connection: jpc,\n        source: jpc.source,\n        target: jpc.target,\n        sourceId: jpc.sourceId,\n        targetId: jpc.targetId,\n        sourceEndpoint: jpc.endpoints[0],\n        targetEndpoint: jpc.endpoints[1]\n      } : jpc;\n      if (doFireEvent) {\n        this.fire(EVENT_CONNECTION_DETACHED, params, originalEvent);\n      }\n      this.fire(EVENT_INTERNAL_CONNECTION_DETACHED, params, originalEvent);\n    }\n  }, {\n    key: \"fireMoveEvent\",\n    value: function fireMoveEvent(params, evt) {\n      this.fire(EVENT_CONNECTION_MOVED, params, evt);\n    }\n  }, {\n    key: \"manageAll\",\n    value: function manageAll(elements, recalc) {\n      var nl = isString(elements) ? this.getSelector(this.getContainer(), elements) : elements;\n      for (var i = 0; i < nl.length; i++) {\n        this.manage(nl[i], null, recalc);\n      }\n    }\n  }, {\n    key: \"manage\",\n    value: function manage(element, internalId, _recalc) {\n      if (this.getAttribute(element, ATTRIBUTE_MANAGED) == null) {\n        internalId = internalId || this.getAttribute(element, \"id\") || uuid();\n        this.setAttribute(element, ATTRIBUTE_MANAGED, internalId);\n      }\n      var elId = this.getId(element);\n      if (!this._managedElements[elId]) {\n        var obj = {\n          el: element,\n          endpoints: [],\n          connections: [],\n          rotation: 0,\n          data: {}\n        };\n        this._managedElements[elId] = obj;\n        if (this._suspendDrawing) {\n          obj.viewportElement = this.viewport.registerElement(elId, true);\n        } else {\n          obj.viewportElement = this.updateOffset({\n            elId: elId,\n            recalc: true\n          });\n        }\n        this.fire(EVENT_MANAGE_ELEMENT, {\n          el: element\n        });\n      } else {\n        if (_recalc) {\n          this._managedElements[elId].viewportElement = this.updateOffset({\n            elId: elId,\n            timestamp: null,\n            recalc: true\n          });\n        }\n      }\n      return this._managedElements[elId];\n    }\n  }, {\n    key: \"getManagedData\",\n    value: function getManagedData(elementId, dataIdentifier, key) {\n      if (this._managedElements[elementId]) {\n        var data = this._managedElements[elementId].data[dataIdentifier];\n        return data != null ? data[key] : null;\n      }\n    }\n  }, {\n    key: \"setManagedData\",\n    value: function setManagedData(elementId, dataIdentifier, key, data) {\n      if (this._managedElements[elementId]) {\n        this._managedElements[elementId].data[dataIdentifier] = this._managedElements[elementId].data[dataIdentifier] || {};\n        this._managedElements[elementId].data[dataIdentifier][key] = data;\n      }\n    }\n  }, {\n    key: \"getManagedElement\",\n    value: function getManagedElement(id) {\n      return this._managedElements[id] ? this._managedElements[id].el : null;\n    }\n  }, {\n    key: \"unmanage\",\n    value: function unmanage(el, removeElement) {\n      var _this3 = this;\n      this.removeAllEndpoints(el, true);\n      var _one = function _one(_el) {\n        var id = _this3.getId(_el);\n        _this3.removeAttribute(_el, ATTRIBUTE_MANAGED);\n        delete _this3._managedElements[id];\n        _this3.viewport.remove(id);\n        _this3.fire(EVENT_UNMANAGE_ELEMENT, {\n          el: _el\n        });\n        if (_el && removeElement) {\n          _this3._removeElement(_el);\n        }\n      };\n      this._getAssociatedElements(el).map(_one);\n      _one(el);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(element, rotation, _doNotRepaint) {\n      var elementId = this.getId(element);\n      if (this._managedElements[elementId]) {\n        this._managedElements[elementId].rotation = rotation;\n        this.viewport.rotateElement(elementId, rotation);\n        if (_doNotRepaint !== true) {\n          return this.revalidate(element);\n        }\n      }\n      return {\n        c: new Set(),\n        e: new Set()\n      };\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation(elementId) {\n      var entry = this._managedElements[elementId];\n      if (entry != null) {\n        return entry.rotation || 0;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_getRotations\",\n    value: function _getRotations(elementId) {\n      var _this4 = this;\n      var rotations = [];\n      var entry = this._managedElements[elementId];\n      var _oneLevel = function _oneLevel(e) {\n        if (e.group != null) {\n          var gEntry = _this4._managedElements[e.group];\n          if (gEntry != null) {\n            rotations.push({\n              r: gEntry.viewportElement.r,\n              c: gEntry.viewportElement.c\n            });\n            _oneLevel(gEntry);\n          }\n        }\n      };\n      if (entry != null) {\n        rotations.push({\n          r: entry.viewportElement.r || 0,\n          c: entry.viewportElement.c\n        });\n        _oneLevel(entry);\n      }\n      return rotations;\n    }\n  }, {\n    key: \"_applyRotations\",\n    value: function _applyRotations(point, rotations) {\n      var sl = point.slice();\n      var current = {\n        x: sl[0],\n        y: sl[1],\n        cr: 0,\n        sr: 0\n      };\n      forEach(rotations, function (rotation) {\n        current = rotatePoint(current, rotation.c, rotation.r);\n      });\n      return current;\n    }\n  }, {\n    key: \"_applyRotationsXY\",\n    value: function _applyRotationsXY(point, rotations) {\n      forEach(rotations, function (rotation) {\n        point = rotatePoint(point, rotation.c, rotation.r);\n      });\n      return point;\n    }\n  }, {\n    key: \"_internal_newEndpoint\",\n    value: function _internal_newEndpoint(params) {\n      var _p = extend({}, params);\n      var managedElement = this.manage(_p.element);\n      _p.elementId = this.getId(_p.element);\n      _p.id = \"ep_\" + this._idstamp();\n      var ep = new Endpoint(this, _p);\n      addManagedEndpoint(managedElement, ep);\n      if (params.uuid) {\n        this.endpointsByUUID.set(params.uuid, ep);\n      }\n      addToDictionary(this.endpointsByElement, ep.elementId, ep);\n      if (!this._suspendDrawing) {\n        this._paintEndpoint(ep, {\n          timestamp: this._suspendedAt\n        });\n      }\n      return ep;\n    }\n  }, {\n    key: \"_deriveEndpointAndAnchorSpec\",\n    value: function _deriveEndpointAndAnchorSpec(type, dontPrependDefault) {\n      var bits = ((dontPrependDefault ? \"\" : \"default \") + type).split(/[\\s]/),\n          eps = null,\n          ep = null,\n          a = null,\n          as = null;\n      for (var i = 0; i < bits.length; i++) {\n        var _t = this.getConnectionType(bits[i]);\n        if (_t) {\n          if (_t.endpoints) {\n            eps = _t.endpoints;\n          }\n          if (_t.endpoint) {\n            ep = _t.endpoint;\n          }\n          if (_t.anchors) {\n            as = _t.anchors;\n          }\n          if (_t.anchor) {\n            a = _t.anchor;\n          }\n        }\n      }\n      return {\n        endpoints: eps ? eps : [ep, ep],\n        anchors: as ? as : [a, a]\n      };\n    }\n  }, {\n    key: \"revalidate\",\n    value: function revalidate(el, timestamp) {\n      var elId = this.getId(el);\n      this.updateOffset({\n        elId: elId,\n        recalc: true,\n        timestamp: timestamp\n      });\n      return this.repaint(el);\n    }\n  }, {\n    key: \"repaintEverything\",\n    value: function repaintEverything() {\n      var timestamp = uuid(),\n          elId;\n      for (elId in this._managedElements) {\n        this.viewport.refreshElement(elId, true);\n      }\n      this.viewport.recomputeBounds();\n      for (elId in this._managedElements) {\n        this.repaint(this._managedElements[elId].el, timestamp, true);\n      }\n      return this;\n    }\n  }, {\n    key: \"setElementPosition\",\n    value: function setElementPosition(el, x, y) {\n      var id = this.getId(el);\n      this.viewport.setPosition(id, x, y);\n      return this.repaint(el);\n    }\n  }, {\n    key: \"repaint\",\n    value: function repaint(el, timestamp, offsetsWereJustCalculated) {\n      var r = {\n        c: new Set(),\n        e: new Set()\n      };\n      var _mergeRedraw = function _mergeRedraw(r2) {\n        r2.c.forEach(function (c) {\n          return r.c.add(c);\n        });\n        r2.e.forEach(function (e) {\n          return r.e.add(e);\n        });\n      };\n      if (!this._suspendDrawing) {\n        var id = this.getId(el);\n        if (el != null) {\n          var repaintEls = this._getAssociatedElements(el);\n          if (timestamp == null) {\n            timestamp = uuid();\n          }\n          if (!offsetsWereJustCalculated) {\n            for (var i = 0; i < repaintEls.length; i++) {\n              this.updateOffset({\n                elId: this.getId(repaintEls[i]),\n                recalc: true,\n                timestamp: timestamp\n              });\n            }\n          }\n          _mergeRedraw(this.router.redraw(id, timestamp, null));\n          if (repaintEls.length > 0) {\n            for (var j = 0; j < repaintEls.length; j++) {\n              _mergeRedraw(this.router.redraw(this.getId(repaintEls[j]), timestamp, null));\n            }\n          }\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"unregisterEndpoint\",\n    value: function unregisterEndpoint(endpoint) {\n      var uuid = endpoint.getUuid();\n      if (uuid) {\n        this.endpointsByUUID[\"delete\"](uuid);\n      }\n      removeManagedEndpoint(this._managedElements[endpoint.elementId], endpoint);\n      for (var _e in this.endpointsByElement) {\n        var endpoints = this.endpointsByElement[_e];\n        if (endpoints) {\n          var newEndpoints = [];\n          for (var i = 0, j = endpoints.length; i < j; i++) {\n            if (endpoints[i] !== endpoint) {\n              newEndpoints.push(endpoints[i]);\n            }\n          }\n          this.endpointsByElement[_e] = newEndpoints;\n        }\n        if (this.endpointsByElement[_e].length < 1) {\n          delete this.endpointsByElement[_e];\n        }\n      }\n      this.fire(EVENT_INTERNAL_ENDPOINT_UNREGISTERED, endpoint);\n    }\n  }, {\n    key: \"_maybePruneEndpoint\",\n    value: function _maybePruneEndpoint(endpoint) {\n      if (endpoint.deleteOnEmpty && endpoint.connections.length === 0) {\n        this.deleteEndpoint(endpoint);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"deleteEndpoint\",\n    value: function deleteEndpoint(object) {\n      var _this5 = this;\n      var endpoint = typeof object === \"string\" ? this.endpointsByUUID.get(object) : object;\n      if (endpoint) {\n        var proxy = endpoint.proxiedBy;\n        var connectionsToDelete = endpoint.connections.slice();\n        forEach(connectionsToDelete, function (connection) {\n          endpoint.detachFromConnection(connection, null, true);\n        });\n        this.unregisterEndpoint(endpoint);\n        endpoint.destroy();\n        forEach(connectionsToDelete, function (connection) {\n          _this5.deleteConnection(connection, {\n            force: true,\n            endpointToIgnore: endpoint\n          });\n        });\n        if (proxy != null) {\n          this.deleteEndpoint(proxy);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"addEndpoint\",\n    value: function addEndpoint(el, params, referenceParams) {\n      referenceParams = referenceParams || {};\n      var p = extend({}, referenceParams);\n      extend(p, params || {});\n      var _p = extend({\n        element: el\n      }, p);\n      return this._internal_newEndpoint(_p);\n    }\n  }, {\n    key: \"addEndpoints\",\n    value: function addEndpoints(el, endpoints, referenceParams) {\n      var results = [];\n      for (var i = 0, j = endpoints.length; i < j; i++) {\n        results.push(this.addEndpoint(el, endpoints[i], referenceParams));\n      }\n      return results;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this6 = this;\n      this.silently(function () {\n        _this6.endpointsByElement = {};\n        _this6._managedElements = {};\n        _this6.endpointsByUUID.clear();\n        _this6.viewport.reset();\n        _this6.router.reset();\n        _this6.groupManager.reset();\n        _this6.connections.length = 0;\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.reset();\n      this.unbind();\n      this.sourceSelectors.length = 0;\n      this.targetSelectors.length = 0;\n      this._connectionTypes.clear();\n      this._endpointTypes.clear();\n    }\n  }, {\n    key: \"getEndpoints\",\n    value: function getEndpoints(el) {\n      return this.endpointsByElement[this.getId(el)] || [];\n    }\n  }, {\n    key: \"getEndpoint\",\n    value: function getEndpoint(uuid) {\n      return this.endpointsByUUID.get(uuid);\n    }\n  }, {\n    key: \"setEndpointUuid\",\n    value: function setEndpointUuid(endpoint, uuid) {\n      if (endpoint.uuid) {\n        this.endpointsByUUID[\"delete\"](endpoint.uuid);\n      }\n      endpoint.uuid = uuid;\n      this.endpointsByUUID.set(uuid, endpoint);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(params, referenceParams) {\n      try {\n        var _p = this._prepareConnectionParams(params, referenceParams),\n            jpc = this._newConnection(_p);\n        this._finaliseConnection(jpc, _p);\n        return jpc;\n      } catch (errorMessage) {\n        log(errorMessage);\n        return;\n      }\n    }\n  }, {\n    key: \"_prepareConnectionParams\",\n    value: function _prepareConnectionParams(params, referenceParams) {\n      var temp = extend({}, params);\n      if (referenceParams) {\n        extend(temp, referenceParams);\n      }\n      var _p = temp;\n      if (_p.source) {\n        if (_p.source.endpoint) {\n          _p.sourceEndpoint = _p.source;\n        }\n      }\n      if (_p.target) {\n        if (_p.target.endpoint) {\n          _p.targetEndpoint = _p.target;\n        }\n      }\n      if (params.uuids) {\n        _p.sourceEndpoint = this.getEndpoint(params.uuids[0]);\n        _p.targetEndpoint = this.getEndpoint(params.uuids[1]);\n      }\n      if (_p.sourceEndpoint != null) {\n        if (_p.sourceEndpoint.isFull()) {\n          throw ERROR_SOURCE_ENDPOINT_FULL;\n        }\n        if (!_p.type) {\n          _p.type = _p.sourceEndpoint.edgeType;\n        }\n        if (_p.sourceEndpoint.connectorOverlays) {\n          _p.overlays = _p.overlays || [];\n          for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\n            _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\n          }\n        }\n        if (_p.sourceEndpoint.scope) {\n          _p.scope = _p.sourceEndpoint.scope;\n        }\n      } else {\n        if (_p.source == null) {\n          throw ERROR_SOURCE_DOES_NOT_EXIST;\n        }\n      }\n      if (_p.targetEndpoint != null) {\n        if (_p.targetEndpoint.isFull()) {\n          throw ERROR_TARGET_ENDPOINT_FULL;\n        }\n      } else {\n        if (_p.target == null) {\n          throw ERROR_TARGET_DOES_NOT_EXIST;\n        }\n      }\n      if (_p.sourceEndpoint && _p.targetEndpoint) {\n        if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) {\n          throw \"Cannot establish connection: scopes do not match\";\n        }\n      }\n      return _p;\n    }\n  }, {\n    key: \"_newConnection\",\n    value: function _newConnection(params) {\n      params.id = \"con_\" + this._idstamp();\n      var c = new Connection(this, params);\n      addManagedConnection(c, this._managedElements[c.sourceId], this._managedElements[c.targetId]);\n      this._paintConnection(c);\n      return c;\n    }\n  }, {\n    key: \"_finaliseConnection\",\n    value: function _finaliseConnection(jpc, params, originalEvent) {\n      params = params || {};\n      if (!jpc.suspendedEndpoint) {\n        this.connections.push(jpc);\n      }\n      jpc.pending = null;\n      jpc.endpoints[0].isTemporarySource = false;\n      this.repaint(jpc.source);\n      var payload = {\n        connection: jpc,\n        source: jpc.source,\n        target: jpc.target,\n        sourceId: jpc.sourceId,\n        targetId: jpc.targetId,\n        sourceEndpoint: jpc.endpoints[0],\n        targetEndpoint: jpc.endpoints[1]\n      };\n      this.fire(EVENT_INTERNAL_CONNECTION, payload, originalEvent);\n      if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\n        this.fire(EVENT_CONNECTION, payload, originalEvent);\n      }\n    }\n  }, {\n    key: \"removeAllEndpoints\",\n    value: function removeAllEndpoints(el, recurse) {\n      var _this7 = this;\n      var _one = function _one(_el) {\n        var id = _this7.getId(_el),\n            ebe = _this7.endpointsByElement[id],\n            i,\n            ii;\n        if (ebe) {\n          for (i = 0, ii = ebe.length; i < ii; i++) {\n            _this7.deleteEndpoint(ebe[i]);\n          }\n        }\n        delete _this7.endpointsByElement[id];\n      };\n      if (recurse) {\n        this._getAssociatedElements(el).map(_one);\n      }\n      _one(el);\n      return this;\n    }\n  }, {\n    key: \"_createSourceDefinition\",\n    value: function _createSourceDefinition(params, referenceParams) {\n      var p = extend({}, referenceParams);\n      extend(p, params);\n      p.edgeType = p.edgeType || DEFAULT;\n      var aae = this._deriveEndpointAndAnchorSpec(p.edgeType);\n      p.endpoint = p.endpoint || aae.endpoints[0];\n      p.anchor = p.anchor || aae.anchors[0];\n      var maxConnections = p.maxConnections || -1;\n      var _def = {\n        def: extend({}, p),\n        uniqueEndpoint: p.uniqueEndpoint,\n        maxConnections: maxConnections,\n        enabled: true,\n        endpoint: null\n      };\n      return _def;\n    }\n  }, {\n    key: \"addSourceSelector\",\n    value: function addSourceSelector(selector, params) {\n      var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _def = this._createSourceDefinition(params);\n      var sel = new SourceSelector(selector, _def, exclude);\n      this.sourceSelectors.push(sel);\n      return sel;\n    }\n  }, {\n    key: \"removeSourceSelector\",\n    value: function removeSourceSelector(selector) {\n      removeWithFunction(this.sourceSelectors, function (s) {\n        return s === selector;\n      });\n    }\n  }, {\n    key: \"removeTargetSelector\",\n    value: function removeTargetSelector(selector) {\n      removeWithFunction(this.targetSelectors, function (s) {\n        return s === selector;\n      });\n    }\n  }, {\n    key: \"addTargetSelector\",\n    value: function addTargetSelector(selector, params) {\n      var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _def = this._createTargetDefinition(params);\n      var sel = new TargetSelector(selector, _def, exclude);\n      this.targetSelectors.push(sel);\n      return sel;\n    }\n  }, {\n    key: \"_createTargetDefinition\",\n    value: function _createTargetDefinition(params, referenceParams) {\n      var p = extend({}, referenceParams);\n      extend(p, params);\n      p.edgeType = p.edgeType || DEFAULT;\n      var maxConnections = p.maxConnections || -1;\n      var _def = {\n        def: extend({}, p),\n        uniqueEndpoint: p.uniqueEndpoint,\n        maxConnections: maxConnections,\n        enabled: true,\n        endpoint: null\n      };\n      return _def;\n    }\n  }, {\n    key: \"show\",\n    value: function show(el, changeEndpoints) {\n      return this._setVisible(el, BLOCK, changeEndpoints);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(el, changeEndpoints) {\n      return this._setVisible(el, NONE, changeEndpoints);\n    }\n  }, {\n    key: \"_setVisible\",\n    value: function _setVisible(el, state, alsoChangeEndpoints) {\n      var visible = state === BLOCK;\n      var endpointFunc = null;\n      if (alsoChangeEndpoints) {\n        endpointFunc = function endpointFunc(ep) {\n          ep.setVisible(visible, true, true);\n        };\n      }\n      var id = this.getId(el);\n      this._operation(el, function (jpc) {\n        if (visible && alsoChangeEndpoints) {\n          var oidx = jpc.sourceId === id ? 1 : 0;\n          if (jpc.endpoints[oidx].isVisible()) {\n            jpc.setVisible(true);\n          }\n        } else {\n          jpc.setVisible(visible);\n        }\n      }, endpointFunc);\n      return this;\n    }\n  }, {\n    key: \"toggleVisible\",\n    value: function toggleVisible(el, changeEndpoints) {\n      var endpointFunc = null;\n      if (changeEndpoints) {\n        endpointFunc = function endpointFunc(ep) {\n          var state = ep.isVisible();\n          ep.setVisible(!state);\n        };\n      }\n      this._operation(el, function (jpc) {\n        var state = jpc.isVisible();\n        jpc.setVisible(!state);\n      }, endpointFunc);\n    }\n  }, {\n    key: \"_operation\",\n    value: function _operation(el, func, endpointFunc) {\n      var elId = this.getId(el);\n      var endpoints = this.endpointsByElement[elId];\n      if (endpoints && endpoints.length) {\n        for (var i = 0, ii = endpoints.length; i < ii; i++) {\n          for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\n            var retVal = func(endpoints[i].connections[j]);\n            if (retVal) {\n              return;\n            }\n          }\n          if (endpointFunc) {\n            endpointFunc(endpoints[i]);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"registerConnectionType\",\n    value: function registerConnectionType(id, type) {\n      this._connectionTypes.set(id, extend({}, type));\n      if (type.overlays) {\n        var to = {};\n        for (var i = 0; i < type.overlays.length; i++) {\n          var fo = convertToFullOverlaySpec(type.overlays[i]);\n          to[fo.options.id] = fo;\n        }\n        this._connectionTypes.get(id).overlays = to;\n      }\n    }\n  }, {\n    key: \"registerConnectionTypes\",\n    value: function registerConnectionTypes(types) {\n      for (var i in types) {\n        this.registerConnectionType(i, types[i]);\n      }\n    }\n  }, {\n    key: \"registerEndpointType\",\n    value: function registerEndpointType(id, type) {\n      this._endpointTypes.set(id, extend({}, type));\n      if (type.overlays) {\n        var to = {};\n        for (var i = 0; i < type.overlays.length; i++) {\n          var fo = convertToFullOverlaySpec(type.overlays[i]);\n          to[fo.options.id] = fo;\n        }\n        this._endpointTypes.get(id).overlays = to;\n      }\n    }\n  }, {\n    key: \"registerEndpointTypes\",\n    value: function registerEndpointTypes(types) {\n      for (var i in types) {\n        this.registerEndpointType(i, types[i]);\n      }\n    }\n  }, {\n    key: \"getType\",\n    value: function getType(id, typeDescriptor) {\n      return typeDescriptor === \"connection\" ? this.getConnectionType(id) : this.getEndpointType(id);\n    }\n  }, {\n    key: \"getConnectionType\",\n    value: function getConnectionType(id) {\n      return this._connectionTypes.get(id);\n    }\n  }, {\n    key: \"getEndpointType\",\n    value: function getEndpointType(id) {\n      return this._endpointTypes.get(id);\n    }\n  }, {\n    key: \"importDefaults\",\n    value: function importDefaults(d) {\n      for (var i in d) {\n        this.defaults[i] = d[i];\n      }\n      if (d.container) {\n        this.setContainer(d.container);\n      }\n      return this;\n    }\n  }, {\n    key: \"restoreDefaults\",\n    value: function restoreDefaults() {\n      this.defaults = extend({}, this._initialDefaults);\n      return this;\n    }\n  }, {\n    key: \"getManagedElements\",\n    value: function getManagedElements() {\n      return this._managedElements;\n    }\n  }, {\n    key: \"proxyConnection\",\n    value: function proxyConnection(connection, index, proxyEl, endpointGenerator, anchorGenerator) {\n      var alreadyProxied = connection.proxies[index] != null,\n          proxyEp,\n          originalElementId = alreadyProxied ? connection.proxies[index].originalEp.elementId : connection.endpoints[index].elementId,\n          originalEndpoint = alreadyProxied ? connection.proxies[index].originalEp : connection.endpoints[index],\n          proxyElId = this.getId(proxyEl);\n      if (connection.proxies[index]) {\n        if (connection.proxies[index].ep.elementId === proxyElId) {\n          proxyEp = connection.proxies[index].ep;\n        } else {\n          connection.proxies[index].ep.detachFromConnection(connection, index);\n          proxyEp = this._internal_newEndpoint({\n            element: proxyEl,\n            endpoint: endpointGenerator(connection, index),\n            anchor: anchorGenerator(connection, index),\n            parameters: {\n              isProxyEndpoint: true\n            }\n          });\n        }\n      } else {\n        proxyEp = this._internal_newEndpoint({\n          element: proxyEl,\n          endpoint: endpointGenerator(connection, index),\n          anchor: anchorGenerator(connection, index),\n          parameters: {\n            isProxyEndpoint: true\n          }\n        });\n      }\n      proxyEp.deleteOnEmpty = true;\n      connection.proxies[index] = {\n        ep: proxyEp,\n        originalEp: originalEndpoint\n      };\n      this.sourceOrTargetChanged(originalElementId, proxyElId, connection, proxyEl, index);\n      originalEndpoint.detachFromConnection(connection, null, true);\n      proxyEp.connections = [connection];\n      connection.endpoints[index] = proxyEp;\n      originalEndpoint.proxiedBy = proxyEp;\n      originalEndpoint.setVisible(false);\n      connection.setVisible(true);\n      this.revalidate(proxyEl);\n    }\n  }, {\n    key: \"unproxyConnection\",\n    value: function unproxyConnection(connection, index) {\n      if (connection.proxies == null || connection.proxies[index] == null) {\n        return;\n      }\n      var originalElement = connection.proxies[index].originalEp.element,\n          originalElementId = connection.proxies[index].originalEp.elementId,\n          proxyElId = connection.proxies[index].ep.elementId;\n      connection.endpoints[index] = connection.proxies[index].originalEp;\n      delete connection.proxies[index].originalEp.proxiedBy;\n      this.sourceOrTargetChanged(proxyElId, originalElementId, connection, originalElement, index);\n      connection.proxies[index].ep.detachFromConnection(connection, null);\n      connection.proxies[index].originalEp.addConnection(connection);\n      if (connection.isVisible()) {\n        connection.proxies[index].originalEp.setVisible(true);\n      }\n      connection.proxies[index] = null;\n      if (findWithFunction(connection.proxies, function (p) {\n        return p != null;\n      }) === -1) {\n        connection.proxies.length = 0;\n      }\n    }\n  }, {\n    key: \"sourceOrTargetChanged\",\n    value: function sourceOrTargetChanged(originalId, newId, connection, newElement, index) {\n      if (originalId !== newId) {\n        if (index === 0) {\n          connection.sourceId = newId;\n          connection.source = newElement;\n        } else if (index === 1) {\n          connection.targetId = newId;\n          connection.target = newElement;\n        }\n        removeManagedConnection(connection, this._managedElements[originalId]);\n        addManagedConnection(connection, this._managedElements[newId]);\n      }\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupId) {\n      return this.groupManager.getGroup(groupId);\n    }\n  }, {\n    key: \"getGroupFor\",\n    value: function getGroupFor(el) {\n      return this.groupManager.getGroupFor(el);\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(params) {\n      return this.groupManager.addGroup(params);\n    }\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(group) {\n      var _this$groupManager;\n      for (var _len = arguments.length, el = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        el[_key - 1] = arguments[_key];\n      }\n      return (_this$groupManager = this.groupManager).addToGroup.apply(_this$groupManager, [group, false].concat(el));\n    }\n  }, {\n    key: \"collapseGroup\",\n    value: function collapseGroup(group) {\n      this.groupManager.collapseGroup(group);\n    }\n  }, {\n    key: \"expandGroup\",\n    value: function expandGroup(group) {\n      this.groupManager.expandGroup(group);\n    }\n  }, {\n    key: \"toggleGroup\",\n    value: function toggleGroup(group) {\n      this.groupManager.toggleGroup(group);\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(group, deleteMembers, manipulateView, doNotFireEvent) {\n      return this.groupManager.removeGroup(group, deleteMembers, manipulateView, doNotFireEvent);\n    }\n  }, {\n    key: \"removeAllGroups\",\n    value: function removeAllGroups(deleteMembers, manipulateView) {\n      this.groupManager.removeAllGroups(deleteMembers, manipulateView, false);\n    }\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(group, el, doNotFireEvent) {\n      this.groupManager.removeFromGroup(group, doNotFireEvent, el);\n      this._appendElement(el, this.getContainer());\n      this.updateOffset({\n        recalc: true,\n        elId: this.getId(el)\n      });\n    }\n  }, {\n    key: \"_paintEndpoint\",\n    value: function _paintEndpoint(endpoint, params) {\n      function findConnectionToUseForDynamicAnchor(ep) {\n        var idx = 0;\n        if (params.elementWithPrecedence != null) {\n          for (var i = 0; i < ep.connections.length; i++) {\n            if (ep.connections[i].sourceId === params.elementWithPrecedence || ep.connections[i].targetId === params.elementWithPrecedence) {\n              idx = i;\n              break;\n            }\n          }\n        }\n        return ep.connections[idx];\n      }\n      params = params || {};\n      var timestamp = params.timestamp,\n          recalc = !(params.recalc === false);\n      if (!timestamp || endpoint.timestamp !== timestamp) {\n        var info = this.viewport.getPosition(endpoint.elementId);\n        var xy = params.offset ? {\n          x: params.offset.x,\n          y: params.offset.y\n        } : {\n          x: info.x,\n          y: info.y\n        };\n        if (xy != null) {\n          var ap = params.anchorLoc;\n          if (ap == null) {\n            var anchorParams = {\n              xy: xy,\n              wh: info,\n              element: endpoint,\n              timestamp: timestamp\n            };\n            if (recalc && this.router.isDynamicAnchor(endpoint) && endpoint.connections.length > 0) {\n              var _c3 = findConnectionToUseForDynamicAnchor(endpoint),\n                  oIdx = _c3.endpoints[0] === endpoint ? 1 : 0,\n                  oId = oIdx === 0 ? _c3.sourceId : _c3.targetId,\n                  oInfo = this.viewport.getPosition(oId);\n              anchorParams.index = oIdx === 0 ? 1 : 0;\n              anchorParams.connection = _c3;\n              anchorParams.txy = oInfo;\n              anchorParams.twh = oInfo;\n              anchorParams.tElement = _c3.endpoints[oIdx];\n              anchorParams.tRotation = this._getRotations(oId);\n            } else if (endpoint.connections.length > 0) {\n              anchorParams.connection = endpoint.connections[0];\n            }\n            anchorParams.rotation = this._getRotations(endpoint.elementId);\n            ap = this.router.computeAnchorLocation(endpoint._anchor, anchorParams);\n          }\n          endpoint.endpoint.compute(ap, this.router.getEndpointOrientation(endpoint), endpoint.paintStyleInUse);\n          this.renderEndpoint(endpoint, endpoint.paintStyleInUse);\n          endpoint.timestamp = timestamp;\n          for (var i in endpoint.overlays) {\n            if (endpoint.overlays.hasOwnProperty(i)) {\n              var _o = endpoint.overlays[i];\n              if (_o.isVisible()) {\n                endpoint.overlayPlacements[i] = this.drawOverlay(_o, endpoint.endpoint, endpoint.paintStyleInUse, endpoint.getAbsoluteOverlayPosition(_o));\n                this._paintOverlay(_o, endpoint.overlayPlacements[i], {\n                  xmin: 0,\n                  ymin: 0\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_paintConnection\",\n    value: function _paintConnection(connection, params) {\n      if (!this._suspendDrawing && connection.visible !== false) {\n        params = params || {};\n        var timestamp = params.timestamp;\n        if (timestamp != null && timestamp === connection.lastPaintedAt) {\n          return;\n        }\n        if (timestamp == null || timestamp !== connection.lastPaintedAt) {\n          this.router.computePath(connection, timestamp);\n          var overlayExtents = {\n            xmin: Infinity,\n            ymin: Infinity,\n            xmax: -Infinity,\n            ymax: -Infinity\n          };\n          for (var i in connection.overlays) {\n            if (connection.overlays.hasOwnProperty(i)) {\n              var _o2 = connection.overlays[i];\n              if (_o2.isVisible()) {\n                connection.overlayPlacements[i] = this.drawOverlay(_o2, connection.connector, connection.paintStyleInUse, connection.getAbsoluteOverlayPosition(_o2));\n                overlayExtents.xmin = Math.min(overlayExtents.xmin, connection.overlayPlacements[i].xmin);\n                overlayExtents.xmax = Math.max(overlayExtents.xmax, connection.overlayPlacements[i].xmax);\n                overlayExtents.ymin = Math.min(overlayExtents.ymin, connection.overlayPlacements[i].ymin);\n                overlayExtents.ymax = Math.max(overlayExtents.ymax, connection.overlayPlacements[i].ymax);\n              }\n            }\n          }\n          var lineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"1\") / 2,\n              outlineWidth = parseFloat(\"\" + connection.paintStyleInUse.strokeWidth || \"0\"),\n              _extents = {\n            xmin: Math.min(connection.connector.bounds.xmin - (lineWidth + outlineWidth), overlayExtents.xmin),\n            ymin: Math.min(connection.connector.bounds.ymin - (lineWidth + outlineWidth), overlayExtents.ymin),\n            xmax: Math.max(connection.connector.bounds.xmax + (lineWidth + outlineWidth), overlayExtents.xmax),\n            ymax: Math.max(connection.connector.bounds.ymax + (lineWidth + outlineWidth), overlayExtents.ymax)\n          };\n          this.paintConnector(connection.connector, connection.paintStyleInUse, _extents);\n          for (var j in connection.overlays) {\n            if (connection.overlays.hasOwnProperty(j)) {\n              var _p2 = connection.overlays[j];\n              if (_p2.isVisible()) {\n                this._paintOverlay(_p2, connection.overlayPlacements[j], _extents);\n              }\n            }\n          }\n        }\n        connection.lastPaintedAt = timestamp;\n      }\n    }\n  }, {\n    key: \"_refreshEndpoint\",\n    value: function _refreshEndpoint(endpoint) {\n      if (endpoint.connections.length > 0) {\n        this.addEndpointClass(endpoint, this.endpointConnectedClass);\n      } else {\n        this.removeEndpointClass(endpoint, this.endpointConnectedClass);\n      }\n      if (endpoint.isFull()) {\n        this.addEndpointClass(endpoint, this.endpointFullClass);\n      } else {\n        this.removeEndpointClass(endpoint, this.endpointFullClass);\n      }\n    }\n  }, {\n    key: \"_makeConnector\",\n    value: function _makeConnector(connection, name, args) {\n      return Connectors.get(connection, name, args);\n    }\n  }, {\n    key: \"addOverlay\",\n    value: function addOverlay(component, overlay, doNotRevalidate) {\n      component.addOverlay(overlay);\n      if (!doNotRevalidate) {\n        var relatedElement = component instanceof Endpoint ? component.element : component.source;\n        this.revalidate(relatedElement);\n      }\n    }\n  }, {\n    key: \"getPathData\",\n    value: function getPathData(connector) {\n      var p = \"\";\n      for (var i = 0; i < connector.segments.length; i++) {\n        p += connector.segments[i].getPath(i === 0);\n        p += \" \";\n      }\n      return p;\n    }\n  }]);\n  return JsPlumbInstance;\n}(EventGenerator);\n\nvar VERY_SMALL_VALUE = 0.0000000001;\nfunction gentleRound(n) {\n  var f = Math.floor(n),\n      r = Math.ceil(n);\n  if (n - f < VERY_SMALL_VALUE) {\n    return f;\n  } else if (r - n < VERY_SMALL_VALUE) {\n    return r;\n  }\n  return n;\n}\nvar ArcSegment = function (_AbstractSegment) {\n  _inherits(ArcSegment, _AbstractSegment);\n  var _super = _createSuper(ArcSegment);\n  function ArcSegment(params) {\n    var _this;\n    _classCallCheck(this, ArcSegment);\n    _this = _super.call(this, params);\n    _defineProperty(_assertThisInitialized(_this), \"type\", ArcSegment.segmentType);\n    _defineProperty(_assertThisInitialized(_this), \"cx\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cy\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"radius\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"anticlockwise\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"startAngle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"endAngle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"sweep\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"circumference\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"frac\", void 0);\n    _this.cx = params.cx;\n    _this.cy = params.cy;\n    _this.radius = params.r;\n    _this.anticlockwise = params.ac;\n    if (params.startAngle && params.endAngle) {\n      _this.startAngle = params.startAngle;\n      _this.endAngle = params.endAngle;\n      _this.x1 = _this.cx + _this.radius * Math.cos(_this.startAngle);\n      _this.y1 = _this.cy + _this.radius * Math.sin(_this.startAngle);\n      _this.x2 = _this.cx + _this.radius * Math.cos(_this.endAngle);\n      _this.y2 = _this.cy + _this.radius * Math.sin(_this.endAngle);\n    } else {\n      _this.startAngle = _this._calcAngle(_this.x1, _this.y1);\n      _this.endAngle = _this._calcAngle(_this.x2, _this.y2);\n    }\n    if (_this.endAngle < 0) {\n      _this.endAngle += TWO_PI;\n    }\n    if (_this.startAngle < 0) {\n      _this.startAngle += TWO_PI;\n    }\n    var ea = _this.endAngle < _this.startAngle ? _this.endAngle + TWO_PI : _this.endAngle;\n    _this.sweep = Math.abs(ea - _this.startAngle);\n    if (_this.anticlockwise) {\n      _this.sweep = TWO_PI - _this.sweep;\n    }\n    _this.circumference = 2 * Math.PI * _this.radius;\n    _this.frac = _this.sweep / TWO_PI;\n    _this.length = _this.circumference * _this.frac;\n    _this.extents = {\n      xmin: _this.cx - _this.radius,\n      xmax: _this.cx + _this.radius,\n      ymin: _this.cy - _this.radius,\n      ymax: _this.cy + _this.radius\n    };\n    return _this;\n  }\n  _createClass(ArcSegment, [{\n    key: \"_calcAngle\",\n    value: function _calcAngle(_x, _y) {\n      return theta({\n        x: this.cx,\n        y: this.cy\n      }, {\n        x: _x,\n        y: _y\n      });\n    }\n  }, {\n    key: \"_calcAngleForLocation\",\n    value: function _calcAngleForLocation(segment, location) {\n      if (segment.anticlockwise) {\n        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\n            s = Math.abs(sa - segment.endAngle);\n        return sa - s * location;\n      } else {\n        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\n            ss = Math.abs(ea - segment.startAngle);\n        return segment.startAngle + ss * location;\n      }\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(isFirstSegment) {\n      var laf = this.sweep > Math.PI ? 1 : 0,\n          sf = this.anticlockwise ? 0 : 1;\n      return (isFirstSegment ? \"M\" + this.x1 + \" \" + this.y1 + \" \" : \"\") + \"A \" + this.radius + \" \" + this.radius + \" 0 \" + laf + \",\" + sf + \" \" + this.x2 + \" \" + this.y2;\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.length;\n    }\n  }, {\n    key: \"pointOnPath\",\n    value: function pointOnPath(location, absolute) {\n      if (location === 0) {\n        return {\n          x: this.x1,\n          y: this.y1,\n          theta: this.startAngle\n        };\n      } else if (location === 1) {\n        return {\n          x: this.x2,\n          y: this.y2,\n          theta: this.endAngle\n        };\n      }\n      if (absolute) {\n        location = location / length;\n      }\n      var angle = this._calcAngleForLocation(this, location),\n          _x = this.cx + this.radius * Math.cos(angle),\n          _y = this.cy + this.radius * Math.sin(angle);\n      return {\n        x: gentleRound(_x),\n        y: gentleRound(_y),\n        theta: angle\n      };\n    }\n  }, {\n    key: \"gradientAtPoint\",\n    value: function gradientAtPoint(location, absolute) {\n      var p = this.pointOnPath(location, absolute);\n      var m = normal({\n        x: this.cx,\n        y: this.cy\n      }, p);\n      if (!this.anticlockwise && (m === Infinity || m === -Infinity)) {\n        m *= -1;\n      }\n      return m;\n    }\n  }, {\n    key: \"pointAlongPathFrom\",\n    value: function pointAlongPathFrom(location, distance, absolute) {\n      var p = this.pointOnPath(location, absolute),\n          arcSpan = distance / this.circumference * 2 * Math.PI,\n          dir = this.anticlockwise ? -1 : 1,\n          startAngle = p.theta + dir * arcSpan,\n          startX = this.cx + this.radius * Math.cos(startAngle),\n          startY = this.cy + this.radius * Math.sin(startAngle);\n      return {\n        x: startX,\n        y: startY\n      };\n    }\n  }]);\n  return ArcSegment;\n}(AbstractSegment);\n_defineProperty(ArcSegment, \"segmentType\", \"Arc\");\n\nvar DEFAULT_WIDTH = 20;\nvar DEFAULT_LENGTH = 20;\nvar ArrowOverlay = function (_Overlay) {\n  _inherits(ArrowOverlay, _Overlay);\n  var _super = _createSuper(ArrowOverlay);\n  function ArrowOverlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, ArrowOverlay);\n    _this = _super.call(this, instance, component, p);\n    _this.instance = instance;\n    _this.component = component;\n    _defineProperty(_assertThisInitialized(_this), \"width\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"length\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"foldback\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"direction\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"location\", 0.5);\n    _defineProperty(_assertThisInitialized(_this), \"paintStyle\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", ArrowOverlay.type);\n    _defineProperty(_assertThisInitialized(_this), \"cachedDimensions\", void 0);\n    p = p || {};\n    _this.width = p.width || DEFAULT_WIDTH;\n    _this.length = p.length || DEFAULT_LENGTH;\n    _this.direction = (p.direction || 1) < 0 ? -1 : 1;\n    _this.foldback = p.foldback || 0.623;\n    _this.paintStyle = p.paintStyle || {\n      \"strokeWidth\": 1\n    };\n    _this.location = p.location == null ? _this.location : Array.isArray(p.location) ? p.location[0] : p.location;\n    return _this;\n  }\n  _createClass(ArrowOverlay, [{\n    key: \"draw\",\n    value: function draw(component, currentConnectionPaintStyle, absolutePosition) {\n      if (component instanceof AbstractConnector) {\n        var connector = component;\n        var hxy, mid, txy, tail, cxy;\n        if (this.location > 1 || this.location < 0) {\n          var fromLoc = this.location < 0 ? 1 : 0;\n          hxy = connector.pointAlongPathFrom(fromLoc, this.location, false);\n          mid = connector.pointAlongPathFrom(fromLoc, this.location - this.direction * this.length / 2, false);\n          txy = pointOnLine(hxy, mid, this.length);\n        } else if (this.location === 1) {\n          hxy = connector.pointOnPath(this.location);\n          mid = connector.pointAlongPathFrom(this.location, -this.length);\n          txy = pointOnLine(hxy, mid, this.length);\n          if (this.direction === -1) {\n            var _ = txy;\n            txy = hxy;\n            hxy = _;\n          }\n        } else if (this.location === 0) {\n          txy = connector.pointOnPath(this.location);\n          mid = connector.pointAlongPathFrom(this.location, this.length);\n          hxy = pointOnLine(txy, mid, this.length);\n          if (this.direction === -1) {\n            var __ = txy;\n            txy = hxy;\n            hxy = __;\n          }\n        } else {\n          hxy = connector.pointAlongPathFrom(this.location, this.direction * this.length / 2);\n          mid = connector.pointOnPath(this.location);\n          txy = pointOnLine(hxy, mid, this.length);\n        }\n        tail = perpendicularLineTo(hxy, txy, this.width);\n        cxy = pointOnLine(hxy, txy, this.foldback * this.length);\n        var d = {\n          hxy: hxy,\n          tail: tail,\n          cxy: cxy\n        },\n            stroke = this.paintStyle.stroke || currentConnectionPaintStyle.stroke,\n            fill = this.paintStyle.fill || currentConnectionPaintStyle.stroke,\n            lineWidth = this.paintStyle.strokeWidth || currentConnectionPaintStyle.strokeWidth;\n        return {\n          component: component,\n          d: d,\n          \"stroke-width\": lineWidth,\n          stroke: stroke,\n          fill: fill,\n          xmin: Math.min(hxy.x, tail[0].x, tail[1].x),\n          xmax: Math.max(hxy.x, tail[0].x, tail[1].x),\n          ymin: Math.min(hxy.y, tail[0].y, tail[1].y),\n          ymax: Math.max(hxy.y, tail[0].y, tail[1].y)\n        };\n      }\n    }\n  }, {\n    key: \"updateFrom\",\n    value: function updateFrom(d) {}\n  }]);\n  return ArrowOverlay;\n}(Overlay);\n_defineProperty(ArrowOverlay, \"type\", \"Arrow\");\nfunction isArrowOverlay(o) {\n  return o.type === ArrowOverlay.type;\n}\nOverlayFactory.register(ArrowOverlay.type, ArrowOverlay);\n\nvar PlainArrowOverlay = function (_ArrowOverlay) {\n  _inherits(PlainArrowOverlay, _ArrowOverlay);\n  var _super = _createSuper(PlainArrowOverlay);\n  function PlainArrowOverlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, PlainArrowOverlay);\n    _this = _super.call(this, instance, component, p);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"type\", PlainArrowOverlay.type);\n    _this.foldback = 1;\n    return _this;\n  }\n  return PlainArrowOverlay;\n}(ArrowOverlay);\n_defineProperty(PlainArrowOverlay, \"type\", \"PlainArrow\");\nfunction isPlainArrowOverlay(o) {\n  return o.type === PlainArrowOverlay.type;\n}\nOverlayFactory.register(\"PlainArrow\", PlainArrowOverlay);\n\nvar DiamondOverlay = function (_ArrowOverlay) {\n  _inherits(DiamondOverlay, _ArrowOverlay);\n  var _super = _createSuper(DiamondOverlay);\n  function DiamondOverlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, DiamondOverlay);\n    _this = _super.call(this, instance, component, p);\n    _this.instance = instance;\n    _defineProperty(_assertThisInitialized(_this), \"type\", DiamondOverlay.type);\n    _this.length = _this.length / 2;\n    _this.foldback = 2;\n    return _this;\n  }\n  return DiamondOverlay;\n}(ArrowOverlay);\n_defineProperty(DiamondOverlay, \"type\", \"Diamond\");\nfunction isDiamondOverlay(o) {\n  return o.type === DiamondOverlay.type;\n}\nOverlayFactory.register(DiamondOverlay.type, DiamondOverlay);\n\nvar CustomOverlay = function (_Overlay) {\n  _inherits(CustomOverlay, _Overlay);\n  var _super = _createSuper(CustomOverlay);\n  function CustomOverlay(instance, component, p) {\n    var _this;\n    _classCallCheck(this, CustomOverlay);\n    _this = _super.call(this, instance, component, p);\n    _this.instance = instance;\n    _this.component = component;\n    _defineProperty(_assertThisInitialized(_this), \"create\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", CustomOverlay.type);\n    _this.create = p.create;\n    return _this;\n  }\n  _createClass(CustomOverlay, [{\n    key: \"updateFrom\",\n    value: function updateFrom(d) {}\n  }]);\n  return CustomOverlay;\n}(Overlay);\n_defineProperty(CustomOverlay, \"type\", \"Custom\");\nfunction isCustomOverlay(o) {\n  return o.type === CustomOverlay.type;\n}\nOverlayFactory.register(\"Custom\", CustomOverlay);\n\nEndpointFactory.registerHandler(DotEndpointHandler);\nEndpointFactory.registerHandler(RectangleEndpointHandler);\nEndpointFactory.registerHandler(BlankEndpointHandler);\nConnectors.register(StraightConnector.type, StraightConnector);\n\nexport { ABSOLUTE, ATTRIBUTE_GROUP, ATTRIBUTE_MANAGED, ATTRIBUTE_NOT_DRAGGABLE, ATTRIBUTE_SCOPE, ATTRIBUTE_SCOPE_PREFIX, ATTRIBUTE_TABINDEX, AbstractConnector, ArcSegment, ArrowOverlay, BLOCK, BOTTOM, BlankEndpoint, BlankEndpointHandler, CHECK_CONDITION, CHECK_DROP_ALLOWED, CLASS_CONNECTED, CLASS_CONNECTOR, CLASS_CONNECTOR_OUTLINE, CLASS_ENDPOINT, CLASS_ENDPOINT_ANCHOR_PREFIX, CLASS_ENDPOINT_CONNECTED, CLASS_ENDPOINT_DROP_ALLOWED, CLASS_ENDPOINT_DROP_FORBIDDEN, CLASS_ENDPOINT_FULL, CLASS_GROUP_COLLAPSED, CLASS_GROUP_EXPANDED, CLASS_OVERLAY, Component, Connection, ConnectionDragSelector, ConnectionSelection, Connectors, CustomOverlay, DiamondOverlay, DotEndpoint, DotEndpointHandler, ERROR_SOURCE_DOES_NOT_EXIST, ERROR_SOURCE_ENDPOINT_FULL, ERROR_TARGET_DOES_NOT_EXIST, ERROR_TARGET_ENDPOINT_FULL, EVENT_ANCHOR_CHANGED, EVENT_CONNECTION, EVENT_CONNECTION_DETACHED, EVENT_CONNECTION_MOVED, EVENT_CONTAINER_CHANGE, EVENT_ENDPOINT_REPLACED, EVENT_GROUP_ADDED, EVENT_GROUP_COLLAPSE, EVENT_GROUP_EXPAND, EVENT_GROUP_MEMBER_ADDED, EVENT_GROUP_MEMBER_REMOVED, EVENT_GROUP_REMOVED, EVENT_INTERNAL_CONNECTION, EVENT_INTERNAL_CONNECTION_DETACHED, EVENT_INTERNAL_ENDPOINT_UNREGISTERED, EVENT_MANAGE_ELEMENT, EVENT_MAX_CONNECTIONS, EVENT_NESTED_GROUP_ADDED, EVENT_NESTED_GROUP_REMOVED, EVENT_UNMANAGE_ELEMENT, EVENT_ZOOM, Endpoint, EndpointFactory, EndpointRepresentation, EndpointSelection, FIXED, GroupManager, INTERCEPT_BEFORE_DETACH, INTERCEPT_BEFORE_DRAG, INTERCEPT_BEFORE_DROP, INTERCEPT_BEFORE_START_DETACH, IS_DETACH_ALLOWED, JsPlumbInstance, KEY_CONNECTION_OVERLAYS, LEFT, LabelOverlay, LightweightFloatingAnchor, LightweightRouter, NONE, Overlay, OverlayFactory, PlainArrowOverlay, REDROP_POLICY_ANY, REDROP_POLICY_STRICT, RIGHT, RectangleEndpoint, RectangleEndpointHandler, SELECTOR_MANAGED_ELEMENT, SOURCE, SOURCE_INDEX, STATIC, SourceSelector, StraightConnector, StraightSegment, TARGET, TARGET_INDEX, TOP, TargetSelector, UIGroup, UINode, Viewport, X_AXIS_FACES, Y_AXIS_FACES, _createPerimeterAnchor, _removeTypeCssHelper, _updateHoverStyle, att, classList, cls, convertToFullOverlaySpec, createFloatingAnchor, getDefaultFace, isArrowOverlay, isContinuous, isCustomOverlay, isDiamondOverlay, isDynamic, isEdgeSupported, _isFloating as isFloating, isFullOverlaySpec, isLabelOverlay, isPlainArrowOverlay, makeLightweightAnchorFromSpec };\n"],"names":["_defineProperties","_classCallCheck","_defineProperty","_createClass"],"mappings":";AAAA,IAAI;AACJ,AAAC,UAAU,wBAAuB;AAChC,yBAAsB,YAAY;AAClC,yBAAsB,aAAa;AACnC,yBAAsB,cAAc;AACpC,yBAAsB,aAAa;AACnC,yBAAsB,eAAe;AACrC,yBAAsB,YAAY;AAAA,GACjC,yBAA0B,yBAAwB;AACrD,IAAI;AACJ,AAAC,UAAU,kBAAiB;AAC1B,mBAAgB,YAAY;AAC5B,mBAAgB,iBAAiB;AACjC,mBAAgB,YAAY;AAC5B,mBAAgB,gBAAgB;AAChC,mBAAgB,iBAAiB;AACjC,mBAAgB,YAAY;AAC5B,mBAAgB,gBAAgB;AAChC,mBAAgB,sBAAsB;AACtC,mBAAgB,oBAAoB;AACpC,mBAAgB,qBAAqB;AACrC,mBAAgB,mBAAmB;AACnC,mBAAgB,yBAAyB;AACzC,mBAAgB,yBAAyB;AACzC,mBAAgB,UAAU;AAC1B,mBAAgB,eAAe;AAC/B,mBAAgB,WAAW;AAC3B,mBAAgB,SAAS;AACzB,mBAAgB,aAAa;AAC7B,mBAAgB,cAAc;AAAA,GAC7B,mBAAoB,mBAAkB;AAEzC,2BAAyB,UAAU,aAAa;AAC9C,MAAI,CAAE,qBAAoB,cAAc;AACtC,UAAM,IAAI,UAAU;AAAA;AAAA;AAIxB,6BAA2B,QAAQ,OAAO;AACxC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,aAAa,MAAM;AACvB,eAAW,aAAa,WAAW,cAAc;AACjD,eAAW,eAAe;AAC1B,QAAI,WAAW;AAAY,iBAAW,WAAW;AACjD,WAAO,eAAe,QAAQ,WAAW,KAAK;AAAA;AAAA;AAIlD,wBAAsB,aAAa,YAAY,aAAa;AAC1D,MAAI;AAAYA,wBAAkB,YAAY,WAAW;AACzD,MAAI;AAAaA,wBAAkB,aAAa;AAChD,SAAO;AAAA;AAGT,2BAAyB,KAAK,KAAK,OAAO;AACxC,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA;AAAA,SAEP;AACL,QAAI,OAAO;AAAA;AAGb,SAAO;AAAA;AAGT,uBAAuB;AACrB,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA;AAAA;AAGR,wBAAwB;AACtB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA;AAAA;AAGP,IAAC,kBAAkB,WAAY;AAChC,4BAAyB,QAAQ;AAC/BC,sBAAgB,MAAM;AACtB,SAAK,SAAS;AACdC,sBAAgB,MAAM,MAAM;AAC5BA,sBAAgB,MAAM,MAAM;AAC5BA,sBAAgB,MAAM,MAAM;AAC5BA,sBAAgB,MAAM,MAAM;AAC5BA,sBAAgB,MAAM,WAAW;AACjCA,sBAAgB,MAAM,QAAQ;AAC9B,SAAK,KAAK,OAAO;AACjB,SAAK,KAAK,OAAO;AACjB,SAAK,KAAK,OAAO;AACjB,SAAK,KAAK,OAAO;AAAA;AAEnBC,iBAAa,kBAAiB,CAAC;AAAA,IAC7B,KAAK;AAAA,IACL,OAAO,gCAAgC,GAAG,GAAG;AAC3C,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,IAAI,IAAI,IAAI,IAAI;AAC/C,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,GAAG,GAAG,GAAG,GAAG;AAC1C,UAAI,IAAI;AACR,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,GAAG,GAAG,IAAI,GAAG;AACnD,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI;AAC3D,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI;AAC3D,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,GAAG,IAAI,GAAG,GAAG;AACnD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,KAAK;AAC3C,aAAO,KAAK,gBAAgB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA;AAAA;AAGzD,SAAO;AAAA;AAGN,IAAC,YAAY;AAChB,IAAI,UAAU;AACX,IAAC,OAAO;AACR,IAAC,QAAQ;AACT,IAAC,WAAW;ACtIf,yBAAyB,UAAU,aAAa;AAC9C,MAAI,CAAE,qBAAoB,cAAc;AACtC,UAAM,IAAI,UAAU;AAAA;AAAA;AAIxB,2BAA2B,QAAQ,OAAO;AACxC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,aAAa,MAAM;AACvB,eAAW,aAAa,WAAW,cAAc;AACjD,eAAW,eAAe;AAC1B,QAAI,WAAW;AAAY,iBAAW,WAAW;AACjD,WAAO,eAAe,QAAQ,WAAW,KAAK;AAAA;AAAA;AAIlD,sBAAsB,aAAa,YAAY,aAAa;AAC1D,MAAI;AAAY,sBAAkB,YAAY,WAAW;AACzD,MAAI;AAAa,sBAAkB,aAAa;AAChD,SAAO;AAAA;AAGT,yBAAyB,KAAK,KAAK,OAAO;AACxC,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA;AAAA,SAEP;AACL,QAAI,OAAO;AAAA;AAGb,SAAO;AAAA;AAGT,mBAAmB,UAAU,YAAY;AACvC,MAAI,OAAO,eAAe,cAAc,eAAe,MAAM;AAC3D,UAAM,IAAI,UAAU;AAAA;AAGtB,WAAS,YAAY,OAAO,OAAO,cAAc,WAAW,WAAW;AAAA,IACrE,aAAa;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA;AAAA;AAGlB,MAAI;AAAY,oBAAgB,UAAU;AAAA;AAG5C,yBAAyB,GAAG;AAC1B,oBAAkB,OAAO,iBAAiB,OAAO,iBAAiB,0BAAyB,IAAG;AAC5F,WAAO,GAAE,aAAa,OAAO,eAAe;AAAA;AAE9C,SAAO,gBAAgB;AAAA;AAGzB,yBAAyB,GAAG,GAAG;AAC7B,oBAAkB,OAAO,kBAAkB,0BAAyB,IAAG,IAAG;AACxE,OAAE,YAAY;AACd,WAAO;AAAA;AAGT,SAAO,gBAAgB,GAAG;AAAA;AAG5B,qCAAqC;AACnC,MAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,WAAO;AACjE,MAAI,QAAQ,UAAU;AAAM,WAAO;AACnC,MAAI,OAAO,UAAU;AAAY,WAAO;AAExC,MAAI;AACF,YAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,IAAI,WAAY;AAAA;AAC1E,WAAO;AAAA,WACA,GAAP;AACA,WAAO;AAAA;AAAA;AAIX,gCAAgC,MAAM;AACpC,MAAI,SAAS,QAAQ;AACnB,UAAM,IAAI,eAAe;AAAA;AAG3B,SAAO;AAAA;AAGT,oCAAoC,MAAM,MAAM;AAC9C,MAAI,QAAS,QAAO,SAAS,YAAY,OAAO,SAAS,aAAa;AACpE,WAAO;AAAA;AAGT,SAAO,uBAAuB;AAAA;AAGhC,sBAAsB,SAAS;AAC7B,MAAI,4BAA4B;AAEhC,SAAO,gCAAgC;AACrC,QAAI,QAAQ,gBAAgB,UACxB;AAEJ,QAAI,2BAA2B;AAC7B,UAAI,YAAY,gBAAgB,MAAM;AAEtC,eAAS,QAAQ,UAAU,OAAO,WAAW;AAAA,WACxC;AACL,eAAS,MAAM,MAAM,MAAM;AAAA;AAG7B,WAAO,2BAA2B,MAAM;AAAA;AAAA;AAI5C,wBAAwB,QAAQ,UAAU;AACxC,SAAO,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,WAAW;AAC9D,aAAS,gBAAgB;AACzB,QAAI,WAAW;AAAM;AAAA;AAGvB,SAAO;AAAA;AAGT,cAAc,QAAQ,UAAU,UAAU;AACxC,MAAI,OAAO,YAAY,eAAe,QAAQ,KAAK;AACjD,WAAO,QAAQ;AAAA,SACV;AACL,WAAO,eAAc,SAAQ,WAAU,WAAU;AAC/C,UAAI,OAAO,eAAe,SAAQ;AAElC,UAAI,CAAC;AAAM;AACX,UAAI,OAAO,OAAO,yBAAyB,MAAM;AAEjD,UAAI,KAAK,KAAK;AACZ,eAAO,KAAK,IAAI,KAAK;AAAA;AAGvB,aAAO,KAAK;AAAA;AAAA;AAIhB,SAAO,KAAK,QAAQ,UAAU,YAAY;AAAA;AAG5C,wBAAwB,KAAK,GAAG;AAC9B,SAAO,gBAAgB,QAAQ,sBAAsB,KAAK,MAAM,4BAA4B,KAAK,MAAM;AAAA;AAGzG,4BAA4B,KAAK;AAC/B,SAAO,mBAAmB,QAAQ,iBAAiB,QAAQ,4BAA4B,QAAQ;AAAA;AAGjG,4BAA4B,KAAK;AAC/B,MAAI,MAAM,QAAQ;AAAM,WAAO,kBAAkB;AAAA;AAGnD,yBAAyB,KAAK;AAC5B,MAAI,MAAM,QAAQ;AAAM,WAAO;AAAA;AAGjC,0BAA0B,MAAM;AAC9B,MAAI,OAAO,WAAW,eAAe,KAAK,OAAO,aAAa,QAAQ,KAAK,iBAAiB;AAAM,WAAO,MAAM,KAAK;AAAA;AAGtH,+BAA+B,KAAK,GAAG;AACrC,MAAI,KAAK,OAAO,OAAO,OAAO,OAAO,WAAW,eAAe,IAAI,OAAO,aAAa,IAAI;AAE3F,MAAI,MAAM;AAAM;AAChB,MAAI,OAAO;AACX,MAAI,KAAK;AACT,MAAI,KAAK;AAET,MAAI,IAAI;AAER,MAAI;AACF,SAAK,KAAK,GAAG,KAAK,MAAM,CAAE,MAAM,MAAK,GAAG,QAAQ,OAAO,KAAK,MAAM;AAChE,WAAK,KAAK,GAAG;AAEb,UAAI,KAAK,KAAK,WAAW;AAAG;AAAA;AAAA,WAEvB,KAAP;AACA,SAAK;AACL,SAAK;AAAA;AAEL,QAAI;AACF,UAAI,CAAC,MAAM,GAAG,aAAa;AAAM,WAAG;AAAA;AAEpC,UAAI;AAAI,cAAM;AAAA;AAAA;AAIlB,SAAO;AAAA;AAGT,qCAAqC,GAAG,QAAQ;AAC9C,MAAI,CAAC;AAAG;AACR,MAAI,OAAO,MAAM;AAAU,WAAO,kBAAkB,GAAG;AACvD,MAAI,IAAI,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,GAAG;AACnD,MAAI,MAAM,YAAY,EAAE;AAAa,QAAI,EAAE,YAAY;AACvD,MAAI,MAAM,SAAS,MAAM;AAAO,WAAO,MAAM,KAAK;AAClD,MAAI,MAAM,eAAe,2CAA2C,KAAK;AAAI,WAAO,kBAAkB,GAAG;AAAA;AAG3G,2BAA2B,KAAK,KAAK;AACnC,MAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,UAAM,IAAI;AAE/C,WAAS,IAAI,GAAG,OAAO,IAAI,MAAM,MAAM,IAAI,KAAK;AAAK,SAAK,KAAK,IAAI;AAEnE,SAAO;AAAA;AAGT,8BAA8B;AAC5B,QAAM,IAAI,UAAU;AAAA;AAGtB,4BAA4B;AAC1B,QAAM,IAAI,UAAU;AAAA;AAGtB,IAAI,cAAc;AAClB,IAAI,oBAAoB;AACxB,IAAI,WAAW;AACf,IAAI,kBAAkB;AAAA,EACpB,KAAK,aAAa,IAAI,MAAM,QAAQ;AAClC,QAAI,IAAI,YAAY;AACpB,QAAI,CAAC,GAAG;AACN,YAAM;AAAA,QACJ,SAAS,qCAAqC,OAAO;AAAA;AAAA,WAElD;AACL,aAAO,IAAI,EAAE,IAAI;AAAA;AAAA;AAAA,EAGrB,OAAO,gBAAe,KAAK;AACzB,QAAI,UAAU,SAAS,IAAI;AAC3B,WAAO,gBAAgB,IAAI,IAAI,UAAU,IAAI,MAAM,QAAQ,UAAU;AAAA;AAAA,EAEvE,SAAS,iBAAiB,UAAU,aAAa,aAAa,eAAe;AAC3E,QAAI,IAAI,kBAAkB,SAAS;AACnC,QAAI,KAAK,MAAM;AACb,aAAO,EAAE,UAAU,aAAa,aAAa;AAAA,WACxC;AACL,UAAI,kEAAkE,SAAS;AAAA;AAAA;AAAA,EAGnF,iBAAiB,yBAAyB,KAAK;AAC7C,aAAS,IAAI,QAAQ;AACrB,gBAAY,IAAI,QAAQ,IAAI;AAC5B,sBAAkB,IAAI,QAAQ,IAAI;AAAA;AAAA;AAInC,IAAC,yBAAyB,WAAY;AACvC,mCAAgC,UAAU,QAAQ;AAChD,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,iBAAiB;AACvC,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,WAAW;AACjC,oBAAgB,MAAM,YAAY;AAClC,oBAAgB,MAAM,QAAQ;AAC9B,aAAS,UAAU;AACnB,SAAK,WAAW,SAAS;AACzB,QAAI,SAAS,UAAU;AACrB,WAAK,QAAQ,KAAK,SAAS;AAAA;AAE7B,QAAI,OAAO,UAAU;AACnB,WAAK,QAAQ,KAAK,OAAO;AAAA;AAAA;AAG7B,eAAa,yBAAwB,CAAC;AAAA,IACpC,KAAK;AAAA,IACL,OAAO,kBAAkB,GAAG;AAC1B,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,iBAAiB,KAAK,UAAU;AAAA;AAAA,KAE/C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,GAAG;AAC7B,WAAK,UAAU,KAAK,QAAQ,OAAO,SAAU,IAAI;AAC/C,eAAO,OAAO;AAAA;AAEhB,WAAK,SAAS,oBAAoB,KAAK,UAAU;AAAA;AAAA,KAElD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAiB,aAAa,aAAa,eAAe;AAC/D,WAAK,gBAAgB,gBAAgB,QAAQ,MAAM,aAAa,aAAa;AAC7E,WAAK,OAAO,OAAO,KAAK;AACxB,WAAK,OAAO,OAAO,KAAK;AACxB,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK;AACjC,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK;AAAA;AAAA,KAElC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,SAAS,mBAAmB,KAAK,UAAU;AAAA;AAAA;AAGpD,SAAO;AAAA;AAGN,IAAC,cAAc,SAAU,uBAAuB;AACjD,YAAU,cAAa;AACvB,MAAI,SAAS,aAAa;AAC1B,wBAAqB,UAAU,QAAQ;AACrC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,QAAQ,aAAY;AACnE,aAAS,UAAU;AACnB,UAAM,SAAS,OAAO,UAAU;AAChC,UAAM,gBAAgB,MAAM,MAAM;AAClC,UAAM,qBAAqB,MAAM,SAAS;AAC1C,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AACF,gBAAgB,aAAa,QAAQ;AACrC,IAAI,qBAAqB;AAAA,EACvB,MAAM,YAAY;AAAA,EAClB,KAAK;AAAA,EACL,SAAS,kBAAiB,IAAI,aAAa,aAAa,eAAe;AACrE,QAAI,IAAI,YAAY,OAAO,GAAG,QAC1B,IAAI,YAAY,OAAO,GAAG,QAC1B,IAAI,GAAG,SAAS,GAChB,IAAI,GAAG,SAAS;AACpB,QAAI,iBAAiB,cAAc,QAAQ;AACzC,UAAI,KAAK,cAAc,eAAe;AACtC,WAAK;AACL,WAAK;AACL,WAAK,KAAK;AACV,WAAK,KAAK;AAAA;AAEZ,OAAG,IAAI;AACP,OAAG,IAAI;AACP,OAAG,IAAI;AACP,OAAG,IAAI;AACP,WAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG;AAAA;AAAA,EAEzB,WAAW,mBAAmB,IAAI;AAChC,WAAO;AAAA,MACL,QAAQ,GAAG;AAAA;AAAA;AAAA;AAKd,IAAC,gBAAgB,SAAU,uBAAuB;AACnD,YAAU,gBAAe;AACzB,MAAI,SAAS,aAAa;AAC1B,0BAAuB,UAAU,QAAQ;AACvC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,oBAAgB,uBAAuB,QAAQ,QAAQ,eAAc;AACrE,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AACF,gBAAgB,eAAe,QAAQ;AACvC,IAAI,uBAAuB;AAAA,EACzB,MAAM,cAAc;AAAA,EACpB,KAAK;AAAA,EACL,SAAS,kBAAiB,IAAI,aAAa,aAAa,eAAe;AACrE,OAAG,IAAI,YAAY;AACnB,OAAG,IAAI,YAAY;AACnB,OAAG,IAAI;AACP,OAAG,IAAI;AACP,WAAO,CAAC,YAAY,MAAM,YAAY,MAAM,IAAI;AAAA;AAAA,EAElD,WAAW,oBAAmB,IAAI;AAChC,WAAO;AAAA;AAAA;AAIR,IAAC,oBAAoB,SAAU,uBAAuB;AACvD,YAAU,oBAAmB;AAC7B,MAAI,SAAS,aAAa;AAC1B,8BAA2B,UAAU,QAAQ;AAC3C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,QAAQ,mBAAkB;AACzE,aAAS,UAAU;AACnB,UAAM,QAAQ,OAAO,SAAS;AAC9B,UAAM,SAAS,OAAO,UAAU;AAChC,WAAO;AAAA;AAET,eAAa,oBAAmB,MAAM,CAAC;AAAA,IACrC,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI;AAC7B,aAAO;AAAA,QACL,OAAO,GAAG;AAAA,QACV,QAAQ,GAAG;AAAA;AAAA;AAAA;AAIjB,SAAO;AAAA,EACP;AACF,gBAAgB,mBAAmB,QAAQ;AAC3C,IAAI,2BAA2B;AAAA,EAC7B,MAAM,kBAAkB;AAAA,EACxB,KAAK;AAAA,EACL,SAAS,kBAAiB,IAAI,aAAa,aAAa,eAAe;AACrE,QAAI,QAAQ,cAAc,SAAS,GAAG,OAClC,SAAS,cAAc,UAAU,GAAG,QACpC,IAAI,YAAY,OAAO,QAAQ,GAC/B,IAAI,YAAY,OAAO,SAAS;AACpC,OAAG,IAAI;AACP,OAAG,IAAI;AACP,OAAG,IAAI;AACP,OAAG,IAAI;AACP,WAAO,CAAC,GAAG,GAAG,OAAO;AAAA;AAAA,EAEvB,WAAW,oBAAmB,IAAI;AAChC,WAAO;AAAA,MACL,OAAO,GAAG;AAAA,MACV,QAAQ,GAAG;AAAA;AAAA;AAAA;AAKd,IAAC,oBAAoB,WAAY;AAClC,8BAA2B,YAAY,QAAQ;AAC7C,oBAAgB,MAAM;AACtB,SAAK,aAAa;AAClB,oBAAgB,MAAM,QAAQ;AAC9B,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,QAAQ;AAC9B,oBAAgB,MAAM,cAAc;AACpC,oBAAgB,MAAM,cAAc;AACpC,oBAAgB,MAAM,WAAW;AACjC,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,OAAO;AAC7B,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,YAAY;AAClC,oBAAgB,MAAM,eAAe;AACrC,oBAAgB,MAAM,sBAAsB;AAC5C,oBAAgB,MAAM,8BAA8B;AACpD,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,eAAe;AACrC,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,KAAK;AAC3B,oBAAgB,MAAM,WAAW;AACjC,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,YAAY;AAClC,oBAAgB,MAAM,cAAc;AACpC,oBAAgB,MAAM,YAAY;AAClC,SAAK,OAAO,OAAO,QAAQ,KAAK;AAChC,SAAK,aAAa,MAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,KAAK,KAAK;AACjE,SAAK,aAAa,MAAM,QAAQ,KAAK,QAAQ,KAAK,KAAK,KAAK,KAAK;AACjE,SAAK,MAAM,OAAO,OAAO;AACzB,SAAK,YAAY,MAAM,QAAQ,KAAK,OAAO,KAAK,IAAI,KAAK,KAAK;AAC9D,SAAK,YAAY,MAAM,QAAQ,KAAK,OAAO,KAAK,IAAI,KAAK,KAAK;AAC9D,SAAK,UAAU,KAAK,IAAI,KAAK,YAAY,KAAK;AAC9C,SAAK,WAAW,OAAO,YAAY;AACnC,SAAK,aAAa,OAAO,cAAc;AAAA;AAEzC,eAAa,oBAAmB,CAAC;AAAA,IAC/B,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,GAAG,UAAU;AACvC,WAAK,WAAW;AAChB,WAAK,SAAS,KAAK,QAAQ,CAAC;AAAA;AAAA,KAE7B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,GAAG;AAChC,WAAK,WAAW;AAChB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB;AAC9B,WAAK,WAAW;AAChB,WAAK,SAAS;AAAA;AAAA,KAEf;AAAA,IACD,KAAK;AAAA,IACL,OACA,kCAAkC,GAAG,IAAI,IAAI;AAC3C,aAAO;AAAA,QACL,GAAG,EAAE;AAAA,QACL,GAAG,EAAE;AAAA,QACL,IAAI,EAAE;AAAA,QACN,IAAI,EAAE;AAAA,QACN,MAAM,EAAE,OAAO;AAAA,QACf,MAAM,EAAE,OAAO;AAAA;AAAA;AAAA,KAGlB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,WAAK,SAAS;AAAA;AAAA,KAEf;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,GAAG,GAAG;AACxC,UAAI,MAAM;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,mBAAmB;AAAA;AAErB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,KAAK,SAAS,GAAG,uBAAuB,GAAG;AACpD,YAAI,GAAG,IAAI,IAAI,GAAG;AAChB,cAAI,IAAI,GAAG;AACX,cAAI,IAAI,GAAG;AACX,cAAI,IAAI,GAAG;AACX,cAAI,IAAI,GAAG;AACX,cAAI,IAAI,KAAK,SAAS;AACtB,cAAI,KAAK,GAAG;AACZ,cAAI,KAAK,GAAG;AACZ,cAAI,KAAK,GAAG;AACZ,cAAI,KAAK,GAAG;AACZ,cAAI,QAAQ;AACZ,cAAI,oBAAoB,KAAK,mBAAmB,GAAG,KAAK,GAAG,IAAK,MAAK,mBAAmB,GAAG,KAAK,KAAK,mBAAmB,GAAG;AAAA;AAAA;AAG/H,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,IAAI,IAAI,IAAI,IAAI;AAC/C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,MAAM,KAAK,KAAK,SAAS,GAAG,iBAAiB,IAAI,IAAI,IAAI;AAAA;AAEpE,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,GAAG,GAAG,GAAG,GAAG;AAC1C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,MAAM,KAAK,KAAK,SAAS,GAAG,gBAAgB,GAAG,GAAG,GAAG;AAAA;AAEhE,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,KAAK;AAC3C,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,MAAM,KAAK,KAAK,SAAS,GAAG,wBAAwB;AAAA;AAE/D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qCAAqC;AAC1C,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,KAAK,SAAS,GAAG;AAC1B,aAAK,2BAA2B,KAAK,KAAK,KAAK;AAC/C,aAAK,mBAAmB,KAAK,CAAC,QAAQ,UAAU,KAAK,KAAK;AAAA;AAAA;AAAA,KAG7D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,UAAU,UAAU;AAC1D,UAAI,KAAK,GAAG;AACZ,UAAI,UAAU;AACZ,mBAAW,WAAW,IAAI,WAAW,KAAK,cAAe,MAAK,cAAc,YAAY,KAAK;AAAA;AAE/F,UAAI,aAAa,GAAG;AAClB,cAAM,KAAK,SAAS,SAAS;AAC7B,8BAAsB;AAAA,iBACb,aAAa,GAAG;AACzB,8BAAsB;AACtB,cAAM;AAAA,aACD;AACL,YAAI,YAAY,KAAK;AACnB,gBAAM;AACN,gCAAsB;AACtB,eAAK,IAAI,KAAK,mBAAmB,SAAS,GAAG,IAAI,IAAI,KAAK;AACxD,gBAAI,KAAK,mBAAmB,GAAG,MAAM,YAAY,KAAK,mBAAmB,GAAG,MAAM,UAAU;AAC1F,oBAAM;AACN,oCAAuB,YAAW,KAAK,mBAAmB,GAAG,MAAM,KAAK,2BAA2B;AACnG;AAAA;AAAA;AAAA,eAGC;AACL,gBAAM,KAAK,mBAAmB,SAAS;AACvC,gCAAsB;AACtB,eAAK,IAAI,GAAG,IAAI,KAAK,mBAAmB,QAAQ,KAAK;AACnD,gBAAI,KAAK,mBAAmB,GAAG,MAAM,UAAU;AAC7C,oBAAM;AACN,oCAAuB,YAAW,KAAK,mBAAmB,GAAG,MAAM,KAAK,2BAA2B;AACnG;AAAA;AAAA;AAAA;AAAA;AAKR,aAAO;AAAA,QACL,SAAS,KAAK,SAAS;AAAA,QACvB,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,QAAQ;AACzC,UAAI,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,IAAI;AACtD;AAAA;AAEF,UAAI,IAAI,IAAI,MAAM;AAClB,WAAK,SAAS,KAAK;AACnB,WAAK,eAAe,EAAE;AACtB,WAAK,aAAa;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,WAAK,cAAc;AACnB,WAAK,SAAS,SAAS;AACvB,WAAK,mBAAmB,SAAS;AACjC,WAAK,2BAA2B,SAAS;AAAA;AAAA,KAE1C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,QAAQ;AACtC,WAAK,cAAc,OAAO;AAC1B,UAAI,KAAK,OAAO,UAAU,MACtB,KAAK,OAAO,UAAU,MACtB,KAAK,OAAO,UAAU,MACtB,KAAK,OAAO,UAAU,MACtB,UAAU,SAAS;AAAA,QACrB,GAAG;AAAA,QACH,GAAG;AAAA,SACF;AAAA,QACD,GAAG;AAAA,QACH,GAAG;AAAA,UAED,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,KAAK,CAAC,OAAO,UAAU,IAAI,OAAO,UAAU,KAC5C,KAAK,CAAC,OAAO,UAAU,IAAI,OAAO,UAAU,KAC5C,IAAI,QAAQ,KAAK,IACjB,IAAI,QAAQ,KAAK,IACjB,IAAI,KAAK,IAAI,KAAK,KAClB,IAAI,KAAK,IAAI,KAAK;AACtB,UAAI,sBAAsB,GAAG,OAAO,KAAK,GAAG,OAAO;AACnD,UAAI,sBAAsB,GAAG,OAAO,KAAK,GAAG,OAAO;AACnD,UAAI,uBAAuB,qBAAqB;AAC9C,YAAI,QAAQ,IAAI,IAAI,IAAI,GACpB,SAAS,CAAC,GAAG,GAAG,QAChB,KAAK,UAAU,IAAI,KAAK,IACxB,KAAK,UAAU,IAAI,KAAK;AAC5B,YAAI,qBAAqB;AACvB,aAAG,SAAS,KAAK,KAAK,KAAK;AAC3B,aAAG,UAAU;AAAA;AAEf,YAAI,qBAAqB;AACvB,aAAG,SAAS,KAAK,KAAK,IAAI;AAC1B,aAAG,UAAU;AAAA;AAAA;AAGjB,UAAI,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG,KAAK,KAAK,YAAY,GAAG,IAC9D,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG,KAAK,KAAK,YAAY,GAAG,IAC9D,KAAK,QAAQ,KAAK,YAAY,GAAG,KAAK,IAAI,KAAK,YAAY,GAAG,IAC9D,KAAK,QAAQ,KAAK,YAAY,GAAG,KAAK,IAAI,KAAK,YAAY,GAAG,IAC9D,WAAW,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG;AAC1C,UAAI,SAAS;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,KAAK,IAAI,KAAK;AAAA,QACrB,OAAO,KAAK,IAAI,KAAK;AAAA,QACrB,IAAK,MAAK,MAAM;AAAA,QAChB,IAAK,MAAK,MAAM;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY,KAAK,GAAG,KAAK,KAAK;AAAA,QAC9B,YAAY,KAAK,GAAG,KAAK,KAAK;AAAA,QAC9B,UAAU,KAAK,GAAG,KAAK,KAAK;AAAA,QAC5B,UAAU,KAAK,GAAG,KAAK,KAAK;AAAA,QAC5B,0BAA0B,KAAK,IAAI,KAAK,MAAM,KAAK,aAAa,KAAK;AAAA,QACrE,0BAA0B,KAAK,IAAI,KAAK,MAAM,KAAK,aAAa,KAAK;AAAA,QACrE,UAAU,aAAa;AAAA,QACvB,eAAe,aAAa;AAAA,QAC5B,YAAY,aAAa;AAAA,QACzB,YAAY,GAAG,OAAO,IAAI,MAAM;AAAA,QAChC,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI;AAAA,QACjC,OAAO,CAAC,KAAK,YAAY,KAAK;AAAA;AAEhC,aAAO,oBAAoB,OAAO,WAAW,aAAa,OAAO,aAAa,eAAe;AAC7F,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,SAAS;AACpC,UAAI,YAAY,QAAQ;AACxB,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK,OAAO,MAAM,UAAU;AACxD,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK,OAAO,MAAM,UAAU;AACxD,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK,OAAO,MAAM,UAAU;AACxD,WAAK,OAAO,OAAO,KAAK,IAAI,KAAK,OAAO,MAAM,UAAU;AAAA;AAAA,KAEzD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC;AACtC,UAAI;AACJ,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,KAAK,SAAS,GAAG,MAAM,KAAK,KAAK,SAAS,GAAG,aAAa,KAAK,KAAK,mBAAmB;AAAA;AAAA;AAAA,KAG9F;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,UAAU,UAAU;AAC9C,UAAI,MAAM,KAAK,wBAAwB,UAAU;AACjD,aAAO,IAAI,WAAW,IAAI,QAAQ,YAAY,IAAI,YAAY,UAAU;AAAA,QACtE,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,UAAU,UAAU;AAClD,UAAI,MAAM,KAAK,wBAAwB,UAAU;AACjD,aAAO,IAAI,WAAW,IAAI,QAAQ,gBAAgB,IAAI,YAAY,UAAU;AAAA;AAAA,KAE7E;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,UAAU,UAAU,UAAU;AAC/D,UAAI,MAAM,KAAK,wBAAwB,UAAU;AACjD,aAAO,IAAI,WAAW,IAAI,QAAQ,mBAAmB,IAAI,YAAY,UAAU,UAAU;AAAA,QACvF,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAiB,QAAQ;AAC9B,WAAK,YAAY,KAAK,gBAAgB;AACtC,WAAK;AACL,WAAK,SAAS,KAAK,WAAW;AAC9B,WAAK,IAAI,KAAK,UAAU,OAAO;AAC/B,WAAK,IAAI,KAAK,UAAU,OAAO;AAC/B,WAAK,IAAI,KAAK,UAAU,OAAO;AAC/B,WAAK,IAAI,KAAK,UAAU,OAAO;AAC/B,WAAK,UAAU,KAAK,UAAU;AAC9B,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,KAAK,aAAa;AAAA;AAAA;AAEzD,SAAO;AAAA;AAGT,IAAI,kBAAkB,SAAU,kBAAkB;AAChD,YAAU,kBAAiB;AAC3B,MAAI,SAAS,aAAa;AAC1B,4BAAyB,QAAQ;AAC/B,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM;AAC1B,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,KAAK;AACpD,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,QAAQ,iBAAgB;AACvE,UAAM,gBAAgB;AAAA,MACpB,IAAI,OAAO;AAAA,MACX,IAAI,OAAO;AAAA,MACX,IAAI,OAAO;AAAA,MACX,IAAI,OAAO;AAAA;AAEb,WAAO;AAAA;AAET,eAAa,kBAAiB,CAAC;AAAA,IAC7B,KAAK;AAAA,IACL,OAAO,iBAAiB,gBAAgB;AACtC,aAAQ,kBAAiB,OAAO,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,OAAO,KAAK,KAAK,MAAM,KAAK;AAAA;AAAA,KAEnG;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,WAAK,SAAS,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI;AACrF,WAAK,IAAI,SAAS;AAAA,QAChB,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA,SACP;AAAA,QACD,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA;AAEV,WAAK,KAAK,KAAK,KAAK;AACpB,WAAK,UAAU;AAAA,QACb,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,QAC7B,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,QAC7B,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,QAC7B,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA;AAAA;AAAA,KAGhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,QAAQ;AACtC,WAAK,KAAK,OAAO;AACjB,WAAK,KAAK,OAAO;AACjB,WAAK,KAAK,OAAO;AACjB,WAAK,KAAK,OAAO;AACjB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,UAAU,UAAU;AAC9C,UAAI,aAAa,KAAK,CAAC,UAAU;AAC/B,eAAO;AAAA,UACL,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA;AAAA,iBAED,aAAa,KAAK,CAAC,UAAU;AACtC,eAAO;AAAA,UACL,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA;AAAA,aAEL;AACL,YAAI,IAAI,WAAW,WAAW,IAAI,WAAW,KAAK,SAAS,WAAW,WAAW,KAAK;AACtF,eAAO,YAAY;AAAA,UACjB,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,WACP;AAAA,UACD,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,WACP;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,UAAU,UAAU;AAClD,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,UAAU,UAAU,UAAU;AAC/D,UAAI,IAAI,KAAK,YAAY,UAAU,WAC/B,eAAe,YAAY,IAAI;AAAA,QACjC,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA,UACN;AAAA,QACF,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA;AAEV,UAAI,YAAY,KAAK,KAAK,IAAI,YAAY,GAAG;AAC3C,oBAAY;AAAA;AAEd,aAAO,YAAY,GAAG,cAAc;AAAA;AAAA,KAErC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,GAAG,GAAG,GAAG;AAC9B,aAAO,KAAK,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK,IAAI,GAAG;AAAA;AAAA,KAEhD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,GAAG,GAAG,GAAG;AAC/B,aAAO,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI;AAAA;AAAA,KAEhD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,GAAG,GAAG;AAC3C,UAAI,MAAM;AAAA,QACR,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,IAAI,KAAK;AAAA,QACT,IAAI,KAAK;AAAA,QACT,IAAI,KAAK;AAAA,QACT,IAAI,KAAK;AAAA;AAEX,UAAI,KAAK,MAAM,GAAG;AAChB,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI;AAAA,iBACrE,KAAK,MAAM,YAAY,KAAK,MAAM,WAAW;AACtD,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI;AAAA,aACzE;AACL,YAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAC5B,KAAK,IAAI,KAAK,KAAK,GACvB,MAAO,MAAK,KAAM,MAAK,IAAI,KAAK,KAC5B,MAAM,KAAK,IAAI,MAAM;AACzB,YAAI,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,MAAM,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI;AAClF,YAAI,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK,IAAI,OAAO,MAAM,KAAK,QAAQ,KAAK,IAAI,KAAK,IAAI;AAAA;AAEpF,UAAI,oBAAoB,WAAW;AAAA,QACjC,GAAG,IAAI;AAAA,QACP,GAAG,IAAI;AAAA,SACN;AAAA,QACD,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA;AAEV,UAAI,IAAI,WAAW;AAAA,QACjB;AAAA,QACA;AAAA,SACC;AACH,UAAI,IAAI,oBAAoB;AAC5B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,GAAG,IAAI,IAAI;AAC3C,aAAO,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK;AAAA;AAAA,KAEvD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,KAAK,KAAK,KAAK,KAAK;AACnD,UAAI,KAAK,KAAK,IAAI,SAAS;AAAA,QACzB,GAAG;AAAA,QACH,GAAG;AAAA,SACF;AAAA,QACD,GAAG;AAAA,QACH,GAAG;AAAA,WAED,KAAK,KAAK,IAAI,KAAK,IACnB,IAAI,OAAO,WAAW,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IACpD,MAAM,IACN,KAAK,OAAO,WAAW,MAAM,MAAM,KAAK;AAC5C,UAAI,OAAO,IAAI;AACb,YAAI,OAAO,YAAY,OAAO,GAAG;AAC/B,cAAI,KAAK,kBAAkB,KAAK,KAAK,IAAI,KAAK,OAAO,KAAK,kBAAkB,KAAK,IAAI,KAAK,MAAM;AAC9F,gBAAI,KAAK;AAAA,cACP,GAAG;AAAA,cACH,GAAG,KAAK;AAAA;AAAA;AAAA,mBAGH,OAAO,KAAK,OAAO,UAAU;AACtC,cAAI,KAAK,kBAAkB,KAAK,KAAK,IAAI,KAAK,OAAO,KAAK,kBAAkB,KAAK,IAAI,KAAK,MAAM;AAC9F,gBAAI,KAAK;AAAA,cACP,GAAG,KAAK;AAAA,cACR,GAAG;AAAA;AAAA;AAAA,eAGF;AACL,cAAI,GAAG;AACP,cAAI,OAAO,UAAU;AACnB,gBAAI;AACJ,gBAAI,KAAK,kBAAkB,GAAG,KAAK,IAAI,KAAK,KAAK;AAC/C,kBAAI,KAAK,MAAM;AACf,kBAAI,KAAK,kBAAkB,GAAG,KAAK,MAAM;AACvC,oBAAI,KAAK;AAAA,kBACP,GAAG;AAAA,kBACH,GAAG;AAAA;AAAA;AAAA;AAAA,qBAIA,OAAO,GAAG;AACnB,gBAAI;AACJ,gBAAI,KAAK,kBAAkB,GAAG,KAAK,IAAI,KAAK,KAAK;AAC/C,kBAAK,OAAM,KAAK;AAChB,kBAAI,KAAK,kBAAkB,GAAG,KAAK,MAAM;AACvC,oBAAI,KAAK;AAAA,kBACP,GAAG;AAAA,kBACH,GAAG;AAAA;AAAA;AAAA;AAAA,iBAIJ;AACL,gBAAK,MAAK,KAAM,MAAK;AACrB,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,kBAAkB,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,kBAAkB,GAAG,KAAK,IAAI,KAAK,KAAK;AAC9F,kBAAI,KAAK;AAAA,gBACP,GAAG;AAAA,gBACH,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAMb,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,GAAG,GAAG,GAAG,GAAG;AAC1C,UAAI,IAAI;AACR,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,GAAG,GAAG,IAAI,GAAG;AACnD,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI;AAC3D,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI;AAC3D,QAAE,KAAK,MAAM,GAAG,KAAK,iBAAiB,GAAG,IAAI,GAAG,GAAG;AACnD,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA,EACP;AACF,gBAAgB,iBAAiB,eAAe;AAEhD,IAAI,oBAAoB,SAAU,oBAAoB;AACpD,YAAU,oBAAmB;AAC7B,MAAI,SAAS,aAAa;AAC1B,gCAA6B;AAC3B,QAAI;AACJ,oBAAgB,MAAM;AACtB,aAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,WAAK,QAAQ,UAAU;AAAA;AAEzB,YAAQ,OAAO,KAAK,MAAM,QAAQ,CAAC,MAAM,OAAO;AAChD,oBAAgB,uBAAuB,QAAQ,QAAQ,mBAAkB;AACzE,WAAO;AAAA;AAET,eAAa,oBAAmB,CAAC;AAAA,IAC/B,KAAK;AAAA,IACL,OAAO,2BAA2B;AAChC,aAAO,CAAC,GAAG;AAAA;AAAA,KAEZ;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,WAAW,GAAG;AACrC,WAAK,YAAY,iBAAiB;AAAA,QAChC,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA;AAEhB,WAAK,YAAY,iBAAiB;AAAA,QAChC,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA;AAEhB,WAAK,YAAY,iBAAiB;AAAA,QAChC,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA,QACd,IAAI,UAAU;AAAA;AAEhB,WAAK,WAAW;AAAA,QACd,QAAQ,EAAE;AAAA,QACV,QAAQ,EAAE;AAAA;AAAA;AAAA,KAGb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,GAAG,IAAI,IAAI;AAC3C,aAAO;AAAA,QACL,QAAQ,KAAK,yBAAyB,EAAE,QAAQ,IAAI;AAAA,QACpD,QAAQ,KAAK,yBAAyB,EAAE,QAAQ,IAAI;AAAA;AAAA;AAAA;AAI1D,SAAO;AAAA,EACP;AACF,gBAAgB,mBAAmB,QAAQ;AAE3C,IAAI,eAAe;AAChB,IAAC,aAAa;AAAA,EACf,KAAK,cAAa,YAAY,MAAM,QAAQ;AAC1C,QAAI,IAAI,aAAa;AACrB,QAAI,CAAC,GAAG;AACN,YAAM;AAAA,QACJ,SAAS,sCAAsC,OAAO;AAAA;AAAA,WAEnD;AACL,aAAO,IAAI,EAAE,YAAY;AAAA;AAAA;AAAA,EAG7B,UAAU,kBAAkB,MAAM,MAAM;AACtC,iBAAa,QAAQ;AAAA;AAAA;AAIzB,eAAe;AACb,WAAS,OAAO,UAAU,QAAQ,YAAY,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC5F,cAAU,QAAQ,UAAU;AAAA;AAE9B,SAAO,UAAU,IAAI,SAAU,IAAI;AACjC,WAAO,MAAM;AAAA,KACZ,KAAK;AAAA;AAEV,qBAAqB;AACnB,WAAS,QAAQ,UAAU,QAAQ,YAAY,IAAI,MAAM,QAAQ,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAClG,cAAU,SAAS,UAAU;AAAA;AAE/B,SAAO,UAAU,KAAK;AAAA;AAExB,eAAe;AACb,WAAS,QAAQ,UAAU,QAAQ,UAAU,IAAI,MAAM,QAAQ,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAChG,YAAQ,SAAS,UAAU;AAAA;AAE7B,SAAO,QAAQ,IAAI,SAAU,IAAI;AAC/B,WAAO,MAAM,KAAK;AAAA,KACjB,KAAK;AAAA;AAEP,IAAC,SAAS;AACV,IAAC,SAAS;AACV,IAAC,QAAQ;AACT,IAAC,OAAO;AAGR,IAAC,WAAW;AACZ,IAAC,QAAQ;AACT,IAAC,SAAS;AACV,IAAC,kBAAkB;AACnB,IAAC,oBAAoB;AACrB,IAAC,0BAA0B;AAC3B,IAAC,qBAAqB;AACzB,IAAI,kBAAkB;AACnB,IAAC,yBAAyB,kBAAkB;AAC5C,IAAC,kBAAkB;AACnB,IAAC,qBAAqB;AACtB,IAAC,kBAAkB;AACtB,IAAI,0BAA0B;AAC9B,IAAI,kBAAkB;AACnB,IAAC,iBAAiB;AACrB,IAAI,2BAA2B;AAC/B,IAAI,sBAAsB;AAC1B,IAAI,8BAA8B;AAClC,IAAI,gCAAgC;AACpC,IAAI,+BAA+B;AACnC,IAAI,wBAAwB;AAC5B,IAAI,uBAAuB;AACxB,IAAC,gBAAgB;AACpB,IAAI,uBAAuB;AAC3B,IAAI,mBAAmB;AACvB,IAAI,4BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,yBAAyB;AAC7B,IAAI,yBAAyB;AAC7B,IAAI,0BAA0B;AAC9B,IAAI,uCAAuC;AAC3C,IAAI,qCAAqC;AACzC,IAAI,uBAAuB;AAC3B,IAAI,oBAAoB;AACxB,IAAI,uBAAuB;AAC3B,IAAI,qBAAqB;AACzB,IAAI,2BAA2B;AAC/B,IAAI,6BAA6B;AACjC,IAAI,sBAAsB;AACvB,IAAC,wBAAwB;AAC5B,IAAI,2BAA2B;AAC/B,IAAI,6BAA6B;AACjC,IAAI,yBAAyB;AAC1B,IAAC,aAAa;AACd,IAAC,oBAAoB;AACrB,IAAC,wBAAwB;AAC5B,IAAI,wBAAwB;AACzB,IAAC,0BAA0B;AAC3B,IAAC,gCAAgC;AACjC,IAAC,2BAA2B,IAAI;AACnC,IAAI,6BAA6B;AACjC,IAAI,6BAA6B;AACjC,IAAI,8BAA8B;AAClC,IAAI,8BAA8B;AAClC,IAAI,0BAA0B;AAK9B,kCAAkC,MAAM;AACtC,MAAI,IAAI;AACR,MAAI,SAAS,OAAO;AAClB,QAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,SAEN;AACL,QAAI;AAAA;AAEN,IAAE,QAAQ,KAAK,EAAE,QAAQ,MAAM;AAC/B,SAAO;AAAA;AAEN,IAAC,UAAU,SAAU,iBAAiB;AACvC,YAAU,UAAS;AACnB,MAAI,SAAS,aAAa;AAC1B,oBAAiB,UAAU,WAAW,GAAG;AACvC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK;AACpB,UAAM,WAAW;AACjB,UAAM,YAAY;AAClB,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,QAAI,KAAK;AACT,UAAM,KAAK,EAAE,MAAM;AACnB,UAAM,WAAW,EAAE,YAAY;AAC/B,UAAM,WAAW,EAAE,YAAY;AAC/B,UAAM,SAAS,EAAE,UAAU;AAC3B,UAAM,aAAa,EAAE,cAAc;AACnC,aAAS,UAAU,MAAM,QAAQ;AAC/B,YAAM,KAAK,QAAQ,MAAM,OAAO;AAAA;AAElC,WAAO;AAAA;AAET,eAAa,UAAS,CAAC;AAAA,IACrB,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,OAAO,eAAe;AAC3D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,UAAU;AACf,WAAK,SAAS,kBAAkB,MAAM;AAAA;AAAA,KAEvC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK;AAAA;AAAA;AAGhB,SAAO;AAAA,EACP;AAEF,IAAI,aAAa;AACjB,IAAI,iBAAiB;AAAA,EACnB,KAAK,cAAa,UAAU,MAAM,WAAW,QAAQ;AACnD,QAAI,IAAI,WAAW;AACnB,QAAI,CAAC,GAAG;AACN,YAAM;AAAA,QACJ,SAAS,oCAAoC,OAAO;AAAA;AAAA,WAEjD;AACL,aAAO,IAAI,EAAE,UAAU,WAAW;AAAA;AAAA;AAAA,EAGtC,UAAU,mBAAkB,MAAM,SAAS;AACzC,eAAW,QAAQ;AAAA;AAAA;AAIvB,IAAI,eAAe,SAAU,UAAU;AACrC,YAAU,eAAc;AACxB,MAAI,SAAS,aAAa;AAC1B,yBAAsB,UAAU,WAAW,GAAG;AAC5C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,WAAW;AAC/C,UAAM,WAAW;AACjB,UAAM,YAAY;AAClB,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,QAAQ,cAAa;AACpE,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,QAAI,KAAK;AAAA,MACP,OAAO;AAAA;AAET,UAAM,SAAS,EAAE;AACjB,WAAO;AAAA;AAET,eAAa,eAAc,CAAC;AAAA,IAC1B,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,UAAI,WAAW,KAAK,QAAQ;AAC1B,eAAO,KAAK,MAAM;AAAA,aACb;AACL,eAAO,KAAK;AAAA;AAAA;AAAA,KAGf;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,GAAG;AAC1B,WAAK,QAAQ;AACb,WAAK,YAAY;AACjB,WAAK,SAAS,YAAY;AAAA;AAAA,KAE3B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB;AAC9B,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,UAAI,EAAE,SAAS,MAAM;AACnB,aAAK,SAAS,EAAE;AAAA;AAAA;AAAA;AAItB,SAAO;AAAA,EACP;AACF,gBAAgB,cAAc,QAAQ;AACtC,wBAAwB,GAAG;AACzB,SAAO,EAAE,SAAS,aAAa;AAAA;AAEjC,eAAe,SAAS,SAAS;AAEjC,oBAAoB,GAAG;AACrB,SAAO,KAAK,OAAO,OAAO,EAAE,MAAM;AAAA;AAEpC,kBAAkB,MAAK,KAAK,QAAQ;AAClC,WAAS,KAAK,KAAK;AACjB,SAAI,KAAK;AAAA;AAAA;AAGb,IAAI,YAAY;AAChB,IAAI,0BAA0B;AAC9B,IAAI,YAAY;AAChB,IAAI,mBAAmB;AACvB,IAAI,SAAS;AACb,IAAI,UAAU;AACd,IAAI,0BAA0B;AAC9B,IAAI,oBAAoB;AACxB,IAAI,qBAAqB;AACzB,IAAI,aAAa;AACjB,IAAI,gBAAgB;AACpB,qBAAqB,WAAW,QAAQ;AACtC,MAAI,UAAU,gBAAgB;AAC5B,QAAI,KAAK,UAAU,qBACf,OAAM;AACV,QAAI,UAAU,UAAU;AACxB,QAAI,IAAI,OAAO,IAAI;AACnB,aAAS,MAAK,SAAS;AACvB,aAAS,IAAI,GAAG,IAAI,UAAU,OAAO,QAAQ,IAAI,GAAG,KAAK;AACvD,UAAI,MAAM,UAAU,OAAO;AAC3B,UAAI,QAAQ,kBAAkB;AAC5B,YAAI,KAAK,UAAU,SAAS,QAAQ,KAAK;AACzC,YAAI,MAAM,MAAM;AACd,cAAI,YAAY,oBAAI,IAAI,CAAC,WAAW,QAAQ;AAC5C,cAAI,GAAG,kBAAkB,yBAAyB;AAChD,qBAAS,KAAK,IAAI;AAChB,wBAAU,IAAI;AAAA;AAAA;AAGlB,cAAI,MAAM,GAAG,IAAI,CAAC,YAAY,WAAW;AACzC,mBAAS,MAAK,IAAI;AAAA;AAAA;AAAA;AAIxB,QAAI,QAAQ;AACV,UAAI,SAAS,GAAG,QAAQ;AAAA;AAE1B,cAAU,UAAU,GAAG;AAAA;AAAA;AAG3B,8BAA8B,WAAW,WAAW;AAClD,MAAI,SAAS,UAAU,OAAO,YAC1B,OAAO,UAAU,SAAS,QAAQ,QAAQ,UAAU;AACxD,MAAI,QAAQ,QAAQ,KAAK,UAAU;AACjC,cAAU,YAAY,KAAK;AAAA;AAAA;AAG/B,2BAA2B,WAAW;AACpC,MAAI,UAAU,cAAc,UAAU,iBAAiB;AACrD,QAAI,mBAAmB;AACvB,WAAO,kBAAkB,UAAU;AACnC,WAAO,kBAAkB,UAAU;AACnC,cAAU,kBAAkB;AAAA;AAAA;AAGhC,2BAA2B,WAAW,QAAQ;AAC5C,MAAI,UAAU;AAAA,IACZ,UAAU,OAAO;AAAA,IACjB,IAAI;AAAA,IACJ;AAAA,KAEE,eAAe,OAAO,SAAS;AACnC,SAAO,IAAI,aAAa,UAAU,UAAU,WAAW;AAAA;AAEzD,yBAAyB,WAAW,GAAG;AACrC,MAAI,cAAc;AAClB,MAAI,SAAS,IAAI;AACf,kBAAc,eAAe,IAAI,UAAU,UAAU,GAAG,WAAW;AAAA,aAC1D,EAAE,QAAQ,QAAQ,EAAE,WAAW,MAAM;AAC9C,QAAI,KAAK;AACT,QAAI,IAAI,OAAO,IAAI,GAAG;AACtB,kBAAc,eAAe,IAAI,UAAU,UAAU,GAAG,MAAM,WAAW;AAAA,SACpE;AACL,kBAAc;AAAA;AAEhB,cAAY,KAAK,YAAY,MAAM;AACnC,YAAU,cAAc,mBAAmB,aAAa,YAAY;AACpE,YAAU,SAAS,YAAY,MAAM;AACrC,SAAO;AAAA;AAET,IAAI,YAAY,SAAU,iBAAiB;AACzC,YAAU,YAAW;AACrB,MAAI,SAAS,aAAa;AAC1B,sBAAmB,UAAU,QAAQ;AACnC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK;AACpB,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,wBAAwB;AACvE,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,KAAK;AACpD,oBAAgB,uBAAuB,QAAQ,KAAK;AACpD,oBAAgB,uBAAuB,QAAQ,KAAK;AACpD,oBAAgB,uBAAuB,QAAQ,KAAK;AACpD,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAClE,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAClE,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,aAAS,UAAU;AACnB,UAAM,WAAW,OAAO,YAAY;AACpC,UAAM,aAAa,OAAO,cAAc,SAAS,SAAS;AAC1D,UAAM,eAAe,OAAO;AAC5B,UAAM,aAAa,OAAO;AAC1B,UAAM,SAAS;AACf,UAAM,aAAa;AACnB,UAAM,aAAa,MAAM,OAAO,cAAc;AAC9C,UAAM,KAAK,OAAO,MAAM,MAAM,gBAAgB,IAAI,OAAO;AACzD,UAAM,eAAe;AAAA,MACnB,YAAY,MAAM;AAAA,MAClB,OAAO,OAAO,SAAS,MAAM,SAAS;AAAA,MACtC,UAAU;AAAA;AAEZ,QAAI,OAAO,QAAQ;AACjB,eAAS,WAAW,OAAO,QAAQ;AACjC,cAAM,KAAK,SAAS,OAAO,OAAO;AAAA;AAAA;AAGtC,UAAM,QAAQ,WAAY;AACxB,UAAI,KAAI,OAAO,OAAO,MAAM,YAAY;AACxC,YAAM,YAAY,MAAM,IAAG,CAAC,UAAU;AACtC,aAAO;AAAA;AAET,UAAM,WAAW;AACjB,UAAM,mBAAmB;AACzB,QAAI,IAAI,OAAO,YAAY,IACvB,KAAK;AACT,QAAI,oBAAoB,MAAM;AAC9B,QAAI,mBAAmB;AACrB,UAAI,kBAAkB,MAAM,SAAS,SAAS;AAC9C,UAAI,iBAAiB;AACnB,UAAE,KAAK,MAAM,GAAG,mBAAmB;AAAA;AAErC,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,YAAI,KAAK,yBAAyB,EAAE;AACpC,WAAG,GAAG,QAAQ,MAAM;AAAA;AAAA;AAGxB,UAAM,aAAa,WAAW;AAC9B,QAAI,OAAO,OAAO;AAChB,YAAM,iBAAiB,SAAS,2BAA2B;AAAA,QACzD,MAAM,aAAa;AAAA,QACnB,SAAS;AAAA,UACP,OAAO,OAAO;AAAA,UACd,UAAU,OAAO,iBAAiB,MAAM;AAAA,UACxC,IAAI;AAAA;AAAA;AAAA;AAIV,WAAO;AAAA;AAET,eAAa,YAAW,CAAC;AAAA,IACvB,KAAK;AAAA,IACL,OAAO,yBAAyB,YAAY;AAC1C,UAAI,IAAI;AACR,UAAI,KAAK,cAAc;AACrB,YAAI;AACF,cAAI,KAAK,aAAa;AAAA,iBACf,GAAP;AACA,cAAI,yCAAyC;AAAA;AAAA;AAGjD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,UAAU,UAAU,OAAO,YAAY,cAAc;AACjF,UAAI;AACJ,UAAI,UAAU;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,UAAI,KAAK,YAAY;AACnB,YAAI;AACF,cAAI,KAAK,WAAW;AAAA,iBACb,GAAP;AACA,cAAI,uCAAuC;AAAA;AAAA,aAExC;AACL,YAAI,KAAK,SAAS,eAAe,uBAAuB;AAAA;AAE1D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,KAAK;AACvC,eAAS,KAAK,KAAK;AACjB,aAAK,aAAa,KAAK,IAAI;AAAA;AAAA;AAAA,KAG9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,KAAK,MAAM,QAAQ;AAC/C,WAAK,WAAW,UAAU,KAAK,WAAW,WAAW;AACrD,WAAK,WAAW,QAAQ,OAAO;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,KAAK,QAAQ;AAC7C,aAAO,KAAK,WAAW,UAAU,KAAK,WAAW,QAAQ,OAAO;AAAA;AAAA,KAEjE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,QAAQ,QAAQ;AACtC,WAAK;AACL,WAAK,SAAS,WAAW,WAAW;AACpC,kBAAY,MAAM;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,QAAQ;AACnC,kBAAY,MAAM;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,QAAQ;AAC9B,aAAO,KAAK,OAAO,QAAQ,YAAY;AAAA;AAAA,KAExC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,QAAQ,QAAQ;AACtC,UAAI,IAAI,WAAW,SACf,kBAAkB;AACtB,UAAI,KAAK,MAAM;AACb,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,KAAK;AACxC,cAAI,CAAC,KAAK,QAAQ,EAAE,KAAK;AACvB,iBAAK,OAAO,KAAK,EAAE;AACnB,8BAAkB;AAAA;AAAA;AAGtB,YAAI,iBAAiB;AACnB,sBAAY,MAAM;AAAA;AAAA;AAAA;AAAA,KAIvB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,QAAQ,QAAQ;AACzC,UAAI,SAAS;AACb,UAAI,IAAI,WAAW,SACf,QAAQ,OACR,OAAO,eAAc,IAAI;AAC3B,YAAI,MAAM,OAAO,OAAO,QAAQ;AAChC,YAAI,QAAQ,IAAI;AACd,+BAAqB,QAAQ;AAC7B,iBAAO,OAAO,OAAO,KAAK;AAC1B,iBAAO;AAAA;AAET,eAAO;AAAA;AAET,UAAI,KAAK,MAAM;AACb,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,KAAK;AACxC,kBAAQ,KAAK,EAAE,OAAO;AAAA;AAExB,YAAI,OAAO;AACT,sBAAY,MAAM;AAAA;AAAA;AAAA;AAAA,KAIvB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,QAAQ,cAAc;AAC/C,UAAI,IAAI,KAAK,OAAO;AACpB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,6BAAqB,MAAM;AAC3B,aAAK,OAAO,OAAO,GAAG;AAAA;AAExB,kBAAY,MAAM;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,QAAQ,QAAQ;AACzC,UAAI,IAAI,WAAW;AACnB,UAAI,KAAK,MAAM;AACb,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,KAAK;AACxC,cAAI,MAAM,KAAK,OAAO,QAAQ,EAAE;AAChC,cAAI,QAAQ,IAAI;AACd,iCAAqB,MAAM;AAC3B,iBAAK,OAAO,OAAO,KAAK;AAAA,iBACnB;AACL,iBAAK,OAAO,KAAK,EAAE;AAAA;AAAA;AAGvB,oBAAY,MAAM;AAAA;AAAA;AAAA,KAGrB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,GAAG,QAAQ;AACnC,WAAK,cAAc,EAAE;AACrB,WAAK,mBAAmB,EAAE;AAC1B,WAAK,gBAAgB,EAAE;AACvB,WAAK,kBAAkB,KAAK;AAC5B,UAAI,EAAE,UAAU;AACd,YAAI,OAAO,IACP;AACJ,aAAK,KAAK,EAAE,UAAU;AACpB,cAAI,WAAW,KAAK,SAAS,EAAE,SAAS,GAAG,QAAQ;AACnD,cAAI,UAAU;AACZ,qBAAS,WAAW,EAAE,SAAS,GAAG;AAClC,iBAAK,EAAE,SAAS,GAAG,QAAQ,MAAM;AACjC,iBAAK,SAAS,gBAAgB,UAAU;AAAA,iBACnC;AACL,gBAAI,KAAK,KAAK,kBAAkB,WAAW,EAAE,SAAS,GAAG,QAAQ;AACjE,gBAAI,MAAM,MAAM;AACd,mBAAK,SAAS,gBAAgB,IAAI;AAClC,iBAAG,WAAW;AACd,iBAAG,WAAW,EAAE,SAAS,GAAG;AAC5B,mBAAK,SAAS,GAAG,MAAM;AAAA,mBAClB;AACL,mBAAK,KAAK,WAAW,EAAE,SAAS;AAAA;AAElC,iBAAK,GAAG,MAAM;AAAA;AAAA;AAGlB,aAAK,KAAK,KAAK,UAAU;AACvB,cAAI,KAAK,KAAK,SAAS,GAAG,OAAO,MAAM;AACrC,iBAAK,cAAc,KAAK,SAAS,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,KAK/C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,OAAO;AACnC,WAAK,aAAa;AAClB,WAAK,kBAAkB,KAAK;AAC5B,wBAAkB;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB;AAC9B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,OAAO;AACxC,WAAK,kBAAkB;AACvB,wBAAkB;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B;AACnC,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,eAAS,KAAK,KAAK,UAAU;AAC3B,aAAK,SAAS,eAAe,KAAK,SAAS;AAAA;AAE7C,WAAK,WAAW;AAChB,WAAK,mBAAmB;AACxB,WAAK;AACL,WAAK,QAAQ;AAAA;AAAA,KAEd;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,GAAG;AACjC,UAAI,KAAK,MAAM;AACb,eAAO,KAAK,YAAY;AAAA;AAAA;AAAA,KAG3B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,UAAU;AACf,UAAI,GAAG;AACL,aAAK;AAAA,aACA;AACL,aAAK;AAAA;AAAA;AAAA,KAGR;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oCAAoC,SAAS,IAAI;AACtD,WAAK,iBAAiB,QAAQ,MAAM;AAAA;AAAA,KAErC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oCAAoC,SAAS;AAClD,aAAO,KAAK,mBAAmB,KAAK,iBAAiB,QAAQ,MAAM;AAAA;AAAA,KAEpE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,QAAQ,OAAO;AACzC,eAAS,KAAK,KAAK,UAAU;AAC3B,YAAI,WAAW,YAAY;AACzB,eAAK,SAAS,gBAAgB,KAAK,SAAS,IAAI;AAAA,mBACvC,WAAW,eAAe;AACnC,eAAK,SAAS,mBAAmB,KAAK,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA,KAIxD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,OAAO,SAAS;AACvC,UAAI,QAAS,MAAK,YAAY,IAAI,MAAM;AACxC,YAAM,KAAK;AACX,WAAK,WAAW,MAAM,KAAK;AAC3B,WAAK,YAAY,YAAY;AAAA;AAAA,KAE9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,SAAS;AAC1C,UAAI,QAAS,MAAK,YAAY,IAAI,MAAM;AACxC,WAAK,WAAW,MAAM,OAAO,SAAU,GAAG;AACxC,eAAO,MAAM;AAAA,SACZ,KAAK;AACR,WAAK,YAAY,eAAe;AAAA;AAAA,KAEjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,OAAO,eAAe;AAC3D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,GAAG;AACzB,WAAK,OAAO,KAAK;AAAA;AAAA,KAElB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,GAAG;AAC3B,WAAK,OAAO,OAAO,KAAK,MAAM;AAAA;AAAA,KAE/B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,SAAS;AAClC,UAAI,IAAI,gBAAgB,MAAM;AAC9B,UAAI,KAAK,WAAW,EAAE,SAAS,aAAa,QAAQ,CAAC,SAAS,UAAU;AACtE,YAAI,IAAI,KAAK,WACT,IAAI,QAAQ;AAChB,YAAI,GAAG;AACL,cAAI,oBAAoB,EAAE,0BAA0B;AACpD,cAAI,MAAM,EAAE;AACZ,cAAI,KAAK;AACP,cAAE,WAAW;AAAA;AAAA;AAAA;AAInB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI;AAC7B,aAAO,KAAK,SAAS;AAAA;AAAA,KAEtB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,UAAI,IAAI,KAAK,WAAW;AACxB,UAAI,GAAG;AACL,UAAE,WAAW;AAAA;AAAA;AAAA,KAGhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB;AAC7B,eAAS,OAAO,UAAU,QAAQ,MAAM,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AACtF,YAAI,QAAQ,UAAU;AAAA;AAExB,YAAM,OAAO;AACb,eAAS,KAAK,KAAK,UAAU;AAC3B,YAAI,IAAI,WAAW,KAAK,IAAI,QAAQ,OAAO,IAAI;AAC7C,eAAK,SAAS,GAAG,WAAW;AAAA;AAAA;AAAA;AAAA,KAIjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,UAAI,IAAI,KAAK,WAAW;AACxB,UAAI,GAAG;AACL,UAAE,WAAW;AAAA;AAAA;AAAA,KAGhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB;AAC7B,eAAS,QAAQ,UAAU,QAAQ,MAAM,IAAI,MAAM,QAAQ,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC5F,YAAI,SAAS,UAAU;AAAA;AAEzB,YAAM,OAAO;AACb,eAAS,KAAK,KAAK,UAAU;AAC3B,YAAI,IAAI,WAAW,KAAK,IAAI,QAAQ,OAAO,IAAI;AAC7C,eAAK,SAAS,GAAG,WAAW;AAAA;AAAA;AAAA;AAAA,KAIjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,eAAS,KAAK,KAAK,UAAU;AAC3B,aAAK,SAAS,eAAe,KAAK,SAAS;AAAA;AAE7C,WAAK,WAAW;AAChB,WAAK,mBAAmB;AACxB,WAAK,oBAAoB;AAAA;AAAA,KAE1B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,WAAW,aAAa;AACpD,UAAI,IAAI,KAAK,SAAS;AACtB,UAAI,GAAG;AACL,UAAE,WAAW;AACb,YAAI,CAAC,aAAa;AAChB,eAAK,SAAS,eAAe;AAAA;AAE/B,eAAO,KAAK,SAAS;AACrB,YAAI,KAAK,kBAAkB;AACzB,iBAAO,KAAK,iBAAiB;AAAA;AAE/B,YAAI,KAAK,mBAAmB;AAC1B,iBAAO,KAAK,kBAAkB;AAAA;AAAA;AAAA;AAAA,KAInC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,eAAS,QAAQ,UAAU,QAAQ,WAAW,IAAI,MAAM,QAAQ,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjG,iBAAS,SAAS,UAAU;AAAA;AAE9B,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,IAAI,GAAG,KAAK;AAC/C,aAAK,cAAc,UAAU;AAAA;AAAA;AAAA,KAGhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,UAAI,KAAK,KAAK;AACd,aAAO,MAAM,OAAO,GAAG,aAAa;AAAA;AAAA,KAErC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B;AAChC,aAAO,KAAK,WAAW;AAAA;AAAA,KAExB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,GAAG;AAC1B,UAAI,KAAK,KAAK;AACd,UAAI,CAAC,IAAI;AACP,YAAI,WAAW,SAAS,MAAM,WAAW,KAAK;AAAA,UAC5C,OAAO;AAAA,YACL;AACJ,aAAK,kBAAkB,MAAM;AAC7B,aAAK,SAAS,2BAA2B;AAAA,aACpC;AACL,YAAI,SAAS,MAAM,WAAW,IAAI;AAChC,aAAG,SAAS;AAAA,eACP;AACL,cAAI,KAAK;AACT,cAAI,GAAG,OAAO;AACZ,eAAG,SAAS,GAAG;AAAA;AAEjB,cAAI,GAAG,UAAU;AACf,eAAG,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3B,SAAO;AAAA,EACP;AAEF,IAAI,YAAY,mBAAmB;AACnC,IAAI;AACJ,AAAC,UAAU,aAAY;AACrB,cAAW,SAAS;AACpB,cAAW,UAAU;AACrB,cAAW,WAAW;AACtB,cAAW,YAAY;AAAA,GACtB,cAAe,cAAa;AAC/B,IAAI,MAAM,WAAW;AACrB,IAAI,OAAO,WAAW;AACtB,IAAI,QAAQ,WAAW;AACvB,IAAI,SAAS,WAAW;AACxB,IAAI,eAAe,CAAC,MAAM;AAC1B,IAAI,eAAe,CAAC,KAAK;AACzB,IAAI,4BAA4B,WAAY;AAC1C,sCAAmC,UAAU,SAAS;AACpD,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,oBAAgB,MAAM,cAAc;AACpC,oBAAgB,MAAM,gBAAgB;AACtC,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,mBAAmB;AACzC,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,MAAM,YAAY;AAClC,oBAAgB,MAAM,aAAa;AACnC,oBAAgB,MAAM,QAAQ;AAC9B,oBAAgB,MAAM,MAAM;AAC5B,oBAAgB,MAAM,eAAe,CAAC,GAAG;AACzC,oBAAgB,MAAM,QAAQ;AAC9B,SAAK,OAAO,SAAS,QAAQ;AAC7B,SAAK,UAAU,KAAK;AAAA,MAClB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI,KAAK,YAAY;AAAA,MACrB,IAAI,KAAK,YAAY;AAAA,MACrB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK,KAAK,YAAY;AAAA,MACtB,KAAK,KAAK,YAAY;AAAA,MACtB,KAAK;AAAA;AAAA;AAGT,eAAa,4BAA2B,CAAC;AAAA,IACvC,KAAK;AAAA,IACL,OAAO,sCAAsC;AAC3C,WAAK,SAAS,OAAO,qBAAqB,MAAM,CAAC,KAAK,UAAU,GAAG,IAAI,KAAK,UAAU,GAAG;AAAA;AAAA,KAE1F;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,UAAU;AAC7B,WAAK,cAAc,KAAK,SAAS,OAAO,uBAAuB;AAC/D,WAAK,UAAU,GAAG,KAAK,KAAK,YAAY;AACxC,WAAK,UAAU,GAAG,KAAK,KAAK,YAAY;AACxC,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,eAAe;AACpB,WAAK,cAAc;AACnB,WAAK,UAAU,GAAG,KAAK,KAAK,UAAU,GAAG;AACzC,WAAK,UAAU,GAAG,KAAK,KAAK,UAAU,GAAG;AACzC,WAAK;AAAA;AAAA;AAGT,SAAO;AAAA;AAET,IAAI,YAAa,cAAa,IAAI,gBAAgB,YAAY,KAAK,SAAS,gBAAgB,YAAY,OAAO,OAAO,gBAAgB,YAAY,MAAM,QAAQ,gBAAgB,YAAY,QAAQ,MAAM;AAC1M,IAAI,mBAAoB,qBAAoB,IAAI,gBAAgB,mBAAmB,KAAK,QAAQ,gBAAgB,mBAAmB,OAAO,SAAS,gBAAgB,mBAAmB,MAAM,MAAM,gBAAgB,mBAAmB,QAAQ,OAAO;AACpP,IAAI,uBAAwB,yBAAwB,IAAI,gBAAgB,uBAAuB,KAAK,OAAO,gBAAgB,uBAAuB,OAAO,MAAM,gBAAgB,uBAAuB,MAAM,SAAS,gBAAgB,uBAAuB,QAAQ,QAAQ;AAC5Q,wBAAwB,GAAG;AACzB,SAAO,EAAE,MAAM,WAAW,IAAI,MAAM,EAAE,MAAM;AAAA;AAE9C,0BAA0B,GAAG,MAAM;AACjC,SAAO,EAAE,MAAM,QAAQ,UAAU;AAAA;AAEnC,qBAAqB,GAAG,MAAM;AAC5B,SAAQ,GAAE,YAAY,mBAAmB,sBAAsB;AAAA;AAEjE,qBAAqB,GAAG,MAAM;AAC5B,SAAQ,GAAE,YAAY,uBAAuB,kBAAkB;AAAA;AAEjE,yBAAyB,GAAG,MAAM;AAChC,SAAO,EAAE,cAAc,OAAO,EAAE,cAAc,OAAO,iBAAiB,GAAG,UAAU,OAAO,EAAE,eAAe,OAAO,EAAE,WAAW,QAAQ,UAAU;AAAA;AAEnJ,oBAAoB,GAAG,MAAM;AAC3B,MAAI,iBAAiB,GAAG,OAAO;AAC7B,WAAO;AAAA,aACE,iBAAiB,GAAG,UAAU,QAAQ;AAC/C,WAAO,UAAU;AAAA,SACZ;AACL,QAAI,aAAa,YAAY,GAAG;AAChC,QAAI,iBAAiB,GAAG,aAAa;AACnC,aAAO;AAAA,WACF;AACL,UAAI,aAAa,YAAY,GAAG;AAChC,UAAI,iBAAiB,GAAG,aAAa;AACnC,eAAO;AAAA;AAAA;AAAA;AAIb,SAAO;AAAA;AAET,IAAI,OAAO;AAAA,EACT,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,UAAU;AAAA,EACZ,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,QAAQ;AAAA,EACV,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,SAAS;AAAA,EACX,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,WAAW;AAAA,EACb,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,YAAY;AAAA,EACd,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,cAAc;AAAA,EAChB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,eAAe;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA,GAEJ,UAAU;AAAA,EACZ,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,MAAM;AAAA;AAER,IAAI,cAAc;AAAA,EAChB,OAAO,CAAC;AAAA,EACR,UAAU,CAAC;AAAA,EACX,QAAQ,CAAC;AAAA,EACT,SAAS,CAAC;AAAA,EACV,WAAW,CAAC;AAAA,EACZ,YAAY,CAAC;AAAA,EACb,cAAc,CAAC;AAAA,EACf,eAAe,CAAC;AAAA,EAChB,UAAU,CAAC;AAAA,EACX,eAAe,CAAC,MAAM,OAAO,SAAS;AAAA;AAExC,IAAI,wBAAwB;AAAA,EAC1B,cAAc;AAAA,IACZ,OAAO,CAAC,KAAK,MAAM,QAAQ;AAAA;AAAA,EAE7B,iBAAiB;AAAA,IACf,OAAO,CAAC;AAAA;AAAA,EAEV,mBAAmB;AAAA,IACjB,OAAO,CAAC;AAAA;AAAA,EAEV,oBAAoB;AAAA,IAClB,OAAO,CAAC;AAAA;AAAA,EAEV,kBAAkB;AAAA,IAChB,OAAO,CAAC;AAAA;AAAA,EAEV,uBAAuB;AAAA,IACrB,OAAO,CAAC,MAAM;AAAA;AAAA,EAEhB,uBAAuB;AAAA,IACrB,OAAO,CAAC,KAAK;AAAA;AAAA;AAGjB,wBAAwB,MAAM,QAAQ;AACpC,WAAS,UAAU;AACnB,MAAI,SAAS,gBAAgB,WAAW;AACtC,WAAO,uBAAuB;AAAA;AAEhC,MAAI,IAAI,YAAY;AACpB,MAAI,KAAK,MAAM;AACb,WAAO,cAAc,MAAM,IAAI,GAAG,SAAU,IAAI;AAC9C,aAAO,OAAO;AAAA,QACZ,KAAK,GAAG;AAAA,QACR,KAAK,GAAG;AAAA,SACP;AAAA,QACD;AAAA;AAEN,MAAI,sBAAsB;AAC1B,MAAI,KAAK,MAAM;AACb,WAAO,wBAAwB,MAAM,EAAE,OAAO;AAAA;AAEhD,QAAM;AAAA,IACJ,SAAS,mCAAmC,OAAO;AAAA;AAAA;AAGvD,uBAAuB,MAAM,WAAW,QAAQ;AAC9C,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW,UAAU,SAAS;AAAA,IAC9B,WAAW;AAAA,IACX,UAAU,OAAO,YAAY;AAAA;AAAA;AAGjC,8BAA8B,UAAU,SAAS;AAC/C,SAAO,IAAI,0BAA0B,UAAU;AAAA;AAEjD,IAAI,wBAAwB;AAC5B,iCAAiC,MAAM,OAAO,QAAQ;AACpD,MAAI,KAAK;AAAA,IACP;AAAA,IACA,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,UAAU,OAAO,YAAY;AAAA,IAC7B,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW;AAAA,IACX,OAAO,OAAO,SAAS;AAAA,IACvB,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,WAAW,CAAE,QAAO,cAAc;AAAA,IAClC,eAAe;AAAA;AAEjB,SAAO,eAAe,IAAI,uBAAuB;AAAA,IAC/C,KAAK,gBAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,GAAG;AACnB,WAAK,gBAAgB,WAAW,MAAM;AAAA;AAAA;AAG1C,SAAO;AAAA;AAET,+BAA+B,IAAI;AACjC,SAAO,GAAG,SAAS,KAAK,GAAG,MAAM,aAAa,GAAG,WAAW,KAAK,GAAG,MAAM,GAAG,GAAG,MAAM,aAAa,SAAS,GAAG;AAAA;AAEjH,uCAAuC,MAAM;AAC3C,MAAI,SAAS,OAAO;AAClB,WAAO,eAAe,MAAM;AAAA,aACnB,MAAM,QAAQ,OAAO;AAC9B,QAAI,sBAAsB,OAAO;AAC/B,UAAI,QAAQ;AACZ,aAAO,cAAc,MAAM,CAAC;AAAA,QAC1B,GAAG,MAAM;AAAA,QACT,GAAG,MAAM;AAAA,QACT,IAAI,MAAM;AAAA,QACV,IAAI,MAAM;AAAA,QACV,MAAM,MAAM,MAAM,OAAO,IAAI,MAAM;AAAA,QACnC,MAAM,MAAM,MAAM,OAAO,IAAI,MAAM;AAAA,QACnC,KAAK,MAAM;AAAA,QACX,KAAK,MAAM;AAAA,QACX,KAAK,MAAM,MAAM;AAAA,UACf;AAAA,QACF,UAAU,MAAM,MAAM;AAAA;AAAA,WAEnB;AACL,UAAI,YAAY,IAAI,MAAM,SAAU,OAAO;AACzC,YAAI,SAAS,QAAQ;AACnB,cAAI,IAAI,YAAY;AACpB,iBAAO,KAAK,OAAO,OAAO;AAAA,YACxB,KAAK,EAAE,GAAG;AAAA,YACV,KAAK,EAAE,GAAG;AAAA,YACV,KAAK;AAAA,aACJ,EAAE,MAAM;AAAA,mBACF,sBAAsB,QAAQ;AACvC,iBAAO;AAAA,YACL,GAAG,MAAM;AAAA,YACT,GAAG,MAAM;AAAA,YACT,IAAI,MAAM;AAAA,YACV,IAAI,MAAM;AAAA,YACV,MAAM,MAAM,MAAM,OAAO,IAAI,MAAM;AAAA,YACnC,MAAM,MAAM,MAAM,OAAO,IAAI,MAAM;AAAA,YACnC,KAAK,MAAM;AAAA,YACX,KAAK,MAAM;AAAA,YACX,KAAK,MAAM,MAAM;AAAA;AAAA;AAAA,SAGpB,OAAO,SAAU,IAAI;AACtB,eAAO,MAAM;AAAA;AAEf,aAAO,cAAc,WAAW,WAAW;AAAA;AAAA,SAExC;AACL,QAAI,KAAK;AACT,WAAO,eAAe,GAAG,MAAM,GAAG;AAAA;AAAA;AAGtC,yBAAyB,aAAa;AACpC,MAAI,IAAI,KACJ,OAAO,KAAK,KAAK,IAAI,aACrB,IAAI;AACR,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,QAAI,IAAI,IAAI,IAAI,KAAK,IAAI,UACrB,IAAI,IAAI,IAAI,KAAK,IAAI;AACzB,MAAE,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAEP,eAAW;AAAA;AAEb,SAAO;AAAA;AAET,eAAe,UAAU,aAAa;AACpC,MAAI,iBAAiB,cAAc,SAAS,QACxC,IAAI,IACJ,eAAe,uBAAsB,IAAI,IAAI,IAAI,IAAI,kBAAkB,IAAI,IAAI;AACjF,qBAAiB,cAAc;AAC/B,QAAI,KAAM,MAAK,MAAM,gBACjB,KAAM,MAAK,MAAM;AACrB,aAAS,KAAI,GAAG,KAAI,gBAAgB,MAAK;AACvC,QAAE,KAAK;AAAA,QACL,GAAG,KAAK,KAAK;AAAA,QACb,GAAG,KAAK,KAAK;AAAA,QACb,IAAI,MAAM,OAAO,IAAI;AAAA,QACrB,IAAI,MAAM,OAAO,IAAI;AAAA,QACrB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA;AAAA;AAAA;AAIX,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,iBAAa,MAAM,MAAM,SAAS;AAAA;AAEpC,SAAO;AAAA;AAET,wBAAwB,OAAO,aAAa;AAC1C,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,MAAE,KAAK,CAAC,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,MAAM,QAAQ,MAAM,GAAG,IAAI,MAAM,GAAG;AAAA;AAEtG,SAAO,MAAM,GAAG;AAAA;AAElB,4BAA4B,aAAa;AACvC,SAAO,eAAe,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK;AAAA;AAE5G,0BAA0B,aAAa;AACrC,SAAO,eAAe,CAAC,CAAC,KAAK,GAAG,GAAG,MAAM,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG,GAAG,MAAM,CAAC,GAAG,KAAK,KAAK,KAAK;AAAA;AAElG,2BAA2B,aAAa;AACtC,SAAO,eAAe,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,KAAK;AAAA;AAExE,kBAAkB,QAAQ,iBAAiB;AACzC,MAAI,IAAI,IACJ,SAAQ,kBAAkB,MAAM,KAAK;AACzC,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,KAAK,OAAO,GAAG,IAAI,KACnB,KAAK,OAAO,GAAG,IAAI;AACvB,MAAE,KAAK;AAAA,MACL,GAAG,MAAO,MAAK,KAAK,IAAI,UAAS,KAAK,KAAK,IAAI;AAAA,MAC/C,GAAG,MAAO,MAAK,KAAK,IAAI,UAAS,KAAK,KAAK,IAAI;AAAA,MAC/C,IAAI,OAAO,GAAG;AAAA,MACd,IAAI,OAAO,GAAG;AAAA,MACd,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA;AAGT,SAAO;AAAA;AAET,IAAI,mBAAmB,oBAAI;AAC3B,iBAAiB,IAAI,sBAAsB,QAAQ;AACnD,iBAAiB,IAAI,sBAAsB,SAAS;AACpD,iBAAiB,IAAI,sBAAsB,WAAW;AACtD,iBAAiB,IAAI,sBAAsB,QAAQ;AACnD,iBAAiB,IAAI,sBAAsB,SAAS;AACpD,iBAAiB,IAAI,sBAAsB,UAAU;AACrD,gCAAgC,QAAQ;AACtC,WAAS,UAAU;AACnB,MAAI,cAAc,OAAO,eAAe,IACpC,QAAQ,OAAO;AACnB,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM;AAAA;AAElB,MAAI,CAAC,iBAAiB,IAAI,QAAQ;AAChC,UAAM,IAAI,MAAM,YAAY,QAAQ;AAAA;AAEtC,MAAI,KAAK,iBAAiB,IAAI,OAAO;AACrC,MAAI,OAAO,UAAU;AACnB,SAAK,SAAS,IAAI,OAAO;AAAA;AAE3B,MAAI,IAAI,cAAc,gBAAgB,WAAW,IAAI;AACrD,MAAI,KAAK,OAAO,GAAG;AAAA,IACjB;AAAA;AAEF,SAAO;AAAA;AAGT,IAAI,oBAAoB;AACxB,IAAI,sBAAsB;AAC1B,yBAAyB,MAAM,UAAU,OAAO,QAAQ,SAAS,WAAW,UAAU;AACpF,MAAI;AACJ,MAAI,UAAU;AACZ,SAAK,UAAU,SAAS;AACxB,aAAS,cAAc;AAAA,SAClB;AACL,QAAI,KAAK,YAAY,KAAK,gBAAgB,KAAK,cAAc,UAAU,KAAK,SAAS,SAAS,UAAU,UAAU,KAAK,SAAS,SAAS;AACzI,QAAI,KAAK,KAAK,eAAe,UAAU,KAAK,iBAAiB,KAAK,SAAS,SAAS,eAAe,UAAU,KAAK,SAAS,SAAS;AACpI,QAAI,GAAG,QAAQ,QAAQ,KAAK,cAAc,MAAM;AAC9C,SAAG,OAAO,KAAK,WAAW;AAAA;AAE5B,QAAI,GAAG,iBAAiB,QAAQ,KAAK,cAAc,MAAM;AACvD,SAAG,gBAAgB,KAAK,WAAW;AAAA;AAErC,QAAI,GAAG,gBAAgB,QAAQ,KAAK,cAAc,MAAM;AACtD,SAAG,eAAe,KAAK,WAAW;AAAA;AAEpC,QAAI,MAAM,KAAK,oBAAoB,UAAU,KAAK,sBAAsB,KAAK,sBAAsB,KAAK,SAAS,SAAS,oBAAoB,UAAU,KAAK,SAAS,SAAS;AAC/K,QAAI,KAAK,mBAAmB,MAAM;AAChC,UAAI,OAAO,MAAM;AACf,cAAM;AAAA;AAER,UAAI,IAAI,QAAQ,MAAM;AACpB,YAAI,OAAO,KAAK,gBAAgB;AAAA;AAAA;AAGpC,QAAI,IAAI,KAAK,QAAQ,KAAK,MAAM,SAAS;AACzC,aAAS,UAAU,OAAO,SAAS,KAAK,SAAS,SAAS,WAAW,OAAO,KAAK,SAAS,SAAS,QAAQ,SAAS,KAAK,SAAS,SAAS;AAC3I,QAAI,KAAK,SAAS,sBAAsB;AAAA,MACtC,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,aAAa,CAAC;AAAA,MACd,MAAM;AAAA,MACN;AAAA,MACA,OAAO,KAAK;AAAA,MACZ;AAAA,MACA,qBAAqB,KAAK,YAAY,KAAK,SAAS,SAAS;AAAA,MAC7D,uBAAuB,KAAK,cAAc,KAAK,SAAS,SAAS;AAAA;AAEnE,QAAI,YAAY,MAAM;AACpB,QAAE,gBAAgB;AAAA;AAEpB,SAAK,UAAU,SAAS;AAAA;AAE1B,SAAO;AAAA;AAEN,IAAC,aAAa,SAAU,YAAY;AACrC,YAAU,aAAY;AACtB,MAAI,SAAS,aAAa;AAC1B,uBAAoB,UAAU,QAAQ;AACpC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,wBAAwB;AACvE,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,aAAa,CAAC,MAAM;AACnE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,wBAAwB;AACvE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,UAAM,KAAK,OAAO;AAClB,UAAM,qBAAqB,OAAO;AAClC,UAAM,SAAS,OAAO;AACtB,UAAM,SAAS,OAAO;AACtB,QAAI,OAAO,gBAAgB;AACzB,YAAM,SAAS,OAAO,eAAe;AACrC,YAAM,WAAW,OAAO,eAAe;AAAA,WAClC;AACL,YAAM,WAAW,SAAS,MAAM,MAAM;AAAA;AAExC,QAAI,OAAO,gBAAgB;AACzB,YAAM,SAAS,OAAO,eAAe;AACrC,YAAM,WAAW,OAAO,eAAe;AAAA,WAClC;AACL,YAAM,WAAW,SAAS,MAAM,MAAM;AAAA;AAExC,UAAM,QAAQ,OAAO;AACrB,QAAI,eAAe,OAAO,UAAU,OAAO,QAAQ,KAAK,OAAO;AAC/D,QAAI,eAAe,OAAO,UAAU,OAAO,QAAQ,KAAK,OAAO;AAC/D,aAAS,OAAO,MAAM;AACtB,aAAS,OAAO,MAAM;AACtB,UAAM,UAAU;AAChB,UAAM,SAAS;AAAA,MACb,UAAU,OAAO;AAAA,MACjB,YAAY,OAAO;AAAA,MACnB,kBAAkB,OAAO;AAAA,MACzB,UAAU,OAAO;AAAA;AAEnB,UAAM,gBAAgB;AACtB,QAAI,OAAO,MAAM;AACf,aAAO,YAAY,OAAO,aAAa,MAAM,SAAS,6BAA6B,OAAO,MAAM;AAAA;AAElG,UAAM,eAAe,OAAO;AAC5B,UAAM,gBAAgB,OAAO,aAAa,CAAC,MAAM;AACjD,UAAM,gBAAgB,OAAO;AAC7B,UAAM,qBAAqB,OAAO;AAClC,UAAM,iBAAiB,OAAO,kBAAkB,CAAC,MAAM;AACvD,UAAM,sBAAsB,OAAO,uBAAuB,CAAC,MAAM;AACjE,UAAM,aAAa,OAAO;AAC1B,UAAM,kBAAkB,OAAO;AAC/B,UAAM,QAAQ,OAAO;AACrB,UAAM,aAAa,MAAM,MAAM,QAAQ,MAAM,UAAU,cAAc,OAAO;AAC5E,UAAM,aAAa,OAAO,MAAM,QAAQ,MAAM,UAAU,cAAc,OAAO;AAC7E,QAAI,CAAC,MAAM,OAAO;AAChB,YAAM,QAAQ,MAAM,UAAU,GAAG;AAAA;AAEnC,QAAI,OAAO,0BAA0B,MAAM;AACzC,YAAM,UAAU,GAAG,gBAAgB,OAAO;AAC1C,YAAM,UAAU,GAAG,gBAAgB,OAAO;AAAA;AAE5C,QAAI,cAAc,MAAM,SAAS,SAAS;AAC1C,QAAI,OAAO,eAAe,OAAO;AAC/B,oBAAc;AAAA;AAEhB,QAAI,MAAM,UAAU,GAAG,0BAA0B,OAAO;AACtD,oBAAc;AAAA;AAEhB,QAAI,MAAM,UAAU,GAAG,0BAA0B,OAAO;AACtD,oBAAc;AAAA;AAEhB,UAAM,gBAAgB,OAAO,aAAa,CAAC,MAAM;AACjD,UAAM,eAAe,OAAO,YAAY;AACxC,QAAI,YAAY,OAAO,YAAY,MAAM,UAAU,GAAG,uBAAuB,MAAM,UAAU,GAAG,uBAAuB,MAAM,SAAS,SAAS;AAC/I,UAAM,oBAAoB;AAAA,MACxB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,YAAY,MAAM,UAAU,GAAG,kBAAkB,MAAM,UAAU,GAAG,kBAAkB,OAAO,cAAc,MAAM,SAAS,SAAS;AAAA,MACnI,iBAAiB,MAAM,UAAU,GAAG,uBAAuB,MAAM,UAAU,GAAG,uBAAuB,OAAO,mBAAmB,MAAM,SAAS,SAAS;AAAA;AAEzJ,QAAI,CAAC,MAAM,SAAS,iBAAiB;AACnC,UAAI,mBAAmB,MAAM,SAAS,gBAAgB;AACtD,YAAM,SAAS,eAAe,MAAM,UAAU,IAAI;AAAA,QAChD,WAAW;AAAA;AAEb,YAAM,SAAS,eAAe,MAAM,UAAU,IAAI;AAAA,QAChD,WAAW;AAAA;AAAA;AAGf,UAAM,OAAO,OAAO,QAAQ,MAAM,UAAU,GAAG;AAC/C,UAAM,WAAW,OAAO;AACxB,QAAI,OAAO,YAAY,MAAM;AAC3B,YAAM,WAAW,MAAM,UAAU,GAAG;AAAA;AAEtC,QAAI,KAAK,OAAO,IAAI,MAAM,UAAU,GAAG;AACvC,WAAO,IAAI,MAAM,UAAU,GAAG;AAC9B,WAAO,IAAI,MAAM;AACjB,UAAM,aAAa;AACnB,UAAM,kBAAkB,MAAM,mBAAmB;AACjD,UAAM,aAAa,MAAM,UAAU,GAAG,aAAa,MAAM,UAAU,GAAG,aAAa,OAAO,aAAa,MAAM,SAAS,SAAS,WAAW;AAC1I,QAAI,OAAO,OAAO,QAAQ,QAAQ,CAAC,SAAS,OAAO,QAAQ,KAAK,OAAO;AACvE,UAAM,QAAQ;AACd,QAAI,SAAS,CAAC,SAAS,MAAM,UAAU,GAAG,UAAU,MAAM,UAAU,GAAG,UAAU,OAAO,MAAM,KAAK;AACnG,QAAI,QAAQ,KAAK,SAAS;AACxB,YAAM,QAAQ,QAAQ,OAAO;AAAA;AAE/B,WAAO;AAAA;AAET,eAAa,aAAY,CAAC;AAAA,IACxB,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC;AACrC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,aAAO;AAAA,QACL,GAAG,KAAK,UAAU;AAAA,QAClB,GAAG,KAAK,UAAU;AAAA;AAAA;AAAA,KAGrB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,UAAU,IAAI,MAAM,QAAQ,IAAI;AAC3D,aAAO,QAAQ,KAAK,SAAS,MAAM;AACnC,aAAO,gBAAgB,MAAM,IAAI,WAAW,IAAI,GAAG,QAAQ;AAAA;AAAA,KAE5D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,aAAO,YAAW;AAAA;AAAA,KAEnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,IAAI;AAC/B,aAAO,KAAK,eAAe,QAAQ,QAAQ,MAAM,OAAO,GAAG,0BAA0B,OAAO,KAAK,eAAe;AAAA;AAAA,KAEjH;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,YAAY;AACxC,WAAK,aAAa,eAAe;AAAA;AAAA,KAElC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB;AAC3B,aAAO,KAAK,aAAa,QAAQ,KAAK,UAAU,GAAG,wBAAwB,QAAQ,KAAK,UAAU,GAAG,wBAAwB;AAAA;AAAA,KAE9H;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,UAAU;AACpC,WAAK,WAAW,aAAa;AAAA;AAAA,KAE9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,GAAG,SAAS;AACpC,UAAI,aAAa;AACjB,UAAI,EAAE,aAAa,MAAM;AACvB,qBAAa,KAAK,kBAAkB,qBAAqB,QAAQ;AACjE,YAAI,cAAc,MAAM;AACtB,uBAAa,KAAK,iBAAiB,EAAE,WAAW,QAAQ;AACxD,eAAK,cAAc,qBAAqB,YAAY,QAAQ;AAAA;AAE9D,aAAK,qBAAqB;AAAA;AAE5B,WAAK,gBAAgB,YAAW,YAAY,aAAa,MAAM,KAAK,MAAM,GAAG;AAC7E,UAAI,EAAE,cAAc,MAAM;AACxB,aAAK,cAAc,EAAE;AAAA;AAEvB,UAAI,EAAE,YAAY,MAAM;AACtB,aAAK,YAAY,EAAE;AAAA;AAErB,UAAI,EAAE,OAAO;AACX,aAAK,QAAQ,EAAE;AAAA;AAEjB,UAAI,WAAW;AACf,UAAI,EAAE,QAAQ;AACZ,mBAAW,KAAK,kBAAkB,mBAAmB,QAAQ;AAC7D,YAAI,YAAY,MAAM;AACpB,qBAAW,CAAC,8BAA8B,EAAE,SAAS,8BAA8B,EAAE;AACrF,eAAK,cAAc,mBAAmB,UAAU,QAAQ;AAAA;AAAA,iBAEjD,EAAE,SAAS;AACpB,mBAAW,KAAK,kBAAkB,mBAAmB,QAAQ;AAC7D,YAAI,YAAY,MAAM;AACpB,qBAAW,CAAC,8BAA8B,EAAE,QAAQ,KAAK,8BAA8B,EAAE,QAAQ;AACjG,eAAK,cAAc,mBAAmB,UAAU,QAAQ;AAAA;AAAA;AAG5D,UAAI,YAAY,MAAM;AACpB,aAAK,SAAS,OAAO,qBAAqB,MAAM;AAChD,YAAI,KAAK,SAAS,OAAO,gBAAgB,KAAK,UAAU,KAAK;AAC3D,eAAK,SAAS,QAAQ,KAAK,UAAU,GAAG;AAAA;AAAA;AAG5C,WAAK,SAAS,mBAAmB,KAAK,WAAW;AAAA;AAAA,KAElD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,GAAG,SAAS;AACnC,WAAK,gBAAgB,YAAW,YAAY,YAAY,MAAM,KAAK,MAAM;AACzE,UAAI,SAAS;AACX,aAAK,UAAU,GAAG,SAAS;AAC3B,aAAK,UAAU,GAAG,SAAS;AAC3B,YAAI,KAAK,mBAAmB;AAC1B,eAAK,kBAAkB,SAAS;AAAA;AAAA;AAGpC,UAAI,KAAK,WAAW;AAClB,aAAK,SAAS,kBAAkB,KAAK,WAAW;AAAA;AAAA;AAAA,KAGnD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,GAAG,SAAS;AACtC,WAAK,gBAAgB,YAAW,YAAY,eAAe,MAAM,KAAK,MAAM;AAC5E,UAAI,SAAS;AACX,aAAK,UAAU,GAAG,YAAY;AAC9B,aAAK,UAAU,GAAG,YAAY;AAC9B,YAAI,KAAK,mBAAmB;AAC1B,eAAK,kBAAkB,YAAY;AAAA;AAAA;AAGvC,UAAI,KAAK,WAAW;AAClB,aAAK,SAAS,qBAAqB,KAAK,WAAW;AAAA;AAAA;AAAA,KAGtD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,gBAAgB,YAAW,YAAY,cAAc,MAAM,KAAK,MAAM;AAC3E,UAAI,KAAK,WAAW;AAClB,aAAK,SAAS,oBAAoB,KAAK,WAAW;AAAA;AAEpD,WAAK,SAAS,iBAAiB;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,WAAK,gBAAgB,YAAW,YAAY,WAAW,MAAM,KAAK;AAClE,WAAK,YAAY;AACjB,WAAK,iBAAiB;AACtB,WAAK,SAAS;AACd,WAAK,SAAS;AACd,WAAK,SAAS,iBAAiB;AAC/B,WAAK,YAAY;AACjB,WAAK,UAAU;AAAA;AAAA,KAEhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,aAAO,CAAC,KAAK,UAAU,GAAG,WAAW,KAAK,UAAU,GAAG;AAAA;AAAA,KAExD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,eAAe,QAAQ;AACtD,UAAI,gBAAgB;AAAA,QAClB,UAAU,KAAK,OAAO;AAAA,QACtB,YAAY,KAAK,OAAO;AAAA,QACxB,kBAAkB,KAAK,OAAO;AAAA,SAE5B;AACJ,UAAI,SAAS,gBAAgB;AAC3B,oBAAY,KAAK,SAAS,eAAe,MAAM,eAAe;AAAA,aACzD;AACL,YAAI,KAAK;AACT,oBAAY,KAAK,SAAS,eAAe,MAAM,GAAG,MAAM,MAAM,GAAG,SAAS;AAAA;AAE5E,UAAI,UAAU,MAAM;AAClB,kBAAU,SAAS;AAAA;AAErB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,WAAW,cAAc,8BAA8B,QAAQ;AAClG,UAAI,KAAK,cAAc,WAAW;AAChC,YAAI,UACA,kBAAkB;AACtB,YAAI,KAAK,aAAa,MAAM;AAC1B,qBAAW,KAAK;AAChB,4BAAkB,KAAK,SAAS,kBAAkB,KAAK;AACvD,eAAK,SAAS,iBAAiB;AAAA;AAEjC,aAAK,YAAY;AACjB,YAAI,QAAQ;AACV,eAAK,cAAc,qBAAqB,WAAW;AAAA;AAErD,aAAK,SAAS;AACd,YAAI,YAAY,MAAM;AACpB,cAAI,IAAI,KAAK;AACb,mBAAS,KAAK,GAAG;AACf,iBAAK,SAAS,gBAAgB,EAAE,IAAI;AAAA;AAAA;AAGxC,YAAI,CAAC,cAAc;AACjB,eAAK,SAAS,iBAAiB;AAAA;AAAA;AAAA;AAAA,KAIpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,eAAe,cAAc,8BAA8B,QAAQ;AAC9F,UAAI,YAAY,KAAK,iBAAiB,eAAe;AACrD,WAAK,qBAAqB,WAAW,cAAc,8BAA8B;AAAA;AAAA,KAElF;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,KAAK,aAAa;AAChD,UAAI,UAAU,KAAK,UAAU,MACzB,OAAO,QAAQ,WACf,MAAM,KAAK,SAAS,aAAa,QAAQ,UACzC,OAAO,IAAI,QAAQ,UACnB,OAAO,gBAAgB,MAAM,MAAM,KAAK,MAAM,QAAQ,SAAS,MAAM;AACzE,WAAK,UAAU,OAAO;AACtB,UAAI,OAAO,MAAM,GAAG;AACpB,cAAQ,qBAAqB;AAC7B,WAAK,SAAS,eAAe;AAC7B,WAAK,SAAS,KAAK,yBAAyB;AAAA,QAC1C,UAAU;AAAA,QACV,SAAS;AAAA;AAAA;AAAA;AAIf,SAAO;AAAA,EACP;AACF,gBAAgB,YAAY,QAAQ;AAEpC,IAAI,iBAAiB,CAAC,kBAAkB,uBAAuB,qBAAqB,aAAa,kBAAkB,kBAAkB;AAClI,IAAC,WAAW,SAAU,YAAY;AACnC,YAAU,WAAU;AACpB,MAAI,SAAS,aAAa;AAC1B,qBAAkB,UAAU,QAAQ;AAClC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,eAAe;AAC9D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,yBAAyB;AACxE,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,wBAAwB,CAAC,KAAK;AAC7E,UAAM,oBAAoB;AAAA,MACxB,UAAU,OAAO;AAAA,MACjB,gBAAgB,OAAO,kBAAkB,OAAO,MAAM,SAAS,SAAS,iBAAiB,OAAO;AAAA,MAChG,YAAY,OAAO,cAAc,MAAM,SAAS,SAAS;AAAA,MACzD,iBAAiB,OAAO,mBAAmB,MAAM,SAAS,SAAS;AAAA,MACnE,gBAAgB,OAAO;AAAA,MACvB,qBAAqB,OAAO;AAAA,MAC5B,gBAAgB,OAAO;AAAA,MACvB,qBAAqB,OAAO;AAAA,MAC5B,mBAAmB,OAAO;AAAA,MAC1B,WAAW,OAAO;AAAA;AAEpB,UAAM,UAAU,CAAE,QAAO,YAAY;AACrC,UAAM,UAAU;AAChB,UAAM,UAAU,OAAO;AACvB,UAAM,OAAO,OAAO;AACpB,UAAM,SAAS,OAAO;AACtB,UAAM,YAAY,OAAO;AACzB,UAAM,iBAAiB,OAAO,kBAAkB,OAAO,IAAI,OAAO;AAClE,UAAM,sBAAsB,OAAO;AACnC,UAAM,qBAAqB;AAC3B,UAAM,SAAS;AACf,UAAM,oBAAoB,OAAO;AACjC,UAAM,iBAAiB,OAAO;AAC9B,UAAM,sBAAsB,OAAO;AACnC,UAAM,YAAY,OAAO;AACzB,UAAM,WAAW,OAAO;AACxB,UAAM,iBAAiB,OAAO;AAC9B,UAAM,sBAAsB,OAAO;AACnC,UAAM,gBAAgB,OAAO,kBAAkB;AAC/C,UAAM,WAAW,OAAO,UAAU;AAClC,UAAM,oBAAoB,OAAO,qBAAqB;AACtD,UAAM,WAAW,OAAO,UAAU;AAClC,UAAM,cAAc,OAAO,eAAe;AAC1C,UAAM,QAAQ,OAAO,SAAS,SAAS;AACvC,UAAM,YAAY;AAClB,UAAM,sBAAsB,OAAO,uBAAuB,SAAS,SAAS;AAC5E,UAAM,wBAAwB,SAAS,SAAS;AAChD,QAAI,OAAO,0BAA0B,OAAO;AAC1C,YAAM,wBAAwB;AAAA;AAEhC,UAAM,sBAAsB,OAAO,wBAAwB;AAC3D,QAAI,OAAO,kBAAkB;AAC3B,YAAM,KAAK,uBAAuB,OAAO;AAAA;AAE3C,QAAI,KAAK,OAAO,YAAY,OAAO,oBAAoB,SAAS,SAAS;AACzE,UAAM,YAAY;AAClB,QAAI,OAAO,kBAAkB,MAAM;AACjC,YAAM,kBAAkB,OAAO;AAAA,WAC1B;AACL,UAAI,oBAAoB,OAAO,SAAS,OAAO,SAAS,OAAO,UAAU,OAAO,UAAU,SAAS,SAAS,UAAU,gBAAgB;AACtI,YAAM,UAAU;AAAA;AAElB,QAAI,OAAO,CAAC,SAAS,OAAO,QAAQ,IAAI,KAAK;AAC7C,UAAM,QAAQ,MAAM,OAAO;AAC3B,WAAO;AAAA;AAET,eAAa,WAAU,CAAC;AAAA,IACtB,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,aAAO;AAAA,QACL,GAAG,KAAK,SAAS;AAAA,QACjB,GAAG,KAAK,SAAS;AAAA;AAAA;AAAA,KAGpB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC;AACrC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B;AACnC,UAAI,KAAK,KAAK,WAAW,KAAK,QAAQ;AACtC,UAAI,MAAM,QAAQ,GAAG,SAAS,GAAG;AAC/B,YAAI,iBAAiB,KAAK,SAAS,4BAA4B,MAAM,KAAK;AAC1E,aAAK,qBAAqB;AAC1B,YAAI,cAAc,KAAK,SAAS,4BAA6B,MAAK,qBAAqB,MAAM,KAAK,qBAAqB;AACvH,YAAI,mBAAmB,aAAa;AAClC,eAAK,YAAY;AACjB,eAAK,SAAS;AACd,eAAK,SAAS,YAAY,KAAK,SAAS;AACxC,eAAK,SAAS,SAAS,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA,KAI1C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,QAAQ;AACxC,WAAK,SAAS,OAAO,UAAU,MAAM;AACrC,WAAK;AACL,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,eAAe;AACpD,WAAK,KAAK,sBAAsB;AAAA,QAC9B,UAAU;AAAA,QACV,QAAQ;AAAA;AAEV,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,cAAc;AACtC,UAAI,IAAI,KAAK,SAAS,OAAO,cAAc;AAC3C,WAAK,kBAAkB;AACvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,MAAM;AAClC,UAAI,UAAU,KAAK;AACnB,UAAI,WAAW,KAAK,YAAY,WAAW;AAC3C,WAAK,YAAY,KAAK;AACtB,UAAI,UAAU;AACZ,aAAK,SAAS,KAAK,SAAS;AAAA;AAE9B,UAAI,KAAK,UAAU;AACjB,YAAI,CAAC,SAAS;AACZ,eAAK,SAAS,KAAK,SAAS;AAAA;AAAA,iBAErB,SAAS;AAClB,aAAK,YAAY,KAAK,SAAS;AAAA;AAAA;AAAA,KAGlC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,YAAY,KAAK,iBAAiB;AACrE,YAAM,OAAO,OAAO,KAAK,YAAY,QAAQ,cAAc;AAC3D,UAAI,OAAO,GAAG;AACZ,aAAK,YAAY,OAAO,KAAK;AAC7B,aAAK,SAAS,iBAAiB;AAAA;AAEjC,UAAI,CAAC,mBAAmB,KAAK,iBAAiB,KAAK,YAAY,WAAW,GAAG;AAC3E,aAAK,SAAS,eAAe;AAAA;AAAA;AAAA,KAGhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,QAAQ;AAC5C,UAAI,IAAI,KAAK,YAAY;AACzB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAK,SAAS,iBAAiB,KAAK,YAAY,IAAI;AAAA;AAAA;AAAA,KAGvD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,eAAe;AACxC,UAAI,IAAI;AACR,eAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,YAAI,KAAK,YAAY,GAAG,UAAU,OAAO,iBAAiB,KAAK,YAAY,GAAG,UAAU,OAAO,eAAe;AAC5G,YAAE,KAAK,KAAK,YAAY;AAAA;AAAA;AAG5B,eAAS,IAAI,GAAG,QAAQ,EAAE,QAAQ,IAAI,OAAO,KAAK;AAChD,aAAK,SAAS,iBAAiB,EAAE;AAAA;AAEnC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG,wBAAwB,0BAA0B;AAC9E,WAAK,gBAAgB,UAAS,YAAY,cAAc,MAAM,KAAK,MAAM;AACzE,WAAK,SAAS,WAAW;AACzB,UAAI,GAAG;AACL,aAAK;AAAA,aACA;AACL,aAAK;AAAA;AAEP,UAAI,CAAC,wBAAwB;AAC3B,iBAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,eAAK,YAAY,GAAG,WAAW;AAC/B,cAAI,CAAC,0BAA0B;AAC7B,gBAAI,OAAO,SAAS,KAAK,YAAY,GAAG,UAAU,KAAK,IAAI;AAC3D,gBAAI,KAAK,YAAY,GAAG,UAAU,MAAM,YAAY,WAAW,GAAG;AAChE,mBAAK,YAAY,GAAG,UAAU,MAAM,WAAW,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMjE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,GAAG,SAAS;AACpC,WAAK,gBAAgB,UAAS,YAAY,aAAa,MAAM,KAAK,MAAM,GAAG;AAC3E,WAAK,cAAc,EAAE,iBAAiB,EAAE;AACxC,WAAK,mBAAmB,EAAE,sBAAsB,EAAE;AAClD,WAAK,iBAAiB,EAAE;AACxB,WAAK,sBAAsB,EAAE;AAC7B,WAAK,YAAY,EAAE;AACnB,WAAK,oBAAoB,EAAE;AAC3B,WAAK,WAAW,EAAE;AAClB,UAAI,EAAE,kBAAkB,MAAM;AAC5B,aAAK,iBAAiB,EAAE;AAAA;AAE1B,UAAI,EAAE,OAAO;AACX,aAAK,QAAQ,EAAE;AAAA;AAEjB,aAAO,GAAG;AACV,WAAK,SAAS,kBAAkB,MAAM;AAAA;AAAA,KAEvC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,WAAK,gBAAgB,UAAS,YAAY,WAAW,MAAM,KAAK;AAChE,UAAI,KAAK,YAAY,MAAM;AACzB,aAAK,SAAS,gBAAgB;AAAA;AAAA;AAAA,KAGjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB;AACvB,aAAO,KAAK,mBAAmB,IAAI,OAAO,CAAE,MAAK,gBAAgB,KAAK,iBAAiB,KAAK,KAAK,YAAY,SAAS,KAAK;AAAA;AAAA,KAE5H;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB;AAC3B,aAAO,KAAK,SAAS,OAAO,WAAW;AAAA;AAAA,KAExC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,eAAe;AAC3C,UAAI,QAAQ;AACZ,UAAI,eAAe;AACjB,iBAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,cAAI,KAAK,YAAY,GAAG,UAAU,OAAO,iBAAiB,KAAK,YAAY,GAAG,UAAU,OAAO,eAAe;AAC5G,oBAAQ;AACR;AAAA;AAAA;AAAA;AAIN,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,SAAS;AAC9C,WAAK,sBAAsB;AAAA;AAAA,KAE5B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,aAAO,KAAK,YAAY;AAAA;AAAA,KAEzB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAAyB,IAAI,QAAQ;AAC1C,UAAI,eAAe;AAAA,QACjB,UAAU,KAAK;AAAA,QACf,UAAU;AAAA;AAEZ,UAAI;AACJ,UAAI,iBAAiB,IAAI,yBAAyB;AAChD,YAAI,MAAM;AACV,mBAAW,gBAAgB,MAAM;AAAA,iBACxB,SAAS,KAAK;AACvB,mBAAW,gBAAgB,IAAI,MAAM,IAAI;AAAA,aACpC;AACL,YAAI,MAAM;AACV,eAAO,cAAc,IAAI,WAAW;AACpC,mBAAW,gBAAgB,IAAI,MAAM,IAAI,MAAM;AAAA;AAEjD,eAAS,SAAS;AAClB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,UAAI,MAAM,KAAK,gBAAgB;AAC/B,WAAK,oBAAoB;AAAA;AAAA,KAE1B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,IAAI;AACtC,UAAI,KAAK,YAAY,MAAM;AACzB,aAAK,SAAS,gBAAgB;AAAA;AAEhC,WAAK,WAAW;AAAA;AAAA,KAEjB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,OAAO,SAAS;AACvC,WAAK,gBAAgB,UAAS,YAAY,YAAY,MAAM,KAAK,MAAM,OAAO;AAC9E,UAAI,KAAK,YAAY,MAAM;AACzB,aAAK,SAAS,SAAS;AAAA;AAAA;AAAA,KAG1B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,SAAS;AAC1C,WAAK,gBAAgB,UAAS,YAAY,eAAe,MAAM,KAAK,MAAM,OAAO;AACjF,UAAI,KAAK,YAAY,MAAM;AACzB,aAAK,SAAS,YAAY;AAAA;AAAA;AAAA;AAIhC,SAAO;AAAA,EACP;AAEF,IAAI,SAAS,iBAAgB,UAAU,IAAI;AACzC,kBAAgB,MAAM;AACtB,OAAK,WAAW;AAChB,OAAK,KAAK;AACV,kBAAgB,MAAM,SAAS;AAAA;AAEjC,IAAI,UAAU,SAAU,SAAS;AAC/B,YAAU,UAAS;AACnB,MAAI,SAAS,aAAa;AAC1B,oBAAiB,UAAU,IAAI,SAAS;AACtC,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU;AACpC,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,eAAe;AAAA,MAC5D,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA;AAEZ,oBAAgB,uBAAuB,QAAQ,WAAW;AAC1D,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,QAAI,MAAM,MAAM;AAChB,QAAI,kBAAkB;AACtB,QAAI,gBAAgB,uBAAuB;AAC3C,UAAM,OAAO,SAAS,MAAM;AAC5B,UAAM,SAAS,QAAQ,WAAW;AAClC,UAAM,SAAS,MAAM,WAAW,OAAO,QAAQ,QAAQ,WAAW;AAClE,UAAM,YAAY,QAAQ,cAAc;AACxC,UAAM,QAAQ,QAAQ,UAAU;AAChC,UAAM,UAAU,QAAQ,YAAY;AACpC,UAAM,QAAQ,MAAM,WAAW,QAAQ,QAAQ,UAAU;AACzD,UAAM,YAAY,MAAM,SAAS,QAAQ,cAAc;AACvD,UAAM,UAAU,QAAQ,YAAY;AACpC,UAAM,KAAK,QAAQ,MAAM;AACzB,UAAM,eAAe,QAAQ,iBAAiB;AAC9C,UAAM,SAAS,QAAQ;AACvB,UAAM,WAAW,QAAQ;AACzB,UAAM,SAAS,QAAQ;AACvB,aAAS,aAAa,IAAI,iBAAiB;AAC3C,WAAO;AAAA;AAET,eAAa,UAAS,CAAC;AAAA,IACrB,KAAK;AAAA,IACL,OAAO,sBAAsB,IAAI,aAAa;AAC5C,aAAO,KAAK,gBAAiB,MAAK,UAAU,KAAK,SAAS,KAAK;AAAA;AAAA,KAEhE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,MAAM,eAAe;AAC7C,aAAO,KAAK,UAAU;AAAA;AAAA,KAEvB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,MAAM,eAAe;AAC/C,aAAO,KAAK,YAAY;AAAA,QACtB,MAAM,YAAY;AAAA,QAClB,SAAS;AAAA,UACP,QAAQ;AAAA;AAAA;AAAA;AAAA,KAIb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,aAAa,KAAK,gBAAgB;AACvC,UAAI,WAAW,KAAK,SAAS,oBAAoB;AACjD,UAAI,OAAO;AACX,UAAI,KAAK,uBAAuB,MAAM;AACpC,YAAI,KAAK,wBAAwB,MAAM;AACrC;AAAA,eACK;AACL,eAAK,oBAAoB,OAAO,KAAK,MAAM,gBAAgB;AAAA;AAAA;AAG/D,WAAK,sBAAsB;AAC3B,WAAK,SAAS,KAAK,IAAI,OAAO,KAAK,UAAU;AAC7C,WAAK,SAAS,eAAe,MAAM;AACnC,WAAK,QAAQ,2BAA2B;AAAA;AAAA,KAEzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,aAAO,MAAM,OAAO,OAAO,gBAAgB,KAAK,UAAU,SAAU,GAAG;AACrE,eAAO,EAAE,OAAO;AAAA;AAAA;AAAA,KAGnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,IAAI,eAAe,gBAAgB,wBAAwB,aAAa;AAC7F,UAAI,SAAS,KAAK,YAAY;AAC9B,UAAI,UAAU,MAAM;AAClB,aAAK,UAAU,QAAQ,eAAe,gBAAgB,wBAAwB;AAAA;AAAA;AAAA,KAGjF;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,OAAO,eAAe,gBAAgB,wBAAwB,aAAa;AACnG,UAAI,OAAO,MAAM;AACjB,aAAO,KAAK;AACZ,yBAAmB,KAAK,UAAU,SAAU,GAAG;AAC7C,eAAO,MAAM;AAAA;AAEf,UAAI,eAAe;AACjB,YAAI;AACF,eAAK,SAAS,oBAAoB,MAAM,YAAY;AAAA,iBAC7C,GAAP;AACA,cAAI,yCAAyC;AAAA;AAAA;AAGjD,UAAI,CAAC,gBAAgB;AACnB,YAAI,IAAI;AAAA,UACN,OAAO;AAAA,UACP,IAAI;AAAA;AAEN,YAAI,aAAa;AACf,YAAE,cAAc;AAAA;AAElB,aAAK,SAAS,KAAK,4BAA4B;AAAA;AAEjD,UAAI,CAAC,wBAAwB;AAC3B,aAAK,QAAQ,2BAA2B;AAAA;AAAA;AAAA,KAG3C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,eAAe,gBAAgB;AACvD,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,YAAI,QAAQ,KAAK,SAAS;AAC1B,aAAK,UAAU,OAAO,eAAe,gBAAgB;AACrD,aAAK,SAAS,SAAS,MAAM,IAAI;AAAA;AAEnC,WAAK,SAAS,SAAS;AACvB,WAAK,QAAQ,2BAA2B;AAAA;AAAA,KAEzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,UAAI,oBAAoB;AACxB,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,YAAI,cAAc,KAAK,QAAQ,OAAO,KAAK,SAAS,GAAG,IAAI;AAC3D,0BAAkB,YAAY,MAAM,YAAY;AAAA;AAElD,WAAK,SAAS,SAAS;AACvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,OAAO;AAC9B,UAAI,KAAK,SAAS,qBAAqB,UAAU,MAAM;AACrD,YAAI,KAAK,SAAS,aAAa,WAAW,MAAM,QAAQ;AACtD,iBAAO;AAAA;AAET,YAAI,MAAM,SAAS,MAAM;AACvB,gBAAM,MAAM,YAAY;AAAA;AAE1B,YAAI,YAAY,KAAK,SAAS,MAAM,MAAM;AAC1C,YAAI,QAAQ,KAAK,SAAS,qBAAqB;AAC/C,cAAM,QAAQ,KAAK;AACnB,YAAI,QAAQ,KAAK,SAAS,wBAAwB,MAAM;AACxD,YAAI,OAAO,KAAK,YAAY,KAAK,SAAS,wBAAwB,KAAK,MAAM,KAAK,SAAS,wBAAwB,KAAK,SAAS,oBAAoB;AACrJ,cAAM,GAAG,sBAAsB;AAC/B,aAAK,SAAS,KAAK;AACnB,aAAK,SAAS,eAAe,MAAM,IAAI,KAAK,SAAS,oBAAoB;AACzE,cAAM,QAAQ;AACd,YAAI,cAAc;AAAA,UAChB,GAAG,MAAM,IAAI,KAAK;AAAA,UAClB,GAAG,MAAM,IAAI,KAAK;AAAA;AAEpB,aAAK,SAAS,YAAY,MAAM,IAAI;AACpC,aAAK,SAAS,KAAK,0BAA0B;AAAA,UAC3C,QAAQ;AAAA,UACR,OAAO;AAAA;AAET,eAAO;AAAA,aACF;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO;AACjC,UAAI,MAAM,UAAU,MAAM;AACxB,YAAI,MAAM,MAAM;AAChB,YAAI,IAAI,KAAK,SAAS,oBAAoB;AAC1C,YAAI,MAAM,IAAI,YAAY;AACxB,YAAE,YAAY,MAAM;AAAA;AAEtB,YAAI,YAAY,KAAK,SAAS,MAAM,MAAM;AAC1C,YAAI,QAAQ,KAAK,SAAS,qBAAqB;AAC/C,YAAI,OAAO;AACT,iBAAO,MAAM;AAAA;AAEf,aAAK,WAAW,KAAK,SAAS,OAAO,SAAU,IAAI;AACjD,iBAAO,GAAG,OAAO,MAAM;AAAA;AAEzB,eAAO,MAAM;AACb,eAAO,IAAI;AACX,aAAK,SAAS,KAAK,4BAA4B;AAAA,UAC7C,QAAQ;AAAA,UACR,OAAO;AAAA;AAAA;AAAA;AAAA,KAIZ;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK,SAAS,OAAO,SAAU,IAAI;AACxC,eAAO,GAAG,gBAAgB;AAAA;AAAA;AAAA,KAG7B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,aAAO,KAAK,SAAS,OAAO,SAAU,IAAI;AACxC,eAAO,GAAG,gBAAgB;AAAA;AAAA;AAAA,KAG7B;AAAA,IACD,KAAK;AAAA,IACL,KAAK,gBAAe;AAClB,UAAI,KAAK;AACT,UAAI,KAAK,SAAS,MAAM;AACtB,eAAO;AAAA,aACF;AACL,YAAI,IAAI,KAAK;AACb,eAAO,KAAK,MAAM;AAChB,cAAI,EAAE,WAAW;AACf,iBAAK;AAAA;AAEP,cAAI,EAAE;AAAA;AAER,eAAO;AAAA;AAAA;AAAA;AAIb,SAAO;AAAA,EACP;AAEF,IAAI,eAAe,WAAY;AAC7B,yBAAsB,UAAU;AAC9B,QAAI,QAAQ;AACZ,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,oBAAgB,MAAM,YAAY;AAClC,oBAAgB,MAAM,wBAAwB;AAC9C,oBAAgB,MAAM,wBAAwB;AAC9C,aAAS,KAAK,2BAA2B,SAAU,GAAG;AACpD,UAAI,cAAc,MAAM,YAAY,EAAE;AACtC,UAAI,cAAc,MAAM,YAAY,EAAE;AACtC,UAAI,eAAe,QAAQ,eAAe,QAAQ,gBAAgB,aAAa;AAC7E,cAAM,qBAAqB,EAAE,WAAW,MAAM;AAC9C,cAAM,qBAAqB,EAAE,WAAW,MAAM;AAC9C,gBAAQ,YAAY,YAAY,UAAU,EAAE;AAAA,aACvC;AACL,YAAI,eAAe,MAAM;AACvB,cAAI,EAAE,OAAO,kBAAkB,aAAa;AAC1C,oBAAQ,YAAY,YAAY,UAAU,EAAE;AAAA,iBACvC;AACL,oBAAQ,YAAY,YAAY,QAAQ,EAAE;AAAA;AAE5C,gBAAM,qBAAqB,EAAE,WAAW,MAAM;AAAA;AAEhD,YAAI,eAAe,MAAM;AACvB,cAAI,EAAE,OAAO,kBAAkB,aAAa;AAC1C,oBAAQ,YAAY,YAAY,UAAU,EAAE;AAAA,iBACvC;AACL,oBAAQ,YAAY,YAAY,QAAQ,EAAE;AAAA;AAE5C,gBAAM,qBAAqB,EAAE,WAAW,MAAM;AAAA;AAAA;AAAA;AAIpD,aAAS,KAAK,oCAAoC,SAAU,GAAG;AAC7D,YAAM,2BAA2B,EAAE;AAAA;AAErC,aAAS,KAAK,wBAAwB,SAAU,GAAG;AACjD,UAAI,kBAAkB,EAAE,iBAAiB,SACrC,gBAAgB,MAAM,YAAY,kBAClC,cAAc,EAAE,WAAW,UAAU,EAAE,QACvC,aAAa,YAAY,SACzB,WAAW,MAAM,YAAY,aAC7B,UAAU,EAAE,UAAU,IAAI,MAAM,uBAAuB,MAAM,sBAC7D,eAAe,EAAE,UAAU,IAAI,MAAM,uBAAuB,MAAM;AACtE,UAAI,YAAY,MAAM;AACpB,gBAAQ,EAAE,WAAW,MAAM;AAC3B,YAAI,EAAE,WAAW,WAAW,EAAE,WAAW,QAAQ;AAC/C,uBAAa,EAAE,WAAW,MAAM;AAAA;AAAA,aAE7B;AACL,eAAO,QAAQ,EAAE,WAAW;AAC5B,YAAI,EAAE,WAAW,WAAW,EAAE,WAAW,QAAQ;AAC/C,iBAAO,aAAa,EAAE,WAAW;AAAA;AAAA;AAGrC,UAAI,iBAAiB,MAAM;AACzB,cAAM,2BAA2B;AAAA;AAEnC,UAAI,YAAY,MAAM;AACpB,cAAM,2BAA2B;AAAA;AAAA;AAAA;AAIvC,eAAa,eAAc,CAAC;AAAA,IAC1B,KAAK;AAAA,IACL,OAAO,oCAAoC,MAAM;AAC/C,WAAK,QAAQ,SAAS;AACtB,UAAI,QAAQ,KAAK,qBAAqB,KAAK,KACvC;AACJ,UAAI,SAAS,MAAM;AACjB,YAAI,YAAW,GAAG;AAChB,iBAAO,EAAE,OAAO,KAAK;AAAA;AAEvB,2BAAmB,MAAM,YAAY,QAAQ;AAC7C,2BAAmB,MAAM,YAAY,QAAQ;AAC7C,2BAAmB,MAAM,YAAY,UAAU;AAC/C,eAAO,KAAK,qBAAqB,KAAK;AAAA;AAExC,cAAQ,KAAK,qBAAqB,KAAK;AACvC,UAAI,SAAS,MAAM;AACjB,YAAI,YAAW,GAAG;AAChB,iBAAO,EAAE,OAAO,KAAK;AAAA;AAEvB,2BAAmB,MAAM,YAAY,QAAQ;AAC7C,2BAAmB,MAAM,YAAY,QAAQ;AAC7C,2BAAmB,MAAM,YAAY,UAAU;AAC/C,eAAO,KAAK,qBAAqB,KAAK;AAAA;AAAA;AAAA,KAGzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,QAAQ;AAC/B,UAAI,MAAM,OAAO;AACjB,UAAI,KAAK,SAAS,OAAO,OAAO,MAAM;AACpC,cAAM,IAAI,MAAM,0BAA0B,OAAO,KAAK;AAAA;AAExD,UAAI,IAAI,mBAAmB,MAAM;AAC/B,cAAM,IAAI,MAAM,0BAA0B,OAAO,KAAK;AAAA;AAExD,UAAI,QAAQ,IAAI,QAAQ,KAAK,UAAU,OAAO,IAAI;AAClD,WAAK,SAAS,MAAM,MAAM;AAC1B,UAAI,OAAO,WAAW;AACpB,aAAK,cAAc;AAAA;AAErB,WAAK,SAAS,OAAO,MAAM;AAC3B,WAAK,SAAS,SAAS,MAAM,IAAI;AACjC,YAAM,UAAU;AAChB,WAAK,2BAA2B;AAChC,WAAK,SAAS,KAAK,mBAAmB;AAAA,QACpC;AAAA;AAEF,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,SAAS;AAChC,UAAI,QAAQ;AACZ,UAAI,SAAS,UAAU;AACrB,gBAAQ,KAAK,SAAS;AACtB,YAAI,SAAS,MAAM;AACjB,gBAAM,IAAI,MAAM,oBAAoB,UAAU;AAAA;AAAA;AAGlD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,UAAI,MAAM;AACV,UAAI,IAAI,KAAK,SAAS;AACtB,UAAI,QAAQ,OACR,IAAI;AACR,aAAO,CAAC,OAAO;AACb,YAAI,OAAO,QAAQ,QAAQ,GAAG;AAC5B,kBAAQ;AAAA,eACH;AACL,cAAI,IAAI,qBAAqB;AAC3B,gBAAI,IAAI;AACR,oBAAQ;AAAA,iBACH;AACL,kBAAM,IAAI;AAAA;AAAA;AAAA;AAIhB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,UAAI,IAAI;AACR,eAAS,OAAO,KAAK,UAAU;AAC7B,UAAE,KAAK,KAAK,SAAS;AAAA;AAEvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,eAAe,gBAAgB,gBAAgB;AAChF,UAAI,SAAS;AACb,UAAI,cAAc,KAAK,SAAS;AAChC,WAAK,YAAY,aAAa;AAC9B,UAAI,eAAe;AACnB,cAAQ,YAAY,UAAU,SAAU,QAAQ;AAC9C,YAAI,QAAQ,OAAO,SAAS,qBAAqB,OAAO,SAAS,MAAM,OAAO;AAC9E,YAAI,OAAO;AACT,iBAAO,MAAM;AAAA;AAAA;AAGjB,UAAI,eAAe;AACjB,gBAAQ,YAAY,aAAa,SAAU,IAAI;AAC7C,iBAAO,OAAO,YAAY,IAAI,eAAe;AAAA;AAE/C,oBAAY,UAAU,gBAAgB;AAAA,aACjC;AACL,YAAI,YAAY,OAAO;AACrB,kBAAQ,YAAY,UAAU,SAAU,GAAG;AACzC,mBAAO,YAAY,MAAM,IAAI,EAAE;AAAA;AAAA;AAGnC,uBAAe,YAAY;AAAA;AAE7B,UAAI,YAAY,OAAO;AACrB,oBAAY,MAAM,YAAY;AAAA;AAEhC,WAAK,SAAS,SAAS,YAAY,IAAI;AACvC,aAAO,KAAK,SAAS,YAAY;AACjC,WAAK,SAAS,KAAK,qBAAqB;AAAA,QACtC,OAAO;AAAA;AAET,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,eAAe,gBAAgB,gBAAgB;AAC7E,eAAS,MAAM,KAAK,UAAU;AAC5B,aAAK,YAAY,KAAK,SAAS,KAAK,eAAe,gBAAgB;AAAA;AAAA;AAAA,KAGtE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAiB,GAAG;AACzB,eAAS,OAAO,KAAK,UAAU;AAC7B,UAAE,KAAK,SAAS;AAAA;AAAA;AAAA,KAGnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,IAAI,yBAAyB;AAClD,UAAI,MAAM;AACV,UAAI,IAAI,qBAAqB;AAC3B,YAAI,gBAAgB,IAAI;AACxB,YAAI,0BAA0B,KAAK,SAAS,UAAU;AACtD,YAAI,KAAK,KAAK,SAAS,MAAM;AAC7B,YAAI,MAAM,KAAK,SAAS,UAAU;AAClC,YAAI,WAAW,YAAY;AAC3B,YAAI,4BAA4B,QAAQ,cAAc,OAAO;AAC3D,cAAI,KAAK,wBAAwB;AACjC,cAAI,KAAK,wBAAwB;AACjC,eAAK,SAAS,oBAAoB,cAAc,OAAO,YAAY;AAAA,eAC9D;AACL,eAAK,SAAS,eAAe,IAAI,KAAK,SAAS;AAAA;AAEjD,aAAK,SAAS,YAAY,IAAI;AAC9B,eAAO,IAAI;AACX,eAAO;AAAA,UACL;AAAA,UACA;AAAA;AAAA;AAAA;AAAA,KAIL;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oCAAoC,OAAO;AAChD,UAAI,SAAS;AACb,YAAM,YAAY,OAAO,SAAS;AAClC,YAAM,YAAY,OAAO,SAAS;AAClC,YAAM,YAAY,SAAS,SAAS;AACpC,UAAI,UAAU,MAAM,SAAS,QAAQ,IAAI,SAAU,IAAI;AACrD,eAAO,GAAG;AAAA;AAEZ,UAAI,eAAe;AACnB,cAAQ,SAAS,SAAU,QAAQ;AACjC,cAAM,UAAU,KAAK,MAAM,cAAc,OAAO,SAAS,YAAY,QAAQ;AAAA;AAE/E,YAAM,UAAU,KAAK,MAAM,SAAS;AACpC,UAAI,QAAQ,SAAS,GAAG;AACtB,YAAI,KAAK,KAAK,SAAS,eAAe;AAAA,UACpC,QAAQ;AAAA,UACR,OAAO;AAAA,WACN;AACH,YAAI,KAAK,KAAK,SAAS,eAAe;AAAA,UACpC,QAAQ;AAAA,UACR,OAAO;AAAA,WACN;AACH,YAAI,YAAY;AAChB,YAAI,IAAI;AACR,YAAI,SAAS,iBAAgB,GAAG;AAC9B,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,gBAAI,UAAU,EAAE,GAAG,KAAK;AACtB;AAAA;AAEF,sBAAU,EAAE,GAAG,MAAM;AACrB,iBAAK,OAAO,YAAY,EAAE,GAAG;AAC7B,iBAAK,OAAO,YAAY,EAAE,GAAG;AAC7B,gBAAI,EAAE,GAAG,WAAW,MAAM,MAAM,OAAO,SAAS,EAAE,GAAG,WAAW,MAAM,MAAM,OAAO,OAAO;AACxF,oBAAM,YAAY,SAAS,KAAK,EAAE;AAAA,uBACzB,OAAO,OAAO;AACvB,kBAAI,OAAO,OAAO;AAChB,sBAAM,YAAY,OAAO,KAAK,EAAE;AAAA,qBAC3B;AACL,sBAAM,YAAY,SAAS,KAAK,EAAE;AAAA;AAEpC,qBAAO,qBAAqB,EAAE,GAAG,MAAM;AAAA,uBAC9B,OAAO,OAAO;AACvB,oBAAM,YAAY,OAAO,KAAK,EAAE;AAChC,qBAAO,qBAAqB,EAAE,GAAG,MAAM;AAAA;AAAA;AAAA;AAI7C,eAAO;AACP,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,MAAM,OAAO,OAAO;AACtD,UAAI,UAAU,KAAK,UAAU,UAAU,IAAI,IAAI,GAAG;AAClD,UAAI,QAAQ,uBAAuB,CAAC,QAAQ,oBAAoB,WAAW,QAAQ,oBAAoB,WAAW;AAChH,eAAO;AAAA;AAET,UAAI,KAAK,KAAK,UAAU,GAAG,SACvB,MAAM,GAAG,qBACT,QAAQ,OAAO,OAAO,IAAI,kBAAkB,MAAM,MAClD,KAAK,KAAK,UAAU,GAAG,SACvB,MAAM,GAAG,qBACT,QAAQ,OAAO,OAAO,IAAI,kBAAkB,MAAM;AACtD,UAAI,SAAS,QAAQ,SAAS,QAAQ,MAAM,OAAO,MAAM,IAAI;AAC3D,YAAI,UAAU,MAAM;AAChB,aAAK,SAAS,MAAM;AACxB,aAAK,SAAS,gBAAgB,MAAM,OAAO,SAC3C,SAAU,OAAM,QAAO;AACrB,iBAAO,MAAM,YAAY,OAAM;AAAA,WAC9B,SAAU,OAAM,QAAO;AACxB,iBAAO,MAAM,UAAU,OAAM;AAAA;AAE/B,eAAO;AAAA,aACF;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,GAAG,OAAO,OAAO;AACjD,WAAK,SAAS,kBAAkB,GAAG;AAAA;AAAA,KAEpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,IAAI,UAAU;AAChD,UAAI,IAAI,KAAK,SAAS;AACtB,UAAI,QAAQ;AACZ,aAAO,CAAC,OAAO;AACb,YAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,iBAAO;AAAA,eACF;AACL,cAAI,OAAO,UAAU;AACnB,mBAAO;AAAA,iBACF;AACL,iBAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,KAKf;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,OAAO;AACnC,UAAI,SAAS;AACb,UAAI,cAAc,KAAK,SAAS;AAChC,UAAI,eAAe,QAAQ,YAAY,WAAW;AAChD;AAAA;AAEF,UAAI,UAAU,YAAY;AAC1B,UAAI,YAAY,kBAAkB,MAAM;AACtC,aAAK,SAAS,gBAAgB,aAAa;AAC3C,oBAAY,YAAY;AACxB,aAAK,SAAS,YAAY,SAAS;AACnC,aAAK,SAAS,SAAS,SAAS;AAChC,YAAI,YAAY,SAAS;AACvB,cAAI,yBAAyB,oBAAI;AACjC,cAAI,eAAe,uBAAsB,OAAO,OAAO;AACrD,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,kBAAI,IAAI,MAAM;AACd,kBAAI,OAAO,oBAAoB,GAAG,OAAO,iBAAiB,MAAM;AAC9D,uCAAuB,IAAI,EAAE;AAAA;AAAA;AAAA;AAInC,uBAAa,YAAY,YAAY,QAAQ;AAC7C,uBAAa,YAAY,YAAY,QAAQ;AAC7C,kBAAQ,YAAY,aAAa,SAAU,IAAI;AAC7C,mBAAO,gBAAgB,aAAa,IAAI;AAAA;AAAA;AAG5C,aAAK,SAAS,WAAW;AACzB,aAAK,aAAa;AAClB,aAAK,SAAS,KAAK,sBAAsB;AAAA,UACvC,OAAO;AAAA;AAAA,aAEJ;AACL,oBAAY,YAAY;AACxB,aAAK,SAAS,YAAY,SAAS;AACnC,aAAK,SAAS,SAAS,SAAS;AAAA;AAAA;AAAA,KAGnC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,gBAAgB,aAAa,cAAc;AACzE,UAAI,SAAS;AACb,UAAI,eAAe,SAAS;AAC1B,YAAI,eAAe,uBAAsB,OAAO,OAAO;AACrD,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAI,IAAI,MAAM;AACd,gBAAI,CAAC,aAAa,IAAI,EAAE,KAAK;AAC3B,kBAAI,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,MAAM;AACjE,6BAAa,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAK3B,qBAAa,YAAY,YAAY,QAAQ;AAC7C,qBAAa,YAAY,YAAY,QAAQ;AAAA;AAE/C,cAAQ,YAAY,aAAa,SAAU,IAAI;AAC7C,eAAO,gBAAgB,gBAAgB,IAAI;AAAA;AAAA;AAAA,KAG9C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,gBAAgB;AACjD,UAAI,SAAS;AACb,UAAI,cAAc,KAAK,SAAS;AAChC,UAAI,eAAe,MAAM;AACvB;AAAA;AAEF,UAAI,UAAU,YAAY;AAC1B,UAAI,YAAY,kBAAkB,MAAM;AACtC,aAAK,SAAS,gBAAgB,aAAa;AAC3C,oBAAY,YAAY;AACxB,aAAK,SAAS,SAAS,SAAS;AAChC,aAAK,SAAS,YAAY,SAAS;AACnC,YAAI,YAAY,SAAS;AACvB,cAAI,aAAa,qBAAoB,OAAO,OAAO;AACjD,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,kBAAI,IAAI,MAAM;AACd,qBAAO,kBAAkB,GAAG,OAAO;AAAA;AAAA;AAGvC,qBAAW,YAAY,YAAY,QAAQ;AAC3C,qBAAW,YAAY,YAAY,QAAQ;AAC3C,cAAI,qBAAqB,6BAA4B,QAAO,+BAA+B;AACzF,gBAAI,iCAAiC,OAAM,WAAW;AACpD,kBAAI,eAAe,uBAAsB,OAAO,OAAO;AACrD,yBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,sBAAI,IAAI,MAAM;AACd,yBAAO,oBAAoB,GAAG,OAAO,OAAM,kBAAkB;AAAA;AAAA;AAGjE,2BAAa,OAAM,YAAY,QAAQ;AACvC,2BAAa,OAAM,YAAY,QAAQ;AACvC,sBAAQ,OAAM,YAAY,UAAU,SAAU,GAAG;AAC/C,uBAAO,EAAE,WAAW;AAAA;AAEtB,sBAAQ,OAAM,aAAa,SAAU,GAAG;AACtC,uBAAO,oBAAmB,GAAG;AAAA;AAAA,mBAE1B;AACL,qBAAO,YAAY,QAAO;AAAA;AAAA;AAG9B,kBAAQ,YAAY,aAAa;AAAA;AAEnC,aAAK,SAAS,WAAW;AACzB,aAAK,aAAa;AAClB,YAAI,CAAC,gBAAgB;AACnB,eAAK,SAAS,KAAK,oBAAoB;AAAA,YACrC,OAAO;AAAA;AAAA;AAAA,aAGN;AACL,oBAAY,YAAY;AACxB,aAAK,SAAS,SAAS,SAAS;AAChC,aAAK,SAAS,YAAY,SAAS;AAAA;AAAA;AAAA,KAGtC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO;AACjC,cAAQ,KAAK,SAAS;AACtB,UAAI,SAAS,MAAM;AACjB,YAAI,MAAM,WAAW;AACnB,eAAK,YAAY;AAAA,eACZ;AACL,eAAK,cAAc;AAAA;AAAA;AAAA;AAAA,KAIxB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,OAAO;AAClC,UAAI,cAAc,KAAK,SAAS;AAChC,UAAI,IAAI,YAAY;AACpB,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,aAAK,SAAS,WAAW,EAAE,GAAG;AAAA;AAAA;AAAA,KAGjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,OAAO,gBAAgB;AAChD,UAAI,SAAS;AACb,UAAI,cAAc,KAAK,SAAS;AAChC,UAAI,aAAa;AACf,YAAI,UAAU,YAAY;AAC1B,YAAI,OAAO,eAAc,KAAI;AAC3B,cAAI,MAAM;AACV,cAAI,UAAU,IAAI,mBAAmB,MACjC,gBAAgB,IAAI;AACxB,cAAI,eAAe,IAAI;AACvB,cAAI,iBAAiB,aAAa;AAChC,gBAAI,QAAQ,OAAO,SAAS,OAAO;AACnC,gBAAI,QAAQ,OAAO,SAAS,UAAU;AACtC,gBAAI,OAAO,YAAY,YAAY,OAAO,SAAS,wBAAwB,WAAW,OAAO,SAAS,UAAU,OAAO,SAAS,oBAAoB;AACpJ,kBAAM,QAAQ,YAAY;AAC1B,gBAAI,gBAAgB,MAAM;AACxB,2BAAa,OAAO,KAAI,OAAO,gBAAgB,OAAO;AACtD,qBAAO,2BAA2B;AAAA;AAEpC,gBAAI,SAAS;AACX,0BAAY,SAAS;AAAA,mBAChB;AACL,0BAAY,IAAI,KAAI;AAAA;AAEtB,gBAAI,2BAA2B,mCAAkC,MAAM,OAAO;AAC5E,kBAAI,OAAO,UAAU,IAAI,IAAI;AAC7B,mBAAK,KAAK,SAAU,GAAG;AACrB,kBAAE,WAAW;AACb,oBAAI,EAAE,UAAU,MAAM,QAAQ,kBAAkB,aAAa;AAC3D,oBAAE,UAAU,MAAM,WAAW;AAC7B,yBAAO,kBAAkB,GAAG,MAAM;AAAA,uBAC7B;AACL,oBAAE,UAAU,OAAO,WAAW;AAC9B,yBAAO,oBAAoB,GAAG,OAAO;AAAA;AAAA;AAAA;AAI3C,gBAAI,YAAY,WAAW;AACzB,uCAAyB,OAAO,SAAS,OAAO;AAAA,gBAC9C,QAAQ;AAAA,kBACN;AACJ,uCAAyB,OAAO,SAAS,OAAO;AAAA,gBAC9C,QAAQ;AAAA,kBACN;AAAA;AAEN,mBAAO,SAAS,MAAM;AACtB,gBAAI,cAAc;AAAA,cAChB,GAAG,MAAM,IAAI,KAAK;AAAA,cAClB,GAAG,MAAM,IAAI,KAAK;AAAA;AAEpB,mBAAO,SAAS,YAAY,KAAI;AAChC,mBAAO,2BAA2B;AAClC,mBAAO,SAAS,WAAW;AAC3B,gBAAI,CAAC,gBAAgB;AACnB,kBAAI,IAAI;AAAA,gBACN,OAAO;AAAA,gBACP,IAAI;AAAA,gBACJ,KAAK;AAAA;AAEP,kBAAI,cAAc;AAChB,kBAAE,cAAc;AAAA;AAElB,qBAAO,SAAS,KAAK,0BAA0B;AAAA;AAAA;AAAA;AAIrD,iBAAS,OAAO,UAAU,QAAQ,KAAK,IAAI,MAAM,OAAO,IAAI,OAAO,IAAI,IAAI,OAAO,GAAG,OAAO,MAAM,QAAQ;AACxG,aAAG,OAAO,KAAK,UAAU;AAAA;AAE3B,gBAAQ,IAAI;AAAA;AAAA;AAAA,KAGf;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,gBAAgB;AACrD,UAAI,SAAS;AACb,UAAI,cAAc,KAAK,SAAS;AAChC,UAAI,aAAa;AACf,YAAI,OAAO,eAAc,KAAK;AAC5B,cAAI,YAAY,WAAW;AACzB,gBAAI,aAAa,qBAAoB,OAAO,OAAO;AACjD,uBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,oBAAI,IAAI,MAAM;AACd,oBAAI,EAAE,SAAS;AACb,2BAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,QAAQ,KAAK;AACzC,wBAAI,EAAE,QAAQ,MAAM,MAAM;AACxB,0BAAI,iBAAiB,EAAE,QAAQ,GAAG,WAAW;AAC7C,0BAAI,mBAAmB,OAAO,OAAO,oBAAoB,gBAAgB,MAAM;AAC7E,+BAAO,kBAAkB,GAAG,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/C,uBAAW,YAAY,YAAY,OAAO,SAAS;AACnD,uBAAW,YAAY,YAAY,OAAO,SAAS;AAAA;AAErD,sBAAY,OAAO,KAAK,MAAM;AAC9B,cAAI,QAAQ,OAAO,SAAS,qBAAqB,OAAO,SAAS,MAAM;AACvE,cAAI,OAAO;AACT,mBAAO,MAAM;AAAA;AAAA;AAGjB,iBAAS,QAAQ,UAAU,QAAQ,KAAK,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,IAAI,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC/G,aAAG,QAAQ,KAAK,UAAU;AAAA;AAE5B,gBAAQ,IAAI;AAAA;AAAA;AAAA,KAGf;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,OAAO;AAClC,UAAI,YAAY;AAChB,UAAI,IAAI,MAAM;AACd,aAAO,KAAK,MAAM;AAChB,kBAAU,KAAK;AACf,YAAI,EAAE;AAAA;AAER,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,OAAO,kBAAkB;AAClD,UAAI,SAAS,QAAQ,oBAAoB,MAAM;AAC7C,eAAO;AAAA;AAET,aAAO,KAAK,aAAa,OAAO,QAAQ,sBAAsB;AAAA;AAAA,KAE/D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,OAAO;AACpC,UAAI,IAAI;AACR,UAAI,OAAO,eAAc,GAAG;AAC1B,YAAI,cAAc,EAAE;AACpB,UAAE,KAAK,MAAM,GAAG,mBAAmB;AACnC,gBAAQ,aAAa;AAAA;AAEvB,WAAK;AACL,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,oBAAoB,UAAU;AACzD,UAAI,sBAAsB,QAAQ,YAAY,MAAM;AAClD,eAAO;AAAA;AAET,aAAO,KAAK,eAAe,UAAU,QAAQ,wBAAwB;AAAA;AAAA,KAEtE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,WAAK,uBAAuB;AAC5B,WAAK,uBAAuB;AAC5B,WAAK,WAAW;AAAA;AAAA;AAGpB,SAAO;AAAA;AAGT,IAAI,gBAAgB,WAAY;AAC9B,0BAAuB,UAAU,SAAS;AACxC,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA;AAEjB,eAAa,gBAAe,CAAC;AAAA,IAC3B,KAAK;AAAA,IACL,KAAK,gBAAe;AAClB,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,SAAS;AAC5B,cAAQ,KAAK,SAAS,SAAU,GAAG;AACjC,eAAO,QAAQ;AAAA;AAEjB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAa,OAAO;AACzB,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,OAAO,SAAS;AACvC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,SAAS,OAAO;AAAA;AAE3B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,SAAS;AAC1C,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,YAAY,OAAO;AAAA;AAE9B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE;AAAA;AAEX,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,OAAO;AAC9B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,SAAS;AAAA;AAEpB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,WAAK,QAAQ,SAAS;AACtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAa,IAAI;AACtB,UAAI,IAAI;AACR,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,KAAK,GAAG;AAAA;AAEnB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,MAAM;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,WAAW;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,IAAI;AAChC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,cAAc;AAAA;AAEzB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE;AAAA;AAEX,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,YAAY;AAAA;AAEvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,YAAY;AAAA;AAEvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,OAAO;AACnC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,cAAc;AAAA;AAEzB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,OAAO;AACxC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,mBAAmB;AAAA;AAE9B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,SAAS;AACxC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,iBAAiB;AAAA;AAE5B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,MAAM,OAAO;AACxC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,WAAW,QAAQ;AAAA;AAE9B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,GAAG;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,aAAa;AAAA;AAExB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,WAAW;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,MAAM;AAC5B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,QAAQ;AAAA;AAEnB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,MAAM;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,WAAW;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,MAAM;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,WAAW;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,KAAK,SAAS;AACjC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,KAAK,KAAK;AAAA;AAErB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,KAAK,SAAS;AACnC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,OAAO,KAAK;AAAA;AAEvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,GAAG;AAC1B,UAAI,QAAQ;AACZ,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,MAAM,SAAS,SAAS,GAAG;AAAA;AAEpC,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA;AAGT,IAAI,oBAAoB,SAAU,gBAAgB;AAChD,YAAU,oBAAmB;AAC7B,MAAI,SAAS,aAAa;AAC1B,gCAA6B;AAC3B,oBAAgB,MAAM;AACtB,WAAO,OAAO,MAAM,MAAM;AAAA;AAE5B,eAAa,oBAAmB,CAAC;AAAA,IAC/B,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAC5B,WAAK,KAAK,SAAU,IAAI;AACtB,eAAO,GAAG,UAAU;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,GAAG;AAC3B,WAAK,KAAK,SAAU,IAAI;AACtB,eAAO,GAAG,UAAU;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC;AACtC,WAAK,KAAK,SAAU,IAAI;AACtB,eAAO,GAAG;AAAA;AAEZ,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,UAAI,QAAQ;AACZ,WAAK,KAAK,SAAU,IAAI;AACtB,eAAO,MAAM,SAAS,eAAe;AAAA;AAEvC,WAAK;AACL,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA,EACP;AAEF,IAAI,sBAAsB,SAAU,gBAAgB;AAClD,YAAU,sBAAqB;AAC/B,MAAI,SAAS,aAAa;AAC1B,kCAA+B;AAC7B,oBAAgB,MAAM;AACtB,WAAO,OAAO,MAAM,MAAM;AAAA;AAE5B,eAAa,sBAAqB,CAAC;AAAA,IACjC,KAAK;AAAA,IACL,OAAO,uBAAuB,GAAG;AAC/B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,cAAc;AAAA;AAEzB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,GAAG;AAC7B,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,YAAY;AAAA;AAEvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,MAAM;AACjC,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,EAAE,aAAa;AAAA;AAExB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,UAAI,QAAQ;AACZ,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,MAAM,SAAS,iBAAiB;AAAA;AAEzC,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,UAAI,SAAS;AACb,WAAK,KAAK,SAAU,GAAG;AACrB,eAAO,OAAO,SAAS,iBAAiB;AAAA;AAE1C,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA,EACP;AAEF,IAAI,cAAc,wBAAuB;AACvC,kBAAgB,MAAM;AACtB,kBAAgB,MAAM,oBAAoB,oBAAI;AAAA;AAEhD,0BAA0B;AACxB,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,MACD,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEL,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,MACD,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,QACD,GAAG;AAAA,QACH,GAAG;AAAA;AAAA,MAEL,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA;AAAA,IAEN,OAAO;AAAA;AAAA;AAGX,gBAAgB,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,MAAI,SAAS;AAAA,IACX,GAAG,IAAI,IAAI;AAAA,IACX,GAAG,IAAI,IAAI;AAAA,KAET,KAAK,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,IAClC,KAAK,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,IAClC,SAAS,iBAAgB,IAAG,IAAG;AACjC,WAAO;AAAA,MACL,GAAG,OAAO,IAAI,KAAK,MAAO,MAAI,OAAO,KAAK,KAAM,MAAI,OAAO,KAAK;AAAA,MAChE,GAAG,OAAO,IAAI,KAAK,MAAO,MAAI,OAAO,KAAK,KAAM,MAAI,OAAO,KAAK;AAAA;AAAA;AAGpE,MAAI,KAAK,OAAO,GAAG,IACf,KAAK,OAAO,IAAI,GAAG,IACnB,KAAK,OAAO,IAAI,GAAG,IAAI,IACvB,KAAK,OAAO,GAAG,IAAI,IACnB,IAAI,OAAO,IAAI,IAAI,GAAG,IAAI,IAAI;AAClC,MAAI,OAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACrC,OAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACrC,OAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IACrC,OAAO,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AACzC,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG,OAAO;AAAA,IACV,GAAG,OAAO;AAAA,IACV;AAAA,IACA;AAAA,IACA,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ;AAAA,IACA;AAAA;AAAA;AAGJ,IAAI,kBAAkB,0BAAyB,OAAO,YAAY;AAChE,MAAI,IAAI;AACR,MAAI,WAAW,KAAK,MAAM,IAAI;AAC5B,QAAI;AAAA,aACK,WAAW,KAAK,MAAM,IAAI;AACnC,QAAI;AAAA;AAEN,SAAO;AAAA;AAET,IAAI,yBAAyB,iCAAgC,OAAO,YAAY;AAC9E,SAAO,gBAAgB,OAAO,cAAc;AAAA;AAE9C,6BAA6B,IAAI,OAAO,OAAO,gBAAgB;AAC7D,eAAa,CAAC,IAAI,QAAQ,OAAO,iBAAiB;AAAA;AAEpD,4BAA4B,IAAI,OAAO;AACrC,MAAI,MAAM,iBAAiB,OAAO,SAAU,OAAO;AACjD,WAAO,MAAM,OAAO;AAAA;AAEtB,MAAI,MAAM,IAAI;AACZ,UAAM,OAAO,KAAK;AAAA;AAAA;AAGtB,IAAI,WAAW,SAAU,iBAAiB;AACxC,YAAU,WAAU;AACpB,MAAI,SAAS,aAAa;AAC1B,qBAAkB,UAAU;AAC1B,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK;AACpB,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,uBAAuB;AACtE,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAAA,MAChE,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAER,oBAAgB,uBAAuB,QAAQ,eAAe,oBAAI;AAClE,oBAAgB,uBAAuB,QAAQ,0BAA0B,oBAAI;AAC7E,oBAAgB,uBAAuB,QAAQ,WAAW;AAAA,MACxD,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA;AAER,WAAO;AAAA;AAET,eAAa,WAAU,CAAC;AAAA,IACtB,KAAK;AAAA,IACL,OAAO,uBAAuB,IAAI,gBAAgB,wBAAwB;AACxE,UAAI,kBAAkB,MAAM;AAC1B,2BAAmB,IAAI,KAAK,gBAAgB;AAC5C,2BAAmB,IAAI,KAAK,gBAAgB;AAC5C,2BAAmB,IAAI,KAAK,gBAAgB;AAC5C,2BAAmB,IAAI,KAAK,gBAAgB;AAC5C,4BAAoB,IAAI,eAAe,EAAE,GAAG,KAAK,gBAAgB,MAAM;AACvE,4BAAoB,IAAI,eAAe,EAAE,IAAI,eAAe,EAAE,GAAG,KAAK,gBAAgB,MAAM;AAC5F,4BAAoB,IAAI,eAAe,EAAE,GAAG,KAAK,gBAAgB,MAAM;AACvE,4BAAoB,IAAI,eAAe,EAAE,IAAI,eAAe,EAAE,GAAG,KAAK,gBAAgB,MAAM;AAC5F,YAAI,2BAA2B,MAAM;AACnC,eAAK;AAAA;AAAA;AAAA;AAAA,KAIV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B;AACnC,WAAK,QAAQ,OAAO,KAAK,gBAAgB,KAAK,SAAS,IAAI,KAAK,gBAAgB,KAAK,GAAG,KAAK;AAC7F,WAAK,QAAQ,OAAO,KAAK,gBAAgB,KAAK,SAAS,IAAI,KAAK,gBAAgB,KAAK,GAAG,KAAK;AAC7F,WAAK,QAAQ,OAAO,KAAK,gBAAgB,KAAK,SAAS,IAAI,KAAK,gBAAgB,KAAK,GAAG,KAAK;AAC7F,WAAK,QAAQ,OAAO,KAAK,gBAAgB,KAAK,SAAS,IAAI,KAAK,gBAAgB,KAAK,GAAG,KAAK;AAAA;AAAA,KAE9F;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B;AAChC,UAAI,SAAS;AACb,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,YAAY,QAAQ,SAAU,IAAI,IAAI;AACzC,eAAO,gBAAgB,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE;AAC3C,eAAO,gBAAgB,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,EAAE;AACpD,eAAO,gBAAgB,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE;AAC3C,eAAO,gBAAgB,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,EAAE;AAAA;AAEtD,WAAK,gBAAgB,KAAK,KAAK;AAC/B,WAAK,gBAAgB,KAAK,KAAK;AAC/B,WAAK,gBAAgB,KAAK,KAAK;AAC/B,WAAK,gBAAgB,KAAK,KAAK;AAC/B,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,IAAI,GAAG,wBAAwB;AAC7D,QAAE,IAAI,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC,WAAK,uBAAuB,IAAI,IAAI,EAAE;AACtC,UAAI,2BAA2B,MAAM;AACnC,aAAK,cAAc,IAAI,GAAG;AAAA;AAAA;AAAA,KAG7B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,OAAO,eAAe;AAC3D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B;AACjC,UAAI,KAAK,uBAAuB,MAAM;AACpC,cAAM,IAAI,MAAM;AAAA;AAElB,WAAK,sBAAsB,IAAI;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,UAAI,SAAS;AACb,UAAI,KAAK,uBAAuB,MAAM;AACpC,aAAK,oBAAoB,iBAAiB,QAAQ,SAAU,IAAI;AAC9D,cAAI,QAAQ,OAAO,YAAY;AAC/B,iBAAO,gBAAgB,IAAI,OAAO;AAAA;AAEpC,aAAK;AACL,aAAK,sBAAsB;AAAA;AAAA;AAAA,KAG9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,SAAS;AACtC,UAAI,SAAS;AACb,cAAQ,SAAS,SAAU,GAAG;AAC5B,eAAO,OAAO,cAAc,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE;AAAA;AAAA;AAAA,KAGpE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,IAAI,GAAG,GAAG,OAAO,QAAQ,UAAU,wBAAwB;AACvF,UAAI,IAAI,QAAQ,KAAK,aAAa,IAAI;AACtC,QAAE,QAAQ,KAAK,QAAQ,EAAE,KAAK,QAAQ,KAAK,QAAQ,EAAE,KAAK,QAAQ,SAAS,QAAQ,EAAE,KAAK,QAAQ,UAAU,QAAQ,EAAE,KAAK;AAC3H,UAAI,KAAK,MAAM;AACb,UAAE,IAAI;AAAA;AAER,UAAI,KAAK,MAAM;AACb,UAAE,IAAI;AAAA;AAER,UAAI,SAAS,MAAM;AACjB,UAAE,IAAI;AAAA;AAER,UAAI,UAAU,MAAM;AAClB,UAAE,IAAI;AAAA;AAER,UAAI,YAAY,MAAM;AACpB,UAAE,IAAI,YAAY;AAAA;AAEpB,QAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AACpB,QAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AACpB,QAAE,KAAK,EAAE,IAAI,EAAE;AACf,QAAE,KAAK,EAAE,IAAI,EAAE;AACf,UAAI,KAAK,uBAAuB,MAAM;AACpC,aAAK,gBAAgB,IAAI,GAAG;AAAA,aACvB;AACL,aAAK,oBAAoB,iBAAiB,IAAI;AAAA;AAEhD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,MAAM,wBAAwB;AAC3D,UAAI,KAAK,KAAK,SAAS;AACvB,UAAI,IAAI,GAAG,QAAQ,GAAG,MAAM,KAAK;AACjC,UAAI,KAAK,MAAM;AACb,YAAI,OAAO,KAAK,QAAQ;AACxB,YAAI,SAAS,KAAK,UAAU;AAC5B,eAAO,KAAK,cAAc,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM;AAAA,aACrE;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,IAAI;AAC1B,aAAO,KAAK,SAAS,QAAQ;AAAA;AAAA,KAE9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,IAAI;AAC5B,aAAO,KAAK,SAAS,UAAU;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,IAAI,wBAAwB;AAC1D,aAAO,KAAK,cAAc,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;AAAA;AAAA,KAE9C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI,GAAG,GAAG,OAAO,QAAQ,UAAU;AAC5D,aAAO,KAAK,cAAc,IAAI,GAAG,GAAG,OAAO,QAAQ;AAAA;AAAA,KAEpD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,IAAI,UAAU;AAC1C,UAAI,IAAI,QAAQ,KAAK,aAAa,IAAI;AACtC,QAAE,IAAI,YAAY;AAClB,WAAK,gBAAgB,IAAI;AACzB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,aAAO,KAAK,QAAQ,OAAO,KAAK,QAAQ;AAAA;AAAA,KAEzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B;AAChC,aAAO,KAAK,QAAQ,OAAO,KAAK,QAAQ;AAAA;AAAA,KAEzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB;AACrB,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB;AACrB,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,IAAI,GAAG,GAAG;AAChC,UAAI,KAAK,YAAY,IAAI,KAAK;AAC5B,eAAO,KAAK,cAAc,IAAI,MAAM,MAAM,GAAG,GAAG;AAAA;AAAA;AAAA,KAGnD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI,GAAG,GAAG;AACpC,UAAI,KAAK,YAAY,IAAI,KAAK;AAC5B,eAAO,KAAK,cAAc,IAAI,GAAG,GAAG,MAAM,MAAM;AAAA;AAAA;AAAA,KAGnD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,YAAY;AACjB,WAAK,uBAAuB;AAC5B,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,IAAI;AACzB,yBAAmB,IAAI,KAAK,gBAAgB;AAC5C,yBAAmB,IAAI,KAAK,gBAAgB;AAC5C,yBAAmB,IAAI,KAAK,gBAAgB;AAC5C,yBAAmB,IAAI,KAAK,gBAAgB;AAC5C,WAAK,YAAY,UAAU;AAC3B,WAAK,uBAAuB,UAAU;AACtC,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,aAAO,KAAK,YAAY,IAAI;AAAA;AAAA,KAE7B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB;AAC5B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,aAAO,KAAK,YAAY,SAAS;AAAA;AAAA;AAGrC,SAAO;AAAA,EACP;AAEF,IAAI,yBAAyB,WAAY;AACvC,mCAAgC,UAAU,KAAK;AAC7C,QAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAClF,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,UAAU;AACf,oBAAgB,MAAM,MAAM;AAC5B,SAAK,KAAK;AAAA;AAEZ,eAAa,yBAAwB,CAAC;AAAA,IACpC,KAAK;AAAA,IACL,OAAO,oBAAoB,SAAS;AAClC,WAAK,IAAI,UAAU;AAAA;AAAA,KAEpB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK,IAAI,YAAY;AAAA;AAAA;AAGhC,SAAO;AAAA;AAET,IAAI,uBAAuB;AACxB,IAAC,oBAAoB;AACxB,IAAI,iBAAiB,SAAU,uBAAuB;AACpD,YAAU,iBAAgB;AAC1B,MAAI,SAAS,aAAa;AAC1B,2BAAwB,UAAU,KAAK,SAAS;AAC9C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,KAAK;AACzC,UAAM,MAAM;AACZ,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,UAAM,SAAS,IAAI,IAAI,UAAU;AACjC,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AACF,IAAI,iBAAiB,SAAU,wBAAwB;AACrD,YAAU,iBAAgB;AAC1B,MAAI,UAAU,aAAa;AAC3B,2BAAwB,UAAU,KAAK,SAAS;AAC9C,QAAI;AACJ,oBAAgB,MAAM;AACtB,aAAS,QAAQ,KAAK,MAAM,UAAU,KAAK;AAC3C,WAAO,MAAM;AACb,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AAEF,IAAI;AACJ,6BAA6B,SAAS,aAAa,YAAY,iBAAiB,SAAS;AACvF,MAAI,aAAa,aAAa,QAAQ,IAAI,QAAQ;AAClD,MAAI,kBAAkB,aAAa,QAAQ,IAAI,QAAQ;AACvD,MAAI,IAAI,IACJ,OAAO,aAAc,aAAY,SAAS;AAC9C,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,QAAI,MAAO,KAAI,KAAK,MAChB,QAAQ,kBAAkB;AAC9B,QAAI,SAAS;AACX,YAAM,aAAa;AAAA;AAErB,QAAI,KAAK,aAAa,MAAM,OACxB,IAAI,QAAQ,IAAI,IAChB,KAAK,KAAK,QAAQ;AACtB,QAAI,KAAK,aAAa,QAAQ,KAC1B,IAAI,QAAQ,IAAI,IAChB,KAAK,KAAK,QAAQ;AACtB,QAAI,QAAQ,MAAM,KAAK,QAAQ,KAAK,MAAM;AACxC,UAAI,UAAU,YAAY;AAAA,QACxB;AAAA,QACA;AAAA,SACC,QAAQ,GAAG,QAAQ;AACtB,UAAI,QAAQ;AACZ,UAAI,QAAQ;AAAA;AAEd,MAAE,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,GAAG,YAAY,GAAG;AAAA;AAAA;AAGtB,SAAO;AAAA;AAET,6BAA6B,GAAG,GAAG;AACjC,SAAO,EAAE,QAAQ,EAAE;AAAA;AAErB,yBAAyB,GAAG,GAAG;AAC7B,MAAI,KAAK,EAAE,QAAQ,IAAI,CAAC,KAAK,KAAK,EAAE,QAAQ,KAAK,KAAK,EAAE,OACpD,KAAK,EAAE,QAAQ,IAAI,CAAC,KAAK,KAAK,EAAE,QAAQ,KAAK,KAAK,EAAE;AACxD,SAAO,KAAK;AAAA;AAEd,IAAI,oBAAqB,sBAAqB,IAAI,gBAAgB,oBAAoB,KAAK,kBAAkB,gBAAgB,oBAAoB,OAAO,sBAAsB,gBAAgB,oBAAoB,QAAQ,sBAAsB,gBAAgB,oBAAoB,MAAM,kBAAkB;AAC5S,sBAAsB,GAAG;AACvB,SAAO,EAAE,iBAAiB;AAAA;AAE5B,qBAAqB,GAAG;AACtB,SAAO,EAAE,iBAAiB;AAAA;AAE5B,mBAAmB,GAAG;AACpB,SAAO,EAAE,UAAU,SAAS;AAAA;AAE9B,4BAA4B,QAAQ;AAClC,SAAO,CAAC,OAAO,iBAAiB,OAAO,UAAU,OAAO;AAAA;AAE1D,IAAI,oBAAoB,WAAY;AAClC,8BAA2B,UAAU;AACnC,QAAI,QAAQ;AACZ,oBAAgB,MAAM;AACtB,SAAK,WAAW;AAChB,oBAAgB,MAAM,eAAe,oBAAI;AACzC,oBAAgB,MAAM,mBAAmB,oBAAI;AAC7C,aAAS,KAAK,oCAAoC,SAAU,GAAG;AAC7D,UAAI,EAAE,eAAe,QAAQ,cAAc;AACzC,cAAM,+BAA+B,EAAE;AAAA;AAEzC,UAAI,EAAE,eAAe,QAAQ,cAAc;AACzC,cAAM,+BAA+B,EAAE;AAAA;AAAA;AAG3C,aAAS,KAAK,sCAAsC,SAAU,IAAI;AAChE,YAAM,+BAA+B;AAAA;AAAA;AAGzC,eAAa,oBAAmB,CAAC;AAAA,IAC/B,KAAK;AAAA,IACL,OAAO,8BAA8B,QAAQ;AAC3C,UAAI,MAAM,KAAK,gBAAgB,IAAI,OAAO;AAC1C,aAAO,MAAM,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,GAAG;AAAA;AAAA,KAErC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,QAAQ,IAAI,IAAI,IAAI,IAAI,UAAU,gBAAgB;AAC1E,UAAI,KAAK,GAAG,IAAI,OAAO,IAAI,GAAG,GAC1B,KAAK,GAAG,IAAI,OAAO,IAAI,GAAG,GAC1B,MAAM,GAAG,IAAI,GAAG,IAAI,GACpB,MAAM,GAAG,IAAI,GAAG,IAAI;AACxB,UAAI,YAAY,QAAQ,SAAS,SAAS,GAAG;AAC3C,YAAI,UAAU,KAAK,SAAS,gBAAgB,CAAC,IAAI,IAAI,GAAG,IAAI;AAC5D,aAAK,QAAQ;AACb,aAAK,QAAQ;AAAA;AAEf,aAAO,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,MAAM,IAAI,KAAK,KAAK,IAAI,MAAM,IAAI;AAAA;AAAA,KAEtH;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,IAAI,IAAI,KAAK,KAAK,UAAU,gBAAgB,WAAW;AACrF,UAAI,KAAK,IAAI,IAAI,IAAI,IAAI,GACrB,KAAK,IAAI,IAAI,IAAI,IAAI;AACzB,UAAI,SAAS,IACT,UAAU;AACd,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,YAAI,IAAI,KAAK,UAAU,UAAU,IAAI,IAAI,IAAI,IAAI,IAAI,UAAU;AAC/D,YAAI,IAAI,SAAS;AACf,mBAAS,IAAI;AACb,oBAAU;AAAA;AAAA;AAGd,aAAO,CAAC,QAAQ,UAAU;AAAA;AAAA,KAE3B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,QAAQ,QAAQ;AACrD,UAAI,KAAK,OAAO;AAChB,UAAI,MAAM;AAAA,QACR,MAAM,GAAG,IAAI,OAAO,KAAK,IAAI;AAAA,QAC7B,MAAM,GAAG,IAAI,OAAO,KAAK,IAAI;AAAA,QAC7B,GAAG;AAAA,QACH,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA;AAEN,aAAO,KAAK,qBAAqB,QAAQ;AAAA;AAAA,KAE1C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,QAAQ,KAAK,WAAW;AAC3D,WAAK,gBAAgB,IAAI,OAAO,IAAI;AACpC,aAAO,mBAAmB;AAC1B,UAAI,WAAW;AACb,eAAO,YAAY;AAAA;AAErB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,KAAK,IAAI,IAAI,QAAQ;AAC1D,UAAI,YAAY;AAAA,QACd,MAAM,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI;AAAA,QAChC,MAAM,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI;AAAA,QAChC,GAAG,IAAI;AAAA,QACP,GAAG,IAAI;AAAA,QACP,IAAI;AAAA,QACJ,IAAI;AAAA;AAEN,UAAI;AACJ,UAAI,WAAW,OAAO;AACtB,UAAI,YAAY,QAAQ,SAAS,SAAS,GAAG;AAC3C,YAAI,IAAI,CAAC,IAAI,KAAK,IAAI,MAClB,UAAU;AAAA,UACZ,GAAG,UAAU;AAAA,UACb,GAAG,UAAU;AAAA,UACb,IAAI;AAAA,UACJ,IAAI;AAAA;AAEN,gBAAQ,UAAU,SAAU,GAAG;AAC7B,oBAAU,YAAY,SAAS,EAAE,GAAG,EAAE;AACtC,cAAI,KAAK,CAAC,KAAK,MAAM,EAAE,KAAK,QAAQ,KAAK,EAAE,KAAK,QAAQ,KAAK,KAAK,MAAM,EAAE,KAAK,QAAQ,KAAK,EAAE,KAAK,QAAQ;AAC3G,cAAI,GAAG;AAAA;AAET,YAAI,KAAK,EAAE;AACX,YAAI,KAAK,EAAE;AACX,cAAM;AAAA,UACJ,MAAM,QAAQ;AAAA,UACd,MAAM,QAAQ;AAAA,UACd,GAAG,IAAI;AAAA,UACP,GAAG,IAAI;AAAA,UACP,IAAI,EAAE;AAAA,UACN,IAAI,EAAE;AAAA;AAAA,aAEH;AACL,YAAI,KAAK,IAAI;AACb,YAAI,KAAK,IAAI;AACb,cAAM,OAAO;AAAA,UACX,IAAI,IAAI;AAAA,UACR,IAAI,IAAI;AAAA,WACP;AAAA;AAEL,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,QAAQ,QAAQ;AACnD,UAAI,KAAK,OAAO,IACZ,KAAK,OAAO,IACZ,YAAY,OAAO,WACnB,MAAM,KAAK,gBAAgB,IAAI,OAAO;AAC1C,UAAI,OAAO,QAAQ,aAAa,cAAc,OAAO,WAAW;AAC9D,eAAO;AAAA;AAET,UAAI,sBAAsB,mBAAmB,SACzC,uBAAuB,eAAe,qBAAqB;AAC3D,2BAAqB;AACrB,UAAI,aAAa,qBAAqB;AAC1C,YAAM,KAAK,uBAAuB,YAAY,IAAI,IAAI;AACtD,aAAO,KAAK,qBAAqB,QAAQ,KAAK;AAAA;AAAA,KAE/C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,QAAQ,QAAQ;AACpD,UAAI;AACJ,UAAI,OAAO,UAAU,WAAW,GAAG;AACjC,eAAO,KAAK,qBAAqB,QAAQ;AAAA;AAE3C,UAAI,KAAK,OAAO,IACZ,KAAK,OAAO,IACZ,MAAM,OAAO,KACb,MAAM,OAAO;AACjB,UAAI,uBAAuB,mBAAmB,SAC1C,uBAAuB,eAAe,sBAAsB,IAC5D,aAAa,qBAAqB,IAClC,aAAa,qBAAqB;AACtC,UAAI,OAAO,UAAU,OAAO,QAAQ,OAAO,MAAM;AAC/C,cAAM,KAAK,uBAAuB,YAAY,IAAI,IAAI;AAAA,aACjD;AACL,YAAI,wBAAwB,KAAK,gBAAgB,IAAI,IAAI,KAAK,KAAK,OAAO,UAAU,OAAO,WAAW,OAAO,YACzG,yBAAyB,eAAe,uBAAuB,IAC/D,SAAS,uBAAuB,IAChC,SAAS,uBAAuB;AACpC,eAAO,kBAAkB;AACzB,YAAI,WAAW,YAAY;AACzB,iBAAO,WAAW,OAAO,OAAO,OAAO;AACvC,iBAAO,QAAQ,uBAAuB;AAAA;AAExC,cAAM,KAAK,uBAAuB,QAAQ,IAAI,IAAI;AAAA;AAEpD,aAAO,KAAK,qBAAqB,QAAQ,KAAK,OAAO;AAAA;AAAA,KAEtD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,WAAW,cAAc;AACrD,UAAI,SAAS;AACb,UAAI,KAAK,KAAK,SAAS,SAAS,YAAY,YACxC,mBAAmB,2BAA0B,MAAM,SAAS,qBAAqB,cAAc,iBAAiB,aAAa;AAC/H,YAAI,oBAAoB,SAAS,GAAG;AAClC,cAAI,KAAK,oBAAoB,KAAK,kBAAkB,QACpD,UAAU,SAAS,SAAS,SAAS,KACjC,UAAU,oBAAoB,IAAI,IAAI,cAAc,iBAAiB;AACzE,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,gBAAI,IAAI,QAAQ,GAAG,GACf,cAAc,EAAE,UAAU,GAAG,cAAc,WAC3C,KAAK,cAAc,EAAE,UAAU,KAAK,EAAE,UAAU;AACpD,mBAAO,qBAAqB,GAAG,SAAS;AAAA,cACtC,MAAM,QAAQ,GAAG;AAAA,cACjB,MAAM,QAAQ,GAAG;AAAA,cACjB,GAAG,QAAQ,GAAG;AAAA,cACd,GAAG,QAAQ,GAAG;AAAA,cACd,IAAI,YAAY;AAAA,cAChB,IAAI,YAAY;AAAA;AAAA;AAAA;AAAA;AAKxB,uBAAiB,QAAQ,IAAI,aAAa,QAAQ,MAAM,GAAG,CAAC,GAAG;AAC/D,uBAAiB,KAAK,IAAI,aAAa,KAAK,MAAM,GAAG,CAAC,GAAG;AACzD,uBAAiB,MAAM,IAAI,aAAa,MAAM,OAAO,GAAG,CAAC,IAAI;AAC7D,uBAAiB,OAAO,IAAI,aAAa,OAAO,OAAO,GAAG,CAAC,GAAG;AAAA;AAAA,KAE/D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,OAAO,QAAO,OAAO,MAAM,UAAU,WAAW,KAAK,SAAS,QAAQ,cAAc,kBAAkB;AACtI,UAAI,WAAW,KAAK,UAAU,MAC1B,aAAa,SAAS,IACtB,OAAO,CAAC,GAAG,GAAG,MACd,SAAS;AAAA,QACX,OAAO;AAAA,QACP;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,SAEJ,cAAc,MAAM,SACpB,mBAAmB,SAAS,wBAAwB,MAAM,SAAS,yBAAyB,MAC5F;AACJ,UAAI,kBAAkB;AACpB,YAAI,OAAO,iBAAiB,kBAAkB,SAAU,GAAG;AACzD,iBAAO,EAAE,SAAS;AAAA;AAEpB,YAAI,SAAS,IAAI;AACf,2BAAiB,OAAO,MAAM;AAC9B,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,wBAAY,iBAAiB,GAAG;AAChC,gBAAI,UAAU,gBAAgB,MAAM;AAClC,2BAAa,IAAI;AAAA;AAEnB,6BAAiB,IAAI,iBAAiB,GAAG,EAAE,UAAU;AACrD,6BAAiB,IAAI,iBAAiB,GAAG,EAAE,UAAU;AAAA;AAAA;AAAA;AAI3D,eAAS,KAAK,GAAG,KAAK,YAAY,QAAQ,MAAM;AAC9C,oBAAY,YAAY,IAAI;AAC5B,YAAI,UAAU,gBAAgB,MAAM;AAClC,uBAAa,IAAI;AAAA;AAEnB,yBAAiB,IAAI,YAAY,IAAI,EAAE,UAAU;AACjD,yBAAiB,IAAI,YAAY,IAAI,EAAE,UAAU;AAAA;AAEnD;AACE,YAAI,YAAY,UAAU,IAAI,YAAY;AAC1C,oBAAY,OAAO,WAAW,GAAG;AAAA;AAEnC,eAAS,wBAAwB;AAAA;AAAA,KAElC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wCAAwC,UAAU;AACvD,UAAI,kBAAkB,KAAK,YAAY,IAAI,SAAS;AACpD,UAAI,QAAQ;AACZ,MAAC,UAAU,MAAM,KAAK;AACpB,YAAI,MAAM;AACR,cAAI,IAAI,YAAW,GAAG;AACpB,mBAAO,EAAE,SAAS;AAAA;AAEpB,6BAAmB,KAAK,KAAK;AAC7B,6BAAmB,KAAK,MAAM;AAC9B,6BAAmB,KAAK,QAAQ;AAChC,6BAAmB,KAAK,OAAO;AAC/B,mBAAS,KAAK,IAAI;AAClB,mBAAS,KAAK,KAAK;AACnB,mBAAS,KAAK,OAAO;AACrB,mBAAS,KAAK,MAAM;AAAA;AAAA,SAErB,iBAAiB,SAAS;AAC7B,UAAI,UAAU,GAAG;AACf,aAAK,YAAY,UAAU,SAAS;AAAA;AAEtC,WAAK,gBAAgB,UAAU,SAAS,QAAQ;AAAA;AAAA,KAEjD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,QAAQ,QAAQ;AACpD,UAAI;AACJ,UAAI,aAAa,SAAS;AACxB,cAAM,KAAK,gBAAgB,IAAI,OAAO,OAAO;AAAA,UAC3C,MAAM;AAAA,UACN,MAAM;AAAA,UACN,GAAG;AAAA,UACH,GAAG;AAAA,UACH,IAAI;AAAA,UACJ,IAAI;AAAA;AAAA,iBAEG,YAAY,SAAS;AAC9B,cAAM,KAAK,uBAAuB,QAAQ;AAAA,aACrC;AACL,cAAM,KAAK,sBAAsB,QAAQ;AAAA;AAE3C,aAAO,YAAY,OAAO;AAC1B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,YAAY,WAAW;AACjD,UAAI,aAAa,KAAK,SAAS,SAAS,YAAY,WAAW,WAC3D,aAAa,KAAK,SAAS,SAAS,YAAY,WAAW,WAC3D,KAAK,WAAW,UAAU,IAC1B,KAAK,WAAW,UAAU;AAC9B,UAAI,WAAW,KAAK,oBAAoB,IAAI;AAAA,QAC1C,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,QACT;AAAA,QACA,UAAU,KAAK,SAAS,cAAc,WAAW;AAAA,UAE/C,WAAW,KAAK,oBAAoB,IAAI;AAAA,QAC1C,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,QACT;AAAA,QACA,UAAU,KAAK,SAAS,cAAc,WAAW;AAAA;AAEnD,iBAAW,UAAU;AACrB,iBAAW,UAAU,QAAQ;AAAA,QAC3B,WAAW;AAAA,QACX,WAAW;AAAA,QACX,gBAAgB,WAAW,UAAU;AAAA,QACrC,gBAAgB,WAAW,UAAU;AAAA,QACrC,aAAa,WAAW,gBAAgB;AAAA,QACxC;AAAA,QACA;AAAA;AAAA;AAAA,KAGH;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,UAAU,QAAQ;AACpD,eAAS,UAAU;AACnB,UAAI,SAAS,SAAS;AACtB,UAAI,MAAM,KAAK,gBAAgB,IAAI,OAAO;AAC1C,UAAI,OAAO,QAAQ,OAAO,aAAa,QAAQ,OAAO,cAAc,OAAO,WAAW;AACpF,cAAM,KAAK,sBAAsB,QAAQ;AACzC,aAAK,qBAAqB,QAAQ,KAAK,OAAO;AAAA;AAEhD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,IAAI;AACzC,aAAO,GAAG,UAAU,KAAK,qBAAqB,GAAG,WAAW,CAAC,GAAG;AAAA;AAAA,KAEjE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,QAAQ,aAAa;AACxD,UAAI,YAAY,KAAK,gBAAgB,IAAI,OAAO;AAChD,UAAI,aAAa,MAAM;AACrB,kBAAU,KAAK,YAAY;AAC3B,kBAAU,KAAK,YAAY;AAAA;AAAA;AAAA,KAG9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,IAAI;AAClC,aAAO,GAAG,UAAU,CAAC,aAAa,GAAG,YAAY,GAAG,QAAQ,UAAU,SAAS,IAAI;AAAA;AAAA,KAEpF;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI;AAC7B,aAAO,GAAG,UAAU,YAAY,GAAG,WAAW;AAAA;AAAA,KAE/C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,QAAQ;AACpC,aAAO,8BAA8B;AAAA;AAAA,KAEtC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,WAAW,WAAW,YAAY;AACvD,UAAI,SAAS;AACb,UAAI,qBAAqB,oBAAI,OACzB,mBAAmB,oBAAI,OACvB,kBAAkB,oBAAI;AAC1B,UAAI,CAAC,KAAK,SAAS,iBAAiB;AAClC,YAAI,KAAK,KAAK,SAAS,mBAAmB,cAAc;AACxD,oBAAY,aAAa;AACzB,YAAI,mBAAmB,IACnB,GACA;AACJ,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,uBAAa,GAAG;AAChB,2BAAiB,IAAI;AACrB,cAAI,WAAW;AACf,cAAI,WAAW,YAAY,WAAW,GAAG;AACvC,gBAAI,aAAa,IAAI;AACnB,kBAAI,CAAC,KAAK,YAAY,IAAI,YAAY;AACpC,qBAAK,YAAY,IAAI,WAAW;AAAA,kBAC9B,KAAK;AAAA,kBACL,OAAO;AAAA,kBACP,QAAQ;AAAA,kBACR,MAAM;AAAA;AAAA;AAGV,mBAAK,kBAAkB,KAAK,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,GAAG,GAAG;AAAA,gBACvE,WAAW,CAAC,YAAY;AAAA,gBACxB,aAAa;AAAA,iBACZ,OAAO,WAAW,GAAG,OAAO,eAAe,IAAI,oBAAoB;AACtE,8BAAgB,IAAI;AAAA;AAAA,iBAEjB;AACL,qBAAS,MAAM,GAAG,MAAM,WAAW,YAAY,QAAQ,OAAO;AAC5D,kBAAI,OAAO,WAAW,YAAY,MAC9B,WAAW,KAAK,UAChB,WAAW,KAAK,UAChB,mBAAmB,aAAa,KAAK,UAAU,GAAG,UAClD,mBAAmB,aAAa,KAAK,UAAU,GAAG;AACtD,kBAAI,oBAAoB,kBAAkB;AACxC,oBAAI,KAAM,MAAK,UAAU,GAAG,QAAQ,SAAS,IAAI,KAAK,MAClD,KAAM,MAAK,UAAU,GAAG,QAAQ,SAAS,IAAI,KAAK,MAClD,OAAO,CAAC,UAAU,IAAI,UAAU,IAAI,KAAK,MACzC,IAAI,iBAAiB,OACrB,OAAO,KAAK,aAAa,YAAY,IAAI;AAC7C,oBAAI,oBAAoB,CAAC,KAAK,YAAY,IAAI,WAAW;AACvD,uBAAK,YAAY,IAAI,UAAU;AAAA,oBAC7B,KAAK;AAAA,oBACL,OAAO;AAAA,oBACP,QAAQ;AAAA,oBACR,MAAM;AAAA;AAAA;AAGV,oBAAI,oBAAoB,CAAC,KAAK,YAAY,IAAI,WAAW;AACvD,uBAAK,YAAY,IAAI,UAAU;AAAA,oBAC7B,KAAK;AAAA,oBACL,OAAO;AAAA,oBACP,QAAQ;AAAA,oBACR,MAAM;AAAA;AAAA;AAGV,oBAAI,KAAK,KAAK,SAAS,SAAS,YAAY,WACxC,KAAK,KAAK,SAAS,SAAS,YAAY;AAC5C,oBAAI,aAAa,YAAa,qBAAoB,mBAAmB;AACnE,uBAAK,kBAAkB,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,KAAK,GAAG,GAAG,MAAM,OAAO,UAAU,GAAG,OAAO,KAAK,oBAAoB;AAClI,uBAAK,kBAAkB,KAAK,YAAY,IAAI,WAAW,CAAC,KAAK,KAAK,GAAG,GAAG,MAAM,OAAO,UAAU,GAAG,OAAO,KAAK,oBAAoB;AAAA,uBAC7H;AACL,sBAAI,iBAAiB,KAAK,SAAS,cAAc;AACjD,sBAAI,iBAAiB,KAAK,SAAS,cAAc;AACjD,sBAAI,CAAC,GAAG;AACN,wBAAI,KAAK,sBAAsB,UAAU,UAAU,IAAI,IAAI,KAAK,UAAU,GAAG,SAAS,KAAK,UAAU,GAAG,SAAS,gBAAgB;AACjI,qCAAiB,QAAQ;AAAA;AAE3B,sBAAI,kBAAkB;AACpB,yBAAK,kBAAkB,KAAK,YAAY,IAAI,WAAW,EAAE,OAAO,GAAG,MAAM,OAAO,UAAU,GAAG,OAAO,EAAE,EAAE,IAAI,oBAAoB;AAAA;AAElI,sBAAI,kBAAkB;AACpB,yBAAK,kBAAkB,KAAK,YAAY,IAAI,WAAW,EAAE,QAAQ,IAAI,MAAM,MAAM,UAAU,GAAG,MAAM,EAAE,EAAE,IAAI,oBAAoB;AAAA;AAAA;AAGpI,oBAAI,kBAAkB;AACpB,kCAAgB,IAAI;AAAA;AAEtB,oBAAI,kBAAkB;AACpB,kCAAgB,IAAI;AAAA;AAEtB,mCAAmB,IAAI;AACvB,oBAAI,oBAAoB,SAAS,KAAK,oBAAoB,SAAS,GAAG;AACpE,mCAAiB,IAAI,KAAK,UAAU;AAAA;AAAA,qBAEjC;AACL,oBAAI,gBAAgB,WAAW,YAAY,KAAK,UAAU,KAAK,aAAa,YAAY,IAAI,IACxF,cAAc,cAAc;AAChC,oBAAI,UAAU,cAAc;AAC1B,uBAAK,SAAS,eAAe,eAAe;AAAA,oBAC1C,uBAAuB;AAAA,oBACvB;AAAA;AAEF,qCAAmB,IAAI,WAAW,YAAY;AAC9C,2BAAS,IAAI,GAAG,IAAI,cAAc,YAAY,QAAQ,KAAK;AACzD,wBAAI,cAAc,YAAY,OAAO,WAAW,YAAY,MAAM;AAChE,yCAAmB,IAAI,cAAc,YAAY;AAAA;AAAA;AAAA,uBAGhD;AACL,qCAAmB,IAAI,WAAW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxD,wBAAgB,QAAQ,SAAU,QAAQ;AACxC,iBAAO,cAAc,QAAQ,OAAO,YAAY,IAAI;AAAA;AAEtD,yBAAiB,QAAQ,SAAU,KAAI;AACrC,cAAI,KAAK,OAAO,SAAS,SAAS,YAAY,IAAG;AACjD,iBAAO,SAAS,eAAe,KAAI;AAAA,YACjC;AAAA,YACA,QAAQ;AAAA;AAAA;AAGZ,2BAAmB,QAAQ,SAAU,GAAG;AACtC,iBAAO,SAAS,iBAAiB,GAAG;AAAA,YAClC;AAAA;AAAA;AAAA;AAIN,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,WAAK,gBAAgB;AACrB,WAAK,YAAY;AAAA;AAAA,KAElB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,UAAU,QAAQ;AAC1C,UAAI,UAAU,MAAM;AAClB,iBAAS,UAAU;AAAA;AAAA;AAAA,KAGtB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,MAAM,SAAS;AAClD,WAAK,UAAU,GAAG,UAAU,QAAQ;AACpC,WAAK,UAAU,GAAG,UAAU,QAAQ;AAAA;AAAA,KAErC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,UAAU,UAAU,IAAI,IAAI,cAAc,cAAc,gBAAgB,gBAAgB;AAC5H,UAAI,SAAS;AACb,UAAI,cAAc;AAAA,QAChB,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA;AAEZ,UAAI,aAAa,UAAU;AACzB,eAAO;AAAA,UACL,aAAa,YAAY;AAAA,UACzB,GAAG,CAAC,KAAK;AAAA;AAAA;AAGb,UAAI,SAAQ,KAAK,MAAM,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,IAClD,UAAS,KAAK,MAAM,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE;AACvD,UAAI,aAAa,IACb,YAAY;AAChB,MAAC,UAAU,OAAO,KAAK;AACrB,iBAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,cAAI;AACJ,oBAAU,MAAM,OAAO,sBAAqB,IAAI,gBAAgB,oBAAoB,MAAM;AAAA,YACxF,GAAG,IAAI,IAAG,GAAG;AAAA,YACb,GAAG,IAAI,IAAG,GAAG,EAAE;AAAA,cACb,gBAAgB,oBAAoB,OAAO;AAAA,YAC7C,GAAG,IAAI,IAAG,GAAG,IAAI,IAAI,IAAG,GAAG;AAAA,YAC3B,GAAG,IAAI,IAAG,GAAG,EAAE;AAAA,cACb,gBAAgB,oBAAoB,KAAK;AAAA,YAC3C,GAAG,IAAI,IAAG,GAAG,EAAE;AAAA,YACf,GAAG,IAAI,IAAG,GAAG;AAAA,cACX,gBAAgB,oBAAoB,QAAQ;AAAA,YAC9C,GAAG,IAAI,IAAG,GAAG,EAAE;AAAA,YACf,GAAG,IAAI,IAAG,GAAG,IAAI,IAAI,IAAG,GAAG;AAAA,cACzB;AACJ,cAAI,IAAI,IAAG,MAAM,QAAQ,IAAI,IAAG,GAAG,SAAS,GAAG;AAC7C,qBAAS,QAAQ,UAAU,MAAM,MAAK;AACpC,wBAAU,MAAM,KAAI,QAAQ,OAAO,SAAS,kBAAkB,UAAU,MAAM,KAAI,OAAO,IAAI,IAAG;AAAA;AAAA;AAAA;AAAA,SAIrG,CAAC,QAAQ,SAAS,CAAC,CAAC,IAAI,iBAAiB,CAAC,IAAI;AACjD,UAAI,QAAQ,CAAC,KAAK,MAAM,OAAO;AAC/B,eAAS,KAAK,GAAG,KAAK,MAAM,QAAQ,MAAM;AACxC,iBAAS,KAAK,GAAG,KAAK,MAAM,QAAQ,MAAM;AACxC,qBAAW,KAAK;AAAA,YACd,QAAQ,MAAM;AAAA,YACd,QAAQ,MAAM;AAAA,YACd,MAAM,WAAW,UAAU,OAAO,MAAM,MAAM,UAAU,OAAO,MAAM;AAAA;AAAA;AAAA;AAI3E,iBAAW,KAAK,SAAU,GAAG,GAAG;AAC9B,YAAI,EAAE,OAAO,EAAE,MAAM;AACnB,iBAAO;AAAA,mBACE,EAAE,OAAO,EAAE,MAAM;AAC1B,iBAAO;AAAA,eACF;AACL,cAAI;AACJ,cAAI,cAAe,gBAAe,IAAI,gBAAgB,cAAc,MAAM,IAAI,gBAAgB,cAAc,KAAK,IAAI,gBAAgB,cAAc,OAAO,IAAI,gBAAgB,cAAc,QAAQ,IAAI,eACpM,MAAM,YAAY,EAAE,SACpB,MAAM,YAAY,EAAE,SACpB,MAAM,YAAY,EAAE,SACpB,MAAM,YAAY,EAAE;AACxB,iBAAO,MAAM,MAAM,KAAK,MAAM,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,MAAM,IAAI;AAAA;AAAA;AAG7E,UAAI,aAAa,WAAW,GAAG,QAC3B,aAAa,WAAW,GAAG;AAC/B,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAI,aAAa,iBAAiB,aAAa,QAAQ;AACrD,uBAAa,aAAa;AAAA,mBACjB,CAAC,aAAa,gBAAgB,gBAAgB,cAAc,WAAW,GAAG,SAAS;AAC5F,uBAAa,WAAW,GAAG;AAAA,eACtB;AACL,uBAAa;AAAA;AAEf,YAAI,aAAa,gBAAgB,aAAa,QAAQ;AACpD,uBAAa,aAAa;AAAA,mBACjB,CAAC,aAAa,gBAAgB,gBAAgB,cAAc,WAAW,GAAG,SAAS;AAC5F,uBAAa,WAAW,GAAG;AAAA,eACtB;AACL,uBAAa;AAAA;AAEf,YAAI,cAAc,QAAQ,cAAc,MAAM;AAC5C;AAAA;AAAA;AAGJ,UAAI,aAAa,cAAc;AAC7B,aAAK,eAAe,cAAc;AAAA;AAEpC,UAAI,aAAa,cAAc;AAC7B,aAAK,eAAe,cAAc;AAAA;AAEpC,aAAO;AAAA,QACL,GAAG,CAAC,YAAY;AAAA,QAChB,OAAO;AAAA,QACP,QAAQ;AAAA;AAAA;AAAA,KAGX;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,GAAG,MAAM,cAAc;AACpD,QAAE,cAAc;AAChB,UAAI,gBAAgB,EAAE,cAAc,MAAM;AACxC,UAAE,aAAa,EAAE;AAAA;AAAA;AAAA,KAGpB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,GAAG;AACtB,QAAE,SAAS;AACX,UAAI,aAAa,IAAI;AACnB,UAAE,aAAa,EAAE;AAAA;AAAA;AAAA,KAGpB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,GAAG;AACxB,QAAE,SAAS;AACX,UAAI,aAAa,IAAI;AACnB,UAAE,aAAa;AAAA;AAAA;AAAA,KAGlB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,GAAG,QAAQ;AAC9C,UAAI,MAAM,iBAAiB,EAAE,WAAW,SAAU,KAAK;AACrD,eAAO,IAAI,MAAM,OAAO,KAAK,IAAI,MAAM,OAAO;AAAA;AAEhD,UAAI,QAAQ,IAAI;AACd,UAAE,kBAAkB;AACpB,eAAO;AAAA,aACF;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,GAAG;AACjC,UAAI,EAAE,eAAe,MAAM;AACzB,UAAE,aAAa,EAAE,gBAAgB,QAAQ,EAAE,gBAAgB,QAAQ,eAAe;AAAA;AAAA;AAAA,KAGrF;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,GAAG;AACnC,QAAE,aAAa;AAAA;AAAA,KAEhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,IAAI,IAAI;AACnC,UAAI,CAAC,MAAM,CAAC,IAAI;AACd,eAAO;AAAA;AAET,UAAI,KAAK,GAAG,UAAU,GAAG,kBACrB,KAAK,GAAG,UAAU,GAAG;AACzB,aAAO,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG;AAAA;AAAA;AAG3H,SAAO;AAAA;AAGT,qBAAqB,IAAI,IAAI;AAC3B,MAAI,KAAK,GAAG,MAAM,MAAM,OACpB,KAAK,GAAG,MAAM,MAAM;AACxB,WAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,aAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,UAAI,GAAG,OAAO,GAAG,IAAI;AACnB,eAAO;AAAA;AAAA;AAAA;AAIb,SAAO;AAAA;AAET,qBAAqB,UAAU,OAAO,aAAa;AACjD,MAAI,IAAI;AACR,MAAI,aAAa,qBAAoB,GAAG;AACtC,QAAI,SAAS,IAAI;AACf,aAAO;AAAA,WACF;AACL,aAAO,SAAS,MAAM;AAAA;AAAA;AAG1B,MAAI,OAAO;AACT,QAAI,OAAO,UAAU,UAAU;AAC7B,UAAI,UAAU,KAAK;AACjB,eAAO;AAAA;AAET,QAAE,KAAK;AAAA,WACF;AACL,UAAI,aAAa;AACf,YAAI;AAAA,aACC;AACL,YAAI,MAAM,UAAU,MAAM;AACxB,cAAI;AACJ,UAAC,MAAK,GAAG,KAAK,MAAM,IAAI,mBAAmB,mBAAmB,OAAO,IAAI;AAAA,eACpE;AACL,YAAE,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAK1B,SAAO;AAAA;AAET,4BAA4B,gBAAgB,IAAI;AAC9C,MAAI,kBAAkB,MAAM;AAC1B,mBAAe,UAAU,KAAK;AAAA;AAAA;AAGlC,+BAA+B,gBAAgB,UAAU;AACvD,MAAI,kBAAkB,MAAM;AAC1B,uBAAmB,eAAe,WAAW,SAAU,IAAI;AACzD,aAAO,OAAO;AAAA;AAAA;AAAA;AAIpB,8BAA8B,YAAY,UAAU,UAAU;AAC5D,MAAI,YAAY,MAAM;AACpB,aAAS,YAAY,KAAK;AAC1B,QAAI,SAAS,YAAY,WAAW,GAAG;AACrC,iBAAW,SAAS,SAAS,WAAW,QAAQ,WAAW,SAAS;AAAA;AAAA;AAGxE,MAAI,YAAY,MAAM;AACpB,QAAI,YAAY,QAAQ,WAAW,aAAa,WAAW,UAAU;AACnE,eAAS,YAAY,KAAK;AAC1B,UAAI,SAAS,YAAY,WAAW,GAAG;AACrC,mBAAW,SAAS,SAAS,WAAW,QAAQ,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAK5E,iCAAiC,YAAY,UAAU,UAAU;AAC/D,MAAI,YAAY,MAAM;AACpB,QAAI,cAAc,SAAS,YAAY;AACvC,uBAAmB,SAAS,aAAa,SAAU,IAAI;AACrD,aAAO,WAAW,OAAO,GAAG;AAAA;AAE9B,QAAI,cAAc,KAAK,SAAS,YAAY,WAAW,GAAG;AACxD,iBAAW,SAAS,YAAY,WAAW,QAAQ,WAAW,SAAS;AAAA;AAAA;AAG3E,MAAI,YAAY,MAAM;AACpB,QAAI,cAAc,SAAS,YAAY;AACvC,QAAI,YAAY,QAAQ,WAAW,aAAa,WAAW,UAAU;AACnE,yBAAmB,SAAS,aAAa,SAAU,IAAI;AACrD,eAAO,WAAW,OAAO,GAAG;AAAA;AAAA;AAGhC,QAAI,cAAc,KAAK,SAAS,YAAY,WAAW,GAAG;AACxD,iBAAW,SAAS,YAAY,WAAW,QAAQ,WAAW,SAAS;AAAA;AAAA;AAAA;AAI1E,IAAC,kBAAkB,SAAU,iBAAiB;AAC/C,YAAU,kBAAiB;AAC3B,MAAI,SAAS,aAAa;AAC1B,4BAAyB,gBAAgB,UAAU;AACjD,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK;AACpB,UAAM,iBAAiB;AACvB,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,oBAAgB,uBAAuB,QAAQ,4BAA4B;AAC3E,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAClE,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,yBAAyB;AACxE,oBAAgB,uBAAuB,QAAQ,kBAAkB;AACjE,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,0BAA0B;AACzE,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,4BAA4B;AAC3E,oBAAgB,uBAAuB,QAAQ,8BAA8B;AAC7E,oBAAgB,uBAAuB,QAAQ,6BAA6B;AAC5E,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,eAAe;AAC9D,oBAAgB,uBAAuB,QAAQ,sBAAsB;AACrE,oBAAgB,uBAAuB,QAAQ,mBAAmB,oBAAI;AACtE,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAClE,oBAAgB,uBAAuB,QAAQ,mBAAmB;AAClE,oBAAgB,uBAAuB,QAAQ,qBAAqB;AACpE,oBAAgB,uBAAuB,QAAQ,eAAe;AAC9D,oBAAgB,uBAAuB,QAAQ,YAAY,IAAI,SAAS,uBAAuB;AAC/F,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,gBAAgB;AAC/D,oBAAgB,uBAAuB,QAAQ,oBAAoB,oBAAI;AACvE,oBAAgB,uBAAuB,QAAQ,kBAAkB,oBAAI;AACrE,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,UAAM,WAAW;AAAA,MACf,QAAQ,gBAAgB;AAAA,MACxB,SAAS,CAAC,MAAM;AAAA,MAChB,uBAAuB;AAAA,MACvB,oBAAoB;AAAA,MACpB,WAAW,kBAAkB;AAAA,MAC7B,WAAW;AAAA,MACX,UAAU,YAAY;AAAA,MACtB,kBAAkB;AAAA,MAClB,WAAW,CAAC,MAAM;AAAA,MAClB,eAAe;AAAA,QACb,MAAM;AAAA;AAAA,MAER,gBAAgB,CAAC,MAAM;AAAA,MACvB,oBAAoB;AAAA,MACpB,qBAAqB,CAAC,MAAM;AAAA,MAC5B,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,YAAY;AAAA,QACV,aAAa;AAAA,QACb,QAAQ;AAAA;AAAA,MAEV,qBAAqB;AAAA,MACrB,OAAO;AAAA,MACP,mBAAmB;AAAA;AAErB,QAAI,UAAU;AACZ,aAAO,MAAM,UAAU;AAAA;AAEzB,WAAO,MAAM,kBAAkB,MAAM;AACrC,UAAM,gBAAgB,MAAM,SAAS;AACrC,UAAM,oBAAoB,MAAM,iBAAiB,sBAAsB;AACvE,UAAM,SAAS,IAAI,kBAAkB,uBAAuB;AAC5D,UAAM,eAAe,IAAI,aAAa,uBAAuB;AAC7D,UAAM,aAAa,MAAM,iBAAiB;AAC1C,WAAO;AAAA;AAET,eAAa,kBAAiB,CAAC;AAAA,IAC7B,KAAK;AAAA,IACL,KAAK,gBAAe;AAClB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,KAAK,gBAAe;AAClB,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC;AACrC,aAAO,KAAK,iBAAiB,KAAK,SAAS;AAAA;AAAA,KAE5C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,SAAS;AACxC,aAAO,WAAW,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,MAAM;AAAA;AAAA,KAE/D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB;AAC7B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,GAAG,mBAAmB;AAC5C,WAAK,QAAQ;AACb,WAAK,KAAK,YAAY,KAAK;AAC3B,UAAI,mBAAmB;AACrB,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB;AACzB,aAAO,KAAK,KAAK;AAAA;AAAA,KAElB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,eAAe,MAAM;AAClD,UAAI,IAAI,KAAK,YAAY,gBACrB,IAAI;AACR,UAAI,KAAK,EAAE,SAAS,GAAG;AACrB,YAAI,SAAS,MAAM,UAAU,MAAM,KAAK,WAAW;AACnD,YAAI;AACF,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,KAAK;AACxC,gBAAI,KAAK,EAAE,GAAG,MAAM,EAAE,IAAI;AAAA;AAAA,iBAErB,GAAP;AACA,cAAI,6BAA6B,gBAAgB,MAAM;AAAA;AAAA;AAG3D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,eAAe,SAAS,OAAM;AACnC,UAAI,WAAW,MAAM;AACnB,eAAO;AAAA;AAET,UAAI,KAAK,KAAK,aAAa,SAAS;AACpC,UAAI,CAAC,MAAM,OAAO,aAAa;AAC7B,YAAI,UAAU,WAAW,KAAK,UAAU,OAAO,QAAW;AACxD,eAAK;AAAA,mBACI,UAAU,WAAW,KAAK,UAAU,WAAW,KAAK,CAAC,UAAU,IAAI;AAC5E,eAAK,aAAa,KAAK,iBAAiB,MAAM,KAAK;AAAA;AAErD,aAAK,aAAa,SAAS,mBAAmB;AAAA;AAEhD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,SAAS,MAAM;AAC5C,UAAI,CAAC,SAAS;AACZ,kBAAU;AAAA,iBACD,QAAQ,gBAAgB,QAAQ;AACzC,kBAAU;AAAA,UACR,SAAS;AAAA;AAAA;AAGb,UAAI,QAAQ,QAAQ,SAAS,KAAK,cAC9B,SAAS,YAAY,MAAM,OAAO,OAClC,UAAU,YAAY,MAAM,QAAQ,SACpC,UAAU,YAAY,MAAM,QAAQ,SACpC,UAAU,CAAC,QAAQ,OAAO,SAAS,IAAI,KAAK,IAC5C,UAAU,kBAAiB,QAAO,KAAK;AACzC,YAAI,CAAC,QAAQ,OAAO,SAAS,GAAG;AAC9B,cAAI,KAAK,QAAQ;AACjB,cAAI,MAAM,MAAM;AACd,iBAAK,QAAQ,UAAS;AAAA;AAExB,aAAG,KAAK;AAAA,eACH;AACL,kBAAQ,KAAK;AAAA;AAAA;AAGjB,eAAS,IAAI,GAAG,KAAK,KAAK,YAAY,QAAQ,IAAI,IAAI,KAAK;AACzD,YAAI,MAAM,KAAK,YAAY,IACvB,WAAW,IAAI,WAAW,IAAI,QAAQ,KAAK,IAAI,QAAQ,GAAG,WAAW,YAAY,IAAI,UACrF,WAAW,IAAI,WAAW,IAAI,QAAQ,KAAK,IAAI,QAAQ,GAAG,WAAW,YAAY,IAAI;AACzF,YAAI,WAAW,QAAQ,IAAI,UAAU,WAAW,SAAS,aAAa,WAAW,SAAS,WAAW;AACnG,kBAAQ,IAAI,OAAO;AAAA;AAAA;AAGvB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,QAAQ;AAC7B,eAAS,UAAU;AACnB,aAAO,QAAQ,OAAO,SAAS;AAC/B,aAAO,IAAI,oBAAoB,MAAM,OAAO,eAAe,KAAK,eAAe,QAAQ;AAAA;AAAA,KAExF;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,QAAQ;AACtC,eAAS,UAAU;AACnB,aAAO,QAAQ,OAAO,SAAS;AAC/B,UAAI,mBAAmB,CAAC,OAAO,WAAW,CAAC,OAAO,UAAU,CAAC,OAAO,QAChE,WAAW,mBAAmB,WAAW,YAAY,MAAM,OAAO,UAClE,UAAU,mBAAmB,WAAW,YAAY,MAAM,OAAO,SACjE,UAAU,mBAAmB,WAAW,YAAY,MAAM,OAAO,SACjE,SAAS,YAAY,MAAM,OAAO,OAAO;AAC7C,UAAI,KAAK;AACT,eAAS,QAAQ,KAAK,oBAAoB;AACxC,YAAI,SAAS,WAAW,UAAU,MAAM,OACpC,SAAS,WAAW,SAAS,MAAM,OACnC,mBAAmB,YAAY,KAC/B,SAAS,WAAW,SAAS,MAAM,OACnC,mBAAmB,YAAY;AACnC,YAAI,UAAU,UAAU,QAAQ;AAC9B;AAAO,qBAAS,IAAI,GAAG,KAAK,KAAK,mBAAmB,MAAM,QAAQ,IAAI,IAAI,KAAK;AAC7E,kBAAI,MAAM,KAAK,mBAAmB,MAAM;AACxC,kBAAI,WAAW,QAAQ,IAAI,OAAO,OAAO;AACvC,oBAAI,gBAAgB,oBAAoB,QAAQ,SAAS,KAAK,CAAC,IAAI,UAC/D,gBAAgB,oBAAoB,QAAQ,SAAS,KAAK,CAAC,IAAI;AACnE,oBAAI,iBAAiB,eAAe;AAClC;AAAA;AAEF,mBAAG,KAAK;AAAA;AAAA;AAAA;AAAA;AAKhB,aAAO,IAAI,kBAAkB,MAAM;AAAA;AAAA,KAEpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,GAAG;AAC9B,WAAK,aAAa;AAClB,WAAK,KAAK,wBAAwB,KAAK;AAAA;AAAA,KAExC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,GAAG,IAAI,KAAK;AAC/B,UAAI,UAAU,CAAC;AAAA,QACb,IAAI;AAAA,QACJ,MAAM;AAAA,SACL;AAAA,QACD,IAAI;AAAA,QACJ,MAAM;AAAA;AAER,UAAI,IACA,MAAM,QAAQ,MACd,MAAM,EAAE,IAAI,OACZ,KACA,cAAc,EAAE,UAAU;AAC9B,UAAI,YAAY;AAAA,QACd,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,kBAAkB,QAAQ,IAAI,MAAM,EAAE;AAAA,QACtC,aAAa,EAAE;AAAA,QACf,kBAAkB,QAAQ,IAAI,MAAM,EAAE;AAAA,QACtC,aAAa,EAAE;AAAA,QACf,YAAY;AAAA,QACZ,aAAa;AAAA;AAEf,UAAI,cAAc,UAAU;AAC1B,aAAK;AACL,WAAG,cAAc;AAAA,aACZ;AACL,cAAM,KAAK,MAAM;AACjB,YAAI,QAAQ,EAAE,IAAI,OAAO;AACvB,eAAK;AAAA,eACA;AACL,eAAK,EAAE,aAAa,QAAQ,GAAG,IAAI;AAAA;AAAA;AAGvC,UAAI,MAAM,MAAM;AACd,kBAAU,cAAc;AACxB,oBAAY,qBAAqB;AACjC,UAAE,UAAU,OAAO;AACnB,UAAE,IAAI,MAAM,GAAG;AACf,UAAE,IAAI,QAAQ,GAAG;AACjB,kBAAU,QAAQ,IAAI,gBAAgB,iBAAiB,GAAG;AAC1D,aAAK,cAAc;AACnB,aAAK,iBAAiB;AAAA;AAExB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,YAAY,IAAI;AACxC,8BAAwB,YAAY,KAAK,iBAAiB,WAAW;AACrE,UAAI,IAAI,KAAK,KAAK,YAAY,IAAI;AAClC,2BAAqB,YAAY,KAAK,iBAAiB,EAAE;AAAA;AAAA,KAE1D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,YAAY,IAAI;AACxC,8BAAwB,YAAY,KAAK,iBAAiB,WAAW;AACrE,UAAI,IAAI,KAAK,KAAK,YAAY,IAAI;AAClC,2BAAqB,YAAY,KAAK,iBAAiB,EAAE;AAAA;AAAA,KAE1D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B;AACjC,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,KAAK,mBAAmB;AACxD,UAAI,SAAS,KAAK;AAClB,WAAK,kBAAkB;AACvB,UAAI,KAAK;AACP,aAAK,eAAe,KAAK,IAAI,OAAO;AAAA,aAC/B;AACL,aAAK,eAAe;AACpB,aAAK,SAAS;AAAA;AAEhB,UAAI,mBAAmB;AACrB,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B;AAC/B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,eAAe,IAAI,wBAAwB;AAChD,UAAI,gBAAgB,KAAK,oBAAoB;AAC7C,UAAI,CAAC,eAAe;AAClB,aAAK,kBAAkB;AAAA;AAEzB;AACA,UAAI,CAAC,eAAe;AAClB,aAAK,kBAAkB,OAAO,CAAC;AAAA;AAAA;AAAA,KAGlC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,MAAM,IAAI;AAC7B,UAAI,QAAQ,MAAM;AAChB;AAAA;AAEF,UAAI,KAAK,UAAU,MAAM;AACvB,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,aAAG,KAAK;AAAA;AAAA,aAEL;AACL,WAAG;AAAA;AAEL,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,QAAQ;AACnC,UAAI,OAAO,OAAO;AAClB,UAAI,OAAO,QAAQ;AACjB,eAAO,KAAK,SAAS,eAAe;AAAA,aAC/B;AACL,eAAO,KAAK,SAAS,YAAY;AAAA;AAAA;AAAA,KAGpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,YAAY,QAAQ;AACnD,UAAI,cAAc,QAAQ,WAAW,YAAY,MAAM;AACrD,iBAAS,UAAU;AACnB,YAAI,OAAO,SAAS,cAAc,MAAM,OAAO,CAAC,CAAC,WAAW,UAAU,IAAI,mBAAmB,CAAC,cAAc,CAAC,WAAW,UAAU,IAAI,mBAAmB,CAAC,cAAc,CAAC,YAAY,mBAAmB,CAAC,cAAc,CAAC,MAAM,iBAAiB,CAAC,yBAAyB,gBAAgB;AACvR,kCAAwB,YAAY,KAAK,iBAAiB,WAAW,WAAW,KAAK,iBAAiB,WAAW;AACjH,eAAK,gBAAgB,YAAY,CAAC,WAAW,WAAW,OAAO,cAAc,OAAO,OAAO;AAC3F,cAAI,kBAAkB,WAAW,UAAU;AAC3C,cAAI,iBAAiB,WAAW,UAAU;AAC1C,cAAI,oBAAoB,OAAO,kBAAkB;AAC/C,4BAAgB,qBAAqB,YAAY,MAAM;AAAA;AAEzD,cAAI,mBAAmB,OAAO,kBAAkB;AAC9C,2BAAe,qBAAqB,YAAY,MAAM;AAAA;AAExD,6BAAmB,KAAK,aAAa,SAAU,IAAI;AACjD,mBAAO,WAAW,OAAO,GAAG;AAAA;AAE9B,qBAAW;AACX,cAAI,oBAAoB,OAAO,oBAAoB,gBAAgB,iBAAiB,gBAAgB,YAAY,WAAW,GAAG;AAC5H,iBAAK,eAAe;AAAA;AAEtB,cAAI,mBAAmB,OAAO,oBAAoB,eAAe,iBAAiB,eAAe,YAAY,WAAW,GAAG;AACzH,iBAAK,eAAe;AAAA;AAEtB,iBAAO;AAAA;AAAA;AAGX,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,QAAQ;AAC5C,UAAI,SAAS;AACb,eAAS,UAAU;AACnB,UAAI,QAAQ,KAAK,YAAY,QACzB,eAAe;AACnB,WAAK,MAAM,WAAY;AACrB,iBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,0BAAgB,OAAO,iBAAiB,OAAO,YAAY,IAAI,UAAU,IAAI;AAAA;AAAA;AAGjF,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qCAAqC,IAAI,QAAQ;AACtD,UAAI,KAAK,KAAK,MAAM,KAChB,IAAI,KAAK,iBAAiB;AAC9B,UAAI,GAAG;AACL,YAAI,IAAI,EAAE,YAAY;AACtB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAK,iBAAiB,EAAE,YAAY,IAAI;AAAA;AAAA;AAG5C,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,KAAK,aAAa,eAAe;AAC/D,UAAI,kBAAkB,IAAI,MAAM,MAC5B,SAAS,kBAAkB;AAAA,QAC7B,YAAY;AAAA,QACZ,QAAQ,IAAI;AAAA,QACZ,QAAQ,IAAI;AAAA,QACZ,UAAU,IAAI;AAAA,QACd,UAAU,IAAI;AAAA,QACd,gBAAgB,IAAI,UAAU;AAAA,QAC9B,gBAAgB,IAAI,UAAU;AAAA,UAC5B;AACJ,UAAI,aAAa;AACf,aAAK,KAAK,2BAA2B,QAAQ;AAAA;AAE/C,WAAK,KAAK,oCAAoC,QAAQ;AAAA;AAAA,KAEvD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,QAAQ,KAAK;AACzC,WAAK,KAAK,wBAAwB,QAAQ;AAAA;AAAA,KAE3C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB,UAAU,QAAQ;AAC1C,UAAI,KAAK,SAAS,YAAY,KAAK,YAAY,KAAK,gBAAgB,YAAY;AAChF,eAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,aAAK,OAAO,GAAG,IAAI,MAAM;AAAA;AAAA;AAAA,KAG5B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gBAAgB,SAAS,YAAY,SAAS;AACnD,UAAI,KAAK,aAAa,SAAS,sBAAsB,MAAM;AACzD,qBAAa,cAAc,KAAK,aAAa,SAAS,SAAS;AAC/D,aAAK,aAAa,SAAS,mBAAmB;AAAA;AAEhD,UAAI,OAAO,KAAK,MAAM;AACtB,UAAI,CAAC,KAAK,iBAAiB,OAAO;AAChC,YAAI,MAAM;AAAA,UACR,IAAI;AAAA,UACJ,WAAW;AAAA,UACX,aAAa;AAAA,UACb,UAAU;AAAA,UACV,MAAM;AAAA;AAER,aAAK,iBAAiB,QAAQ;AAC9B,YAAI,KAAK,iBAAiB;AACxB,cAAI,kBAAkB,KAAK,SAAS,gBAAgB,MAAM;AAAA,eACrD;AACL,cAAI,kBAAkB,KAAK,aAAa;AAAA,YACtC;AAAA,YACA,QAAQ;AAAA;AAAA;AAGZ,aAAK,KAAK,sBAAsB;AAAA,UAC9B,IAAI;AAAA;AAAA,aAED;AACL,YAAI,SAAS;AACX,eAAK,iBAAiB,MAAM,kBAAkB,KAAK,aAAa;AAAA,YAC9D;AAAA,YACA,WAAW;AAAA,YACX,QAAQ;AAAA;AAAA;AAAA;AAId,aAAO,KAAK,iBAAiB;AAAA;AAAA,KAE9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,WAAW,gBAAgB,KAAK;AAC7D,UAAI,KAAK,iBAAiB,YAAY;AACpC,YAAI,OAAO,KAAK,iBAAiB,WAAW,KAAK;AACjD,eAAO,QAAQ,OAAO,KAAK,OAAO;AAAA;AAAA;AAAA,KAGrC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,WAAW,gBAAgB,KAAK,MAAM;AACnE,UAAI,KAAK,iBAAiB,YAAY;AACpC,aAAK,iBAAiB,WAAW,KAAK,kBAAkB,KAAK,iBAAiB,WAAW,KAAK,mBAAmB;AACjH,aAAK,iBAAiB,WAAW,KAAK,gBAAgB,OAAO;AAAA;AAAA;AAAA,KAGhE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,IAAI;AACpC,aAAO,KAAK,iBAAiB,MAAM,KAAK,iBAAiB,IAAI,KAAK;AAAA;AAAA,KAEnE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,IAAI,eAAe;AAC1C,UAAI,SAAS;AACb,WAAK,mBAAmB,IAAI;AAC5B,UAAI,OAAO,eAAc,KAAK;AAC5B,YAAI,KAAK,OAAO,MAAM;AACtB,eAAO,gBAAgB,KAAK;AAC5B,eAAO,OAAO,iBAAiB;AAC/B,eAAO,SAAS,OAAO;AACvB,eAAO,KAAK,wBAAwB;AAAA,UAClC,IAAI;AAAA;AAEN,YAAI,OAAO,eAAe;AACxB,iBAAO,eAAe;AAAA;AAAA;AAG1B,WAAK,uBAAuB,IAAI,IAAI;AACpC,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAgB,SAAS,UAAU,eAAe;AACvD,UAAI,YAAY,KAAK,MAAM;AAC3B,UAAI,KAAK,iBAAiB,YAAY;AACpC,aAAK,iBAAiB,WAAW,WAAW;AAC5C,aAAK,SAAS,cAAc,WAAW;AACvC,YAAI,kBAAkB,MAAM;AAC1B,iBAAO,KAAK,WAAW;AAAA;AAAA;AAG3B,aAAO;AAAA,QACL,GAAG,oBAAI;AAAA,QACP,GAAG,oBAAI;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,WAAW;AACtC,UAAI,QAAQ,KAAK,iBAAiB;AAClC,UAAI,SAAS,MAAM;AACjB,eAAO,MAAM,YAAY;AAAA,aACpB;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,WAAW;AACvC,UAAI,SAAS;AACb,UAAI,YAAY;AAChB,UAAI,QAAQ,KAAK,iBAAiB;AAClC,UAAI,YAAY,oBAAmB,GAAG;AACpC,YAAI,EAAE,SAAS,MAAM;AACnB,cAAI,SAAS,OAAO,iBAAiB,EAAE;AACvC,cAAI,UAAU,MAAM;AAClB,sBAAU,KAAK;AAAA,cACb,GAAG,OAAO,gBAAgB;AAAA,cAC1B,GAAG,OAAO,gBAAgB;AAAA;AAE5B,uBAAU;AAAA;AAAA;AAAA;AAIhB,UAAI,SAAS,MAAM;AACjB,kBAAU,KAAK;AAAA,UACb,GAAG,MAAM,gBAAgB,KAAK;AAAA,UAC9B,GAAG,MAAM,gBAAgB;AAAA;AAE3B,kBAAU;AAAA;AAEZ,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,WAAW;AAChD,UAAI,KAAK,MAAM;AACf,UAAI,UAAU;AAAA,QACZ,GAAG,GAAG;AAAA,QACN,GAAG,GAAG;AAAA,QACN,IAAI;AAAA,QACJ,IAAI;AAAA;AAEN,cAAQ,WAAW,SAAU,UAAU;AACrC,kBAAU,YAAY,SAAS,SAAS,GAAG,SAAS;AAAA;AAEtD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,OAAO,WAAW;AAClD,cAAQ,WAAW,SAAU,UAAU;AACrC,gBAAQ,YAAY,OAAO,SAAS,GAAG,SAAS;AAAA;AAElD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,QAAQ;AAC5C,UAAI,KAAK,OAAO,IAAI;AACpB,UAAI,iBAAiB,KAAK,OAAO,GAAG;AACpC,SAAG,YAAY,KAAK,MAAM,GAAG;AAC7B,SAAG,KAAK,QAAQ,KAAK;AACrB,UAAI,KAAK,IAAI,SAAS,MAAM;AAC5B,yBAAmB,gBAAgB;AACnC,UAAI,OAAO,MAAM;AACf,aAAK,gBAAgB,IAAI,OAAO,MAAM;AAAA;AAExC,sBAAgB,KAAK,oBAAoB,GAAG,WAAW;AACvD,UAAI,CAAC,KAAK,iBAAiB;AACzB,aAAK,eAAe,IAAI;AAAA,UACtB,WAAW,KAAK;AAAA;AAAA;AAGpB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sCAAsC,MAAM,oBAAoB;AACrE,UAAI,OAAS,uBAAqB,KAAK,cAAc,MAAM,MAAM,SAC7D,MAAM,MACN,KAAK,MACL,IAAI,MACJ,KAAK;AACT,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAI,KAAK,KAAK,kBAAkB,KAAK;AACrC,YAAI,IAAI;AACN,cAAI,GAAG,WAAW;AAChB,kBAAM,GAAG;AAAA;AAEX,cAAI,GAAG,UAAU;AACf,iBAAK,GAAG;AAAA;AAEV,cAAI,GAAG,SAAS;AACd,iBAAK,GAAG;AAAA;AAEV,cAAI,GAAG,QAAQ;AACb,gBAAI,GAAG;AAAA;AAAA;AAAA;AAIb,aAAO;AAAA,QACL,WAAW,MAAM,MAAM,CAAC,IAAI;AAAA,QAC5B,SAAS,KAAK,KAAK,CAAC,GAAG;AAAA;AAAA;AAAA,KAG1B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI,WAAW;AACxC,UAAI,OAAO,KAAK,MAAM;AACtB,WAAK,aAAa;AAAA,QAChB;AAAA,QACA,QAAQ;AAAA,QACR;AAAA;AAEF,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B;AAClC,UAAI,YAAY,QACZ;AACJ,WAAK,QAAQ,KAAK,kBAAkB;AAClC,aAAK,SAAS,eAAe,MAAM;AAAA;AAErC,WAAK,SAAS;AACd,WAAK,QAAQ,KAAK,kBAAkB;AAClC,aAAK,QAAQ,KAAK,iBAAiB,MAAM,IAAI,WAAW;AAAA;AAE1D,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,IAAI,GAAG,GAAG;AAC3C,UAAI,KAAK,KAAK,MAAM;AACpB,WAAK,SAAS,YAAY,IAAI,GAAG;AACjC,aAAO,KAAK,QAAQ;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,IAAI,WAAW,2BAA2B;AAChE,UAAI,IAAI;AAAA,QACN,GAAG,oBAAI;AAAA,QACP,GAAG,oBAAI;AAAA;AAET,UAAI,eAAe,uBAAsB,IAAI;AAC3C,WAAG,EAAE,QAAQ,SAAU,GAAG;AACxB,iBAAO,EAAE,EAAE,IAAI;AAAA;AAEjB,WAAG,EAAE,QAAQ,SAAU,GAAG;AACxB,iBAAO,EAAE,EAAE,IAAI;AAAA;AAAA;AAGnB,UAAI,CAAC,KAAK,iBAAiB;AACzB,YAAI,KAAK,KAAK,MAAM;AACpB,YAAI,MAAM,MAAM;AACd,cAAI,aAAa,KAAK,uBAAuB;AAC7C,cAAI,aAAa,MAAM;AACrB,wBAAY;AAAA;AAEd,cAAI,CAAC,2BAA2B;AAC9B,qBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,mBAAK,aAAa;AAAA,gBAChB,MAAM,KAAK,MAAM,WAAW;AAAA,gBAC5B,QAAQ;AAAA,gBACR;AAAA;AAAA;AAAA;AAIN,uBAAa,KAAK,OAAO,OAAO,IAAI,WAAW;AAC/C,cAAI,WAAW,SAAS,GAAG;AACzB,qBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,2BAAa,KAAK,OAAO,OAAO,KAAK,MAAM,WAAW,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAK9E,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,UAAU;AAC3C,UAAI,QAAO,SAAS;AACpB,UAAI,OAAM;AACR,aAAK,gBAAgB,UAAU;AAAA;AAEjC,4BAAsB,KAAK,iBAAiB,SAAS,YAAY;AACjE,eAAS,MAAM,KAAK,oBAAoB;AACtC,YAAI,YAAY,KAAK,mBAAmB;AACxC,YAAI,WAAW;AACb,cAAI,eAAe;AACnB,mBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AAChD,gBAAI,UAAU,OAAO,UAAU;AAC7B,2BAAa,KAAK,UAAU;AAAA;AAAA;AAGhC,eAAK,mBAAmB,MAAM;AAAA;AAEhC,YAAI,KAAK,mBAAmB,IAAI,SAAS,GAAG;AAC1C,iBAAO,KAAK,mBAAmB;AAAA;AAAA;AAGnC,WAAK,KAAK,sCAAsC;AAAA;AAAA,KAEjD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,UAAU;AAC5C,UAAI,SAAS,iBAAiB,SAAS,YAAY,WAAW,GAAG;AAC/D,aAAK,eAAe;AACpB,eAAO;AAAA,aACF;AACL,eAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,QAAQ;AACrC,UAAI,SAAS;AACb,UAAI,WAAW,OAAO,WAAW,WAAW,KAAK,gBAAgB,IAAI,UAAU;AAC/E,UAAI,UAAU;AACZ,YAAI,QAAQ,SAAS;AACrB,YAAI,sBAAsB,SAAS,YAAY;AAC/C,gBAAQ,qBAAqB,SAAU,YAAY;AACjD,mBAAS,qBAAqB,YAAY,MAAM;AAAA;AAElD,aAAK,mBAAmB;AACxB,iBAAS;AACT,gBAAQ,qBAAqB,SAAU,YAAY;AACjD,iBAAO,iBAAiB,YAAY;AAAA,YAClC,OAAO;AAAA,YACP,kBAAkB;AAAA;AAAA;AAGtB,YAAI,SAAS,MAAM;AACjB,eAAK,eAAe;AAAA;AAAA;AAGxB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI,QAAQ,iBAAiB;AACvD,wBAAkB,mBAAmB;AACrC,UAAI,IAAI,OAAO,IAAI;AACnB,aAAO,GAAG,UAAU;AACpB,UAAI,KAAK,OAAO;AAAA,QACd,SAAS;AAAA,SACR;AACH,aAAO,KAAK,sBAAsB;AAAA;AAAA,KAEnC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,IAAI,WAAW,iBAAiB;AAC3D,UAAI,UAAU;AACd,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AAChD,gBAAQ,KAAK,KAAK,YAAY,IAAI,UAAU,IAAI;AAAA;AAElD,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,UAAI,SAAS;AACb,WAAK,SAAS,WAAY;AACxB,eAAO,qBAAqB;AAC5B,eAAO,mBAAmB;AAC1B,eAAO,gBAAgB;AACvB,eAAO,SAAS;AAChB,eAAO,OAAO;AACd,eAAO,aAAa;AACpB,eAAO,YAAY,SAAS;AAAA;AAAA;AAAA,KAG/B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,mBAAmB;AACxB,WAAK;AACL,WAAK;AACL,WAAK,gBAAgB,SAAS;AAC9B,WAAK,gBAAgB,SAAS;AAC9B,WAAK,iBAAiB;AACtB,WAAK,eAAe;AAAA;AAAA,KAErB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB,IAAI;AAC/B,aAAO,KAAK,mBAAmB,KAAK,MAAM,QAAQ;AAAA;AAAA,KAEnD;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAM;AAChC,aAAO,KAAK,gBAAgB,IAAI;AAAA;AAAA,KAEjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,UAAU,OAAM;AAC9C,UAAI,SAAS,MAAM;AACjB,aAAK,gBAAgB,UAAU,SAAS;AAAA;AAE1C,eAAS,OAAO;AAChB,WAAK,gBAAgB,IAAI,OAAM;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,QAAQ,iBAAiB;AAC/C,UAAI;AACF,YAAI,KAAK,KAAK,yBAAyB,QAAQ,kBAC3C,MAAM,KAAK,eAAe;AAC9B,aAAK,oBAAoB,KAAK;AAC9B,eAAO;AAAA,eACA,cAAP;AACA,YAAI;AACJ;AAAA;AAAA;AAAA,KAGH;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kCAAkC,QAAQ,iBAAiB;AAChE,UAAI,OAAO,OAAO,IAAI;AACtB,UAAI,iBAAiB;AACnB,eAAO,MAAM;AAAA;AAEf,UAAI,KAAK;AACT,UAAI,GAAG,QAAQ;AACb,YAAI,GAAG,OAAO,UAAU;AACtB,aAAG,iBAAiB,GAAG;AAAA;AAAA;AAG3B,UAAI,GAAG,QAAQ;AACb,YAAI,GAAG,OAAO,UAAU;AACtB,aAAG,iBAAiB,GAAG;AAAA;AAAA;AAG3B,UAAI,OAAO,OAAO;AAChB,WAAG,iBAAiB,KAAK,YAAY,OAAO,MAAM;AAClD,WAAG,iBAAiB,KAAK,YAAY,OAAO,MAAM;AAAA;AAEpD,UAAI,GAAG,kBAAkB,MAAM;AAC7B,YAAI,GAAG,eAAe,UAAU;AAC9B,gBAAM;AAAA;AAER,YAAI,CAAC,GAAG,MAAM;AACZ,aAAG,OAAO,GAAG,eAAe;AAAA;AAE9B,YAAI,GAAG,eAAe,mBAAmB;AACvC,aAAG,WAAW,GAAG,YAAY;AAC7B,mBAAS,IAAI,GAAG,IAAI,GAAG,eAAe,kBAAkB,QAAQ,IAAI,GAAG,KAAK;AAC1E,eAAG,SAAS,KAAK,GAAG,eAAe,kBAAkB;AAAA;AAAA;AAGzD,YAAI,GAAG,eAAe,OAAO;AAC3B,aAAG,QAAQ,GAAG,eAAe;AAAA;AAAA,aAE1B;AACL,YAAI,GAAG,UAAU,MAAM;AACrB,gBAAM;AAAA;AAAA;AAGV,UAAI,GAAG,kBAAkB,MAAM;AAC7B,YAAI,GAAG,eAAe,UAAU;AAC9B,gBAAM;AAAA;AAAA,aAEH;AACL,YAAI,GAAG,UAAU,MAAM;AACrB,gBAAM;AAAA;AAAA;AAGV,UAAI,GAAG,kBAAkB,GAAG,gBAAgB;AAC1C,YAAI,CAAC,YAAY,GAAG,gBAAgB,GAAG,iBAAiB;AACtD,gBAAM;AAAA;AAAA;AAGV,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,QAAQ;AACrC,aAAO,KAAK,SAAS,KAAK;AAC1B,UAAI,IAAI,IAAI,WAAW,MAAM;AAC7B,2BAAqB,GAAG,KAAK,iBAAiB,EAAE,WAAW,KAAK,iBAAiB,EAAE;AACnF,WAAK,iBAAiB;AACtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,6BAA6B,KAAK,QAAQ,eAAe;AAC9D,eAAS,UAAU;AACnB,UAAI,CAAC,IAAI,mBAAmB;AAC1B,aAAK,YAAY,KAAK;AAAA;AAExB,UAAI,UAAU;AACd,UAAI,UAAU,GAAG,oBAAoB;AACrC,WAAK,QAAQ,IAAI;AACjB,UAAI,UAAU;AAAA,QACZ,YAAY;AAAA,QACZ,QAAQ,IAAI;AAAA,QACZ,QAAQ,IAAI;AAAA,QACZ,UAAU,IAAI;AAAA,QACd,UAAU,IAAI;AAAA,QACd,gBAAgB,IAAI,UAAU;AAAA,QAC9B,gBAAgB,IAAI,UAAU;AAAA;AAEhC,WAAK,KAAK,2BAA2B,SAAS;AAC9C,UAAI,CAAC,OAAO,4BAA4B,OAAO,cAAc,OAAO;AAClE,aAAK,KAAK,kBAAkB,SAAS;AAAA;AAAA;AAAA,KAGxC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,IAAI,SAAS;AAC9C,UAAI,SAAS;AACb,UAAI,OAAO,eAAc,KAAK;AAC5B,YAAI,KAAK,OAAO,MAAM,MAClB,MAAM,OAAO,mBAAmB,KAChC,GACA;AACJ,YAAI,KAAK;AACP,eAAK,IAAI,GAAG,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK;AACxC,mBAAO,eAAe,IAAI;AAAA;AAAA;AAG9B,eAAO,OAAO,mBAAmB;AAAA;AAEnC,UAAI,SAAS;AACX,aAAK,uBAAuB,IAAI,IAAI;AAAA;AAEtC,WAAK;AACL,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,QAAQ,iBAAiB;AAC/D,UAAI,IAAI,OAAO,IAAI;AACnB,aAAO,GAAG;AACV,QAAE,WAAW,EAAE,YAAY;AAC3B,UAAI,MAAM,KAAK,6BAA6B,EAAE;AAC9C,QAAE,WAAW,EAAE,YAAY,IAAI,UAAU;AACzC,QAAE,SAAS,EAAE,UAAU,IAAI,QAAQ;AACnC,UAAI,iBAAiB,EAAE,kBAAkB;AACzC,UAAI,OAAO;AAAA,QACT,KAAK,OAAO,IAAI;AAAA,QAChB,gBAAgB,EAAE;AAAA,QAClB;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA;AAEZ,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,UAAU,QAAQ;AAClD,UAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAClF,UAAI,OAAO,KAAK,wBAAwB;AACxC,UAAI,MAAM,IAAI,eAAe,UAAU,MAAM;AAC7C,WAAK,gBAAgB,KAAK;AAC1B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,UAAU;AAC7C,yBAAmB,KAAK,iBAAiB,SAAU,GAAG;AACpD,eAAO,MAAM;AAAA;AAAA;AAAA,KAGhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,UAAU;AAC7C,yBAAmB,KAAK,iBAAiB,SAAU,GAAG;AACpD,eAAO,MAAM;AAAA;AAAA;AAAA,KAGhB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,UAAU,QAAQ;AAClD,UAAI,UAAU,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAClF,UAAI,OAAO,KAAK,wBAAwB;AACxC,UAAI,MAAM,IAAI,eAAe,UAAU,MAAM;AAC7C,WAAK,gBAAgB,KAAK;AAC1B,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,QAAQ,iBAAiB;AAC/D,UAAI,IAAI,OAAO,IAAI;AACnB,aAAO,GAAG;AACV,QAAE,WAAW,EAAE,YAAY;AAC3B,UAAI,iBAAiB,EAAE,kBAAkB;AACzC,UAAI,OAAO;AAAA,QACT,KAAK,OAAO,IAAI;AAAA,QAChB,gBAAgB,EAAE;AAAA,QAClB;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA;AAEZ,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,IAAI,iBAAiB;AACxC,aAAO,KAAK,YAAY,IAAI,OAAO;AAAA;AAAA,KAEpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,IAAI,iBAAiB;AACxC,aAAO,KAAK,YAAY,IAAI,MAAM;AAAA;AAAA,KAEnC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI,OAAO,qBAAqB;AAC1D,UAAI,UAAU,UAAU;AACxB,UAAI,eAAe;AACnB,UAAI,qBAAqB;AACvB,uBAAe,uBAAsB,IAAI;AACvC,aAAG,WAAW,SAAS,MAAM;AAAA;AAAA;AAGjC,UAAI,KAAK,KAAK,MAAM;AACpB,WAAK,WAAW,IAAI,SAAU,KAAK;AACjC,YAAI,WAAW,qBAAqB;AAClC,cAAI,OAAO,IAAI,aAAa,KAAK,IAAI;AACrC,cAAI,IAAI,UAAU,MAAM,aAAa;AACnC,gBAAI,WAAW;AAAA;AAAA,eAEZ;AACL,cAAI,WAAW;AAAA;AAAA,SAEhB;AACH,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,IAAI,iBAAiB;AACjD,UAAI,eAAe;AACnB,UAAI,iBAAiB;AACnB,uBAAe,uBAAsB,IAAI;AACvC,cAAI,QAAQ,GAAG;AACf,aAAG,WAAW,CAAC;AAAA;AAAA;AAGnB,WAAK,WAAW,IAAI,SAAU,KAAK;AACjC,YAAI,QAAQ,IAAI;AAChB,YAAI,WAAW,CAAC;AAAA,SACf;AAAA;AAAA,KAEJ;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI,MAAM,cAAc;AACjD,UAAI,OAAO,KAAK,MAAM;AACtB,UAAI,YAAY,KAAK,mBAAmB;AACxC,UAAI,aAAa,UAAU,QAAQ;AACjC,iBAAS,IAAI,GAAG,KAAK,UAAU,QAAQ,IAAI,IAAI,KAAK;AAClD,mBAAS,IAAI,GAAG,KAAK,UAAU,GAAG,YAAY,QAAQ,IAAI,IAAI,KAAK;AACjE,gBAAI,SAAS,KAAK,UAAU,GAAG,YAAY;AAC3C,gBAAI,QAAQ;AACV;AAAA;AAAA;AAGJ,cAAI,cAAc;AAChB,yBAAa,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,KAK9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,gCAAgC,IAAI,MAAM;AAC/C,WAAK,iBAAiB,IAAI,IAAI,OAAO,IAAI;AACzC,UAAI,KAAK,UAAU;AACjB,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,cAAI,KAAK,yBAAyB,KAAK,SAAS;AAChD,aAAG,GAAG,QAAQ,MAAM;AAAA;AAEtB,aAAK,iBAAiB,IAAI,IAAI,WAAW;AAAA;AAAA;AAAA,KAG5C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iCAAiC,OAAO;AAC7C,eAAS,KAAK,OAAO;AACnB,aAAK,uBAAuB,GAAG,MAAM;AAAA;AAAA;AAAA,KAGxC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B,IAAI,MAAM;AAC7C,WAAK,eAAe,IAAI,IAAI,OAAO,IAAI;AACvC,UAAI,KAAK,UAAU;AACjB,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,cAAI,KAAK,yBAAyB,KAAK,SAAS;AAChD,aAAG,GAAG,QAAQ,MAAM;AAAA;AAEtB,aAAK,eAAe,IAAI,IAAI,WAAW;AAAA;AAAA;AAAA,KAG1C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,OAAO;AAC3C,eAAS,KAAK,OAAO;AACnB,aAAK,qBAAqB,GAAG,MAAM;AAAA;AAAA;AAAA,KAGtC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,IAAI,gBAAgB;AAC1C,aAAO,mBAAmB,eAAe,KAAK,kBAAkB,MAAM,KAAK,gBAAgB;AAAA;AAAA,KAE5F;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,IAAI;AACpC,aAAO,KAAK,iBAAiB,IAAI;AAAA;AAAA,KAElC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,IAAI;AAClC,aAAO,KAAK,eAAe,IAAI;AAAA;AAAA,KAEhC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,GAAG;AAChC,eAAS,KAAK,GAAG;AACf,aAAK,SAAS,KAAK,EAAE;AAAA;AAEvB,UAAI,EAAE,WAAW;AACf,aAAK,aAAa,EAAE;AAAA;AAEtB,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B;AAChC,WAAK,WAAW,OAAO,IAAI,KAAK;AAChC,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,8BAA8B;AACnC,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,YAAY,OAAO,SAAS,mBAAmB,iBAAiB;AAC9F,UAAI,iBAAiB,WAAW,QAAQ,UAAU,MAC9C,SACA,oBAAoB,iBAAiB,WAAW,QAAQ,OAAO,WAAW,YAAY,WAAW,UAAU,OAAO,WAClH,mBAAmB,iBAAiB,WAAW,QAAQ,OAAO,aAAa,WAAW,UAAU,QAChG,YAAY,KAAK,MAAM;AAC3B,UAAI,WAAW,QAAQ,QAAQ;AAC7B,YAAI,WAAW,QAAQ,OAAO,GAAG,cAAc,WAAW;AACxD,oBAAU,WAAW,QAAQ,OAAO;AAAA,eAC/B;AACL,qBAAW,QAAQ,OAAO,GAAG,qBAAqB,YAAY;AAC9D,oBAAU,KAAK,sBAAsB;AAAA,YACnC,SAAS;AAAA,YACT,UAAU,kBAAkB,YAAY;AAAA,YACxC,QAAQ,gBAAgB,YAAY;AAAA,YACpC,YAAY;AAAA,cACV,iBAAiB;AAAA;AAAA;AAAA;AAAA,aAIlB;AACL,kBAAU,KAAK,sBAAsB;AAAA,UACnC,SAAS;AAAA,UACT,UAAU,kBAAkB,YAAY;AAAA,UACxC,QAAQ,gBAAgB,YAAY;AAAA,UACpC,YAAY;AAAA,YACV,iBAAiB;AAAA;AAAA;AAAA;AAIvB,cAAQ,gBAAgB;AACxB,iBAAW,QAAQ,SAAS;AAAA,QAC1B,IAAI;AAAA,QACJ,YAAY;AAAA;AAEd,WAAK,sBAAsB,mBAAmB,WAAW,YAAY,SAAS;AAC9E,uBAAiB,qBAAqB,YAAY,MAAM;AACxD,cAAQ,cAAc,CAAC;AACvB,iBAAW,UAAU,SAAS;AAC9B,uBAAiB,YAAY;AAC7B,uBAAiB,WAAW;AAC5B,iBAAW,WAAW;AACtB,WAAK,WAAW;AAAA;AAAA,KAEjB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,2BAA2B,YAAY,OAAO;AACnD,UAAI,WAAW,WAAW,QAAQ,WAAW,QAAQ,UAAU,MAAM;AACnE;AAAA;AAEF,UAAI,kBAAkB,WAAW,QAAQ,OAAO,WAAW,SACvD,oBAAoB,WAAW,QAAQ,OAAO,WAAW,WACzD,YAAY,WAAW,QAAQ,OAAO,GAAG;AAC7C,iBAAW,UAAU,SAAS,WAAW,QAAQ,OAAO;AACxD,aAAO,WAAW,QAAQ,OAAO,WAAW;AAC5C,WAAK,sBAAsB,WAAW,mBAAmB,YAAY,iBAAiB;AACtF,iBAAW,QAAQ,OAAO,GAAG,qBAAqB,YAAY;AAC9D,iBAAW,QAAQ,OAAO,WAAW,cAAc;AACnD,UAAI,WAAW,aAAa;AAC1B,mBAAW,QAAQ,OAAO,WAAW,WAAW;AAAA;AAElD,iBAAW,QAAQ,SAAS;AAC5B,UAAI,iBAAiB,WAAW,SAAS,SAAU,GAAG;AACpD,eAAO,KAAK;AAAA,aACP,IAAI;AACT,mBAAW,QAAQ,SAAS;AAAA;AAAA;AAAA,KAG/B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,YAAY,OAAO,YAAY,YAAY,OAAO;AACtF,UAAI,eAAe,OAAO;AACxB,YAAI,UAAU,GAAG;AACf,qBAAW,WAAW;AACtB,qBAAW,SAAS;AAAA,mBACX,UAAU,GAAG;AACtB,qBAAW,WAAW;AACtB,qBAAW,SAAS;AAAA;AAEtB,gCAAwB,YAAY,KAAK,iBAAiB;AAC1D,6BAAqB,YAAY,KAAK,iBAAiB;AAAA;AAAA;AAAA,KAG1D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,SAAS;AAChC,aAAO,KAAK,aAAa,SAAS;AAAA;AAAA,KAEnC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,IAAI;AAC9B,aAAO,KAAK,aAAa,YAAY;AAAA;AAAA,KAEtC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,kBAAkB,QAAQ;AAC/B,aAAO,KAAK,aAAa,SAAS;AAAA;AAAA,KAEnC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,OAAO;AAChC,UAAI;AACJ,eAAS,OAAO,UAAU,QAAQ,KAAK,IAAI,MAAM,OAAO,IAAI,OAAO,IAAI,IAAI,OAAO,GAAG,OAAO,MAAM,QAAQ;AACxG,WAAG,OAAO,KAAK,UAAU;AAAA;AAE3B,aAAQ,sBAAqB,KAAK,cAAc,WAAW,MAAM,oBAAoB,CAAC,OAAO,OAAO,OAAO;AAAA;AAAA,KAE5G;AAAA,IACD,KAAK;AAAA,IACL,OAAO,uBAAuB,OAAO;AACnC,WAAK,aAAa,cAAc;AAAA;AAAA,KAEjC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO;AACjC,WAAK,aAAa,YAAY;AAAA;AAAA,KAE/B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO;AACjC,WAAK,aAAa,YAAY;AAAA;AAAA,KAE/B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,OAAO,eAAe,gBAAgB,gBAAgB;AAChF,aAAO,KAAK,aAAa,YAAY,OAAO,eAAe,gBAAgB;AAAA;AAAA,KAE5E;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,eAAe,gBAAgB;AAC7D,WAAK,aAAa,gBAAgB,eAAe,gBAAgB;AAAA;AAAA,KAElE;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,OAAO,IAAI,gBAAgB;AACzD,WAAK,aAAa,gBAAgB,OAAO,gBAAgB;AACzD,WAAK,eAAe,IAAI,KAAK;AAC7B,WAAK,aAAa;AAAA,QAChB,QAAQ;AAAA,QACR,MAAM,KAAK,MAAM;AAAA;AAAA;AAAA,KAGpB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,UAAU,QAAQ;AAC/C,mDAA6C,IAAI;AAC/C,YAAI,MAAM;AACV,YAAI,OAAO,yBAAyB,MAAM;AACxC,mBAAS,KAAI,GAAG,KAAI,GAAG,YAAY,QAAQ,MAAK;AAC9C,gBAAI,GAAG,YAAY,IAAG,aAAa,OAAO,yBAAyB,GAAG,YAAY,IAAG,aAAa,OAAO,uBAAuB;AAC9H,oBAAM;AACN;AAAA;AAAA;AAAA;AAIN,eAAO,GAAG,YAAY;AAAA;AAExB,eAAS,UAAU;AACnB,UAAI,YAAY,OAAO,WACnB,SAAS,CAAE,QAAO,WAAW;AACjC,UAAI,CAAC,aAAa,SAAS,cAAc,WAAW;AAClD,YAAI,OAAO,KAAK,SAAS,YAAY,SAAS;AAC9C,YAAI,KAAK,OAAO,SAAS;AAAA,UACvB,GAAG,OAAO,OAAO;AAAA,UACjB,GAAG,OAAO,OAAO;AAAA,YACf;AAAA,UACF,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA;AAEV,YAAI,MAAM,MAAM;AACd,cAAI,KAAK,OAAO;AAChB,cAAI,MAAM,MAAM;AACd,gBAAI,eAAe;AAAA,cACjB;AAAA,cACA,IAAI;AAAA,cACJ,SAAS;AAAA,cACT;AAAA;AAEF,gBAAI,UAAU,KAAK,OAAO,gBAAgB,aAAa,SAAS,YAAY,SAAS,GAAG;AACtF,kBAAI,MAAM,oCAAoC,WAC1C,OAAO,IAAI,UAAU,OAAO,WAAW,IAAI,GAC3C,MAAM,SAAS,IAAI,IAAI,WAAW,IAAI,UACtC,QAAQ,KAAK,SAAS,YAAY;AACtC,2BAAa,QAAQ,SAAS,IAAI,IAAI;AACtC,2BAAa,aAAa;AAC1B,2BAAa,MAAM;AACnB,2BAAa,MAAM;AACnB,2BAAa,WAAW,IAAI,UAAU;AACtC,2BAAa,YAAY,KAAK,cAAc;AAAA,uBACnC,SAAS,YAAY,SAAS,GAAG;AAC1C,2BAAa,aAAa,SAAS,YAAY;AAAA;AAEjD,yBAAa,WAAW,KAAK,cAAc,SAAS;AACpD,iBAAK,KAAK,OAAO,sBAAsB,SAAS,SAAS;AAAA;AAE3D,mBAAS,SAAS,QAAQ,IAAI,KAAK,OAAO,uBAAuB,WAAW,SAAS;AACrF,eAAK,eAAe,UAAU,SAAS;AACvC,mBAAS,YAAY;AACrB,mBAAS,KAAK,SAAS,UAAU;AAC/B,gBAAI,SAAS,SAAS,eAAe,IAAI;AACvC,kBAAI,KAAK,SAAS,SAAS;AAC3B,kBAAI,GAAG,aAAa;AAClB,yBAAS,kBAAkB,KAAK,KAAK,YAAY,IAAI,SAAS,UAAU,SAAS,iBAAiB,SAAS,2BAA2B;AACtI,qBAAK,cAAc,IAAI,SAAS,kBAAkB,IAAI;AAAA,kBACpD,MAAM;AAAA,kBACN,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,YAAY,QAAQ;AACnD,UAAI,CAAC,KAAK,mBAAmB,WAAW,YAAY,OAAO;AACzD,iBAAS,UAAU;AACnB,YAAI,YAAY,OAAO;AACvB,YAAI,aAAa,QAAQ,cAAc,WAAW,eAAe;AAC/D;AAAA;AAEF,YAAI,aAAa,QAAQ,cAAc,WAAW,eAAe;AAC/D,eAAK,OAAO,YAAY,YAAY;AACpC,cAAI,iBAAiB;AAAA,YACnB,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA;AAER,mBAAS,KAAK,WAAW,UAAU;AACjC,gBAAI,WAAW,SAAS,eAAe,IAAI;AACzC,kBAAI,MAAM,WAAW,SAAS;AAC9B,kBAAI,IAAI,aAAa;AACnB,2BAAW,kBAAkB,KAAK,KAAK,YAAY,KAAK,WAAW,WAAW,WAAW,iBAAiB,WAAW,2BAA2B;AAChJ,+BAAe,OAAO,KAAK,IAAI,eAAe,MAAM,WAAW,kBAAkB,GAAG;AACpF,+BAAe,OAAO,KAAK,IAAI,eAAe,MAAM,WAAW,kBAAkB,GAAG;AACpF,+BAAe,OAAO,KAAK,IAAI,eAAe,MAAM,WAAW,kBAAkB,GAAG;AACpF,+BAAe,OAAO,KAAK,IAAI,eAAe,MAAM,WAAW,kBAAkB,GAAG;AAAA;AAAA;AAAA;AAI1F,cAAI,YAAY,WAAW,KAAK,WAAW,gBAAgB,eAAe,OAAO,GAC7E,eAAe,WAAW,KAAK,WAAW,gBAAgB,eAAe,MACzE,WAAW;AAAA,YACb,MAAM,KAAK,IAAI,WAAW,UAAU,OAAO,OAAQ,aAAY,eAAe,eAAe;AAAA,YAC7F,MAAM,KAAK,IAAI,WAAW,UAAU,OAAO,OAAQ,aAAY,eAAe,eAAe;AAAA,YAC7F,MAAM,KAAK,IAAI,WAAW,UAAU,OAAO,OAAQ,aAAY,eAAe,eAAe;AAAA,YAC7F,MAAM,KAAK,IAAI,WAAW,UAAU,OAAO,OAAQ,aAAY,eAAe,eAAe;AAAA;AAE/F,eAAK,eAAe,WAAW,WAAW,WAAW,iBAAiB;AACtE,mBAAS,KAAK,WAAW,UAAU;AACjC,gBAAI,WAAW,SAAS,eAAe,IAAI;AACzC,kBAAI,MAAM,WAAW,SAAS;AAC9B,kBAAI,IAAI,aAAa;AACnB,qBAAK,cAAc,KAAK,WAAW,kBAAkB,IAAI;AAAA;AAAA;AAAA;AAAA;AAKjE,mBAAW,gBAAgB;AAAA;AAAA;AAAA,KAG9B;AAAA,IACD,KAAK;AAAA,IACL,OAAO,0BAA0B,UAAU;AACzC,UAAI,SAAS,YAAY,SAAS,GAAG;AACnC,aAAK,iBAAiB,UAAU,KAAK;AAAA,aAChC;AACL,aAAK,oBAAoB,UAAU,KAAK;AAAA;AAE1C,UAAI,SAAS,UAAU;AACrB,aAAK,iBAAiB,UAAU,KAAK;AAAA,aAChC;AACL,aAAK,oBAAoB,UAAU,KAAK;AAAA;AAAA;AAAA,KAG3C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,wBAAwB,YAAY,MAAM,MAAM;AACrD,aAAO,WAAW,IAAI,YAAY,MAAM;AAAA;AAAA,KAEzC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,WAAW,SAAS,iBAAiB;AAC9D,gBAAU,WAAW;AACrB,UAAI,CAAC,iBAAiB;AACpB,YAAI,iBAAiB,qBAAqB,WAAW,UAAU,UAAU,UAAU;AACnF,aAAK,WAAW;AAAA;AAAA;AAAA,KAGnB;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,WAAW;AACrC,UAAI,IAAI;AACR,eAAS,IAAI,GAAG,IAAI,UAAU,SAAS,QAAQ,KAAK;AAClD,aAAK,UAAU,SAAS,GAAG,QAAQ,MAAM;AACzC,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA,EACP;AAEF,IAAI,mBAAmB;AACvB,qBAAqB,GAAG;AACtB,MAAI,IAAI,KAAK,MAAM,IACf,IAAI,KAAK,KAAK;AAClB,MAAI,IAAI,IAAI,kBAAkB;AAC5B,WAAO;AAAA,aACE,IAAI,IAAI,kBAAkB;AACnC,WAAO;AAAA;AAET,SAAO;AAAA;AAEN,IAAC,aAAa,SAAU,kBAAkB;AAC3C,YAAU,aAAY;AACtB,MAAI,SAAS,aAAa;AAC1B,uBAAoB,QAAQ;AAC1B,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM;AAC1B,oBAAgB,uBAAuB,QAAQ,QAAQ,YAAW;AAClE,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,MAAM;AACrD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,iBAAiB;AAChE,oBAAgB,uBAAuB,QAAQ,QAAQ;AACvD,UAAM,KAAK,OAAO;AAClB,UAAM,KAAK,OAAO;AAClB,UAAM,SAAS,OAAO;AACtB,UAAM,gBAAgB,OAAO;AAC7B,QAAI,OAAO,cAAc,OAAO,UAAU;AACxC,YAAM,aAAa,OAAO;AAC1B,YAAM,WAAW,OAAO;AACxB,YAAM,KAAK,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,MAAM;AACpD,YAAM,KAAK,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,MAAM;AACpD,YAAM,KAAK,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,MAAM;AACpD,YAAM,KAAK,MAAM,KAAK,MAAM,SAAS,KAAK,IAAI,MAAM;AAAA,WAC/C;AACL,YAAM,aAAa,MAAM,WAAW,MAAM,IAAI,MAAM;AACpD,YAAM,WAAW,MAAM,WAAW,MAAM,IAAI,MAAM;AAAA;AAEpD,QAAI,MAAM,WAAW,GAAG;AACtB,YAAM,YAAY;AAAA;AAEpB,QAAI,MAAM,aAAa,GAAG;AACxB,YAAM,cAAc;AAAA;AAEtB,QAAI,KAAK,MAAM,WAAW,MAAM,aAAa,MAAM,WAAW,SAAS,MAAM;AAC7E,UAAM,QAAQ,KAAK,IAAI,KAAK,MAAM;AAClC,QAAI,MAAM,eAAe;AACvB,YAAM,QAAQ,SAAS,MAAM;AAAA;AAE/B,UAAM,gBAAgB,IAAI,KAAK,KAAK,MAAM;AAC1C,UAAM,OAAO,MAAM,QAAQ;AAC3B,UAAM,SAAS,MAAM,gBAAgB,MAAM;AAC3C,UAAM,UAAU;AAAA,MACd,MAAM,MAAM,KAAK,MAAM;AAAA,MACvB,MAAM,MAAM,KAAK,MAAM;AAAA,MACvB,MAAM,MAAM,KAAK,MAAM;AAAA,MACvB,MAAM,MAAM,KAAK,MAAM;AAAA;AAEzB,WAAO;AAAA;AAET,eAAa,aAAY,CAAC;AAAA,IACxB,KAAK;AAAA,IACL,OAAO,oBAAoB,IAAI,IAAI;AACjC,aAAO,MAAM;AAAA,QACX,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA,SACP;AAAA,QACD,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA,KAGN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,+BAA+B,SAAS,UAAU;AACvD,UAAI,QAAQ,eAAe;AACzB,YAAI,KAAK,QAAQ,aAAa,QAAQ,WAAW,QAAQ,aAAa,SAAS,QAAQ,YACnF,IAAI,KAAK,IAAI,KAAK,QAAQ;AAC9B,eAAO,KAAK,IAAI;AAAA,aACX;AACL,YAAI,KAAK,QAAQ,WAAW,QAAQ,aAAa,QAAQ,WAAW,SAAS,QAAQ,UACjF,KAAK,KAAK,IAAI,KAAK,QAAQ;AAC/B,eAAO,QAAQ,aAAa,KAAK;AAAA;AAAA;AAAA,KAGpC;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB,gBAAgB;AACtC,UAAI,MAAM,KAAK,QAAQ,KAAK,KAAK,IAAI,GACjC,KAAK,KAAK,gBAAgB,IAAI;AAClC,aAAQ,kBAAiB,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK,MAAM,MAAM,OAAO,KAAK,SAAS,MAAM,KAAK,SAAS,QAAQ,MAAM,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK;AAAA;AAAA,KAEnK;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB;AAC1B,aAAO,KAAK;AAAA;AAAA,KAEb;AAAA,IACD,KAAK;AAAA,IACL,OAAO,qBAAqB,UAAU,UAAU;AAC9C,UAAI,aAAa,GAAG;AAClB,eAAO;AAAA,UACL,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,UACR,OAAO,KAAK;AAAA;AAAA,iBAEL,aAAa,GAAG;AACzB,eAAO;AAAA,UACL,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,UACR,OAAO,KAAK;AAAA;AAAA;AAGhB,UAAI,UAAU;AACZ,mBAAW,WAAW;AAAA;AAExB,UAAI,QAAQ,KAAK,sBAAsB,MAAM,WACzC,KAAK,KAAK,KAAK,KAAK,SAAS,KAAK,IAAI,QACtC,KAAK,KAAK,KAAK,KAAK,SAAS,KAAK,IAAI;AAC1C,aAAO;AAAA,QACL,GAAG,YAAY;AAAA,QACf,GAAG,YAAY;AAAA,QACf,OAAO;AAAA;AAAA;AAAA,KAGV;AAAA,IACD,KAAK;AAAA,IACL,OAAO,yBAAyB,UAAU,UAAU;AAClD,UAAI,IAAI,KAAK,YAAY,UAAU;AACnC,UAAI,IAAI,OAAO;AAAA,QACb,GAAG,KAAK;AAAA,QACR,GAAG,KAAK;AAAA,SACP;AACH,UAAI,CAAC,KAAK,iBAAkB,OAAM,YAAY,MAAM,YAAY;AAC9D,aAAK;AAAA;AAEP,aAAO;AAAA;AAAA,KAER;AAAA,IACD,KAAK;AAAA,IACL,OAAO,4BAA4B,UAAU,UAAU,UAAU;AAC/D,UAAI,IAAI,KAAK,YAAY,UAAU,WAC/B,UAAU,WAAW,KAAK,gBAAgB,IAAI,KAAK,IACnD,MAAM,KAAK,gBAAgB,KAAK,GAChC,aAAa,EAAE,QAAQ,MAAM,SAC7B,SAAS,KAAK,KAAK,KAAK,SAAS,KAAK,IAAI,aAC1C,SAAS,KAAK,KAAK,KAAK,SAAS,KAAK,IAAI;AAC9C,aAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA;AAAA;AAAA;AAIT,SAAO;AAAA,EACP;AACF,gBAAgB,YAAY,eAAe;AAE3C,IAAI,gBAAgB;AACpB,IAAI,iBAAiB;AACrB,IAAI,eAAe,SAAU,UAAU;AACrC,YAAU,eAAc;AACxB,MAAI,SAAS,aAAa;AAC1B,yBAAsB,UAAU,WAAW,GAAG;AAC5C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,WAAW;AAC/C,UAAM,WAAW;AACjB,UAAM,YAAY;AAClB,oBAAgB,uBAAuB,QAAQ,SAAS;AACxD,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,aAAa;AAC5D,oBAAgB,uBAAuB,QAAQ,YAAY;AAC3D,oBAAgB,uBAAuB,QAAQ,cAAc;AAC7D,oBAAgB,uBAAuB,QAAQ,QAAQ,cAAa;AACpE,oBAAgB,uBAAuB,QAAQ,oBAAoB;AACnE,QAAI,KAAK;AACT,UAAM,QAAQ,EAAE,SAAS;AACzB,UAAM,SAAS,EAAE,UAAU;AAC3B,UAAM,YAAa,GAAE,aAAa,KAAK,IAAI,KAAK;AAChD,UAAM,WAAW,EAAE,YAAY;AAC/B,UAAM,aAAa,EAAE,cAAc;AAAA,MACjC,eAAe;AAAA;AAEjB,UAAM,WAAW,EAAE,YAAY,OAAO,MAAM,WAAW,MAAM,QAAQ,EAAE,YAAY,EAAE,SAAS,KAAK,EAAE;AACrG,WAAO;AAAA;AAET,eAAa,eAAc,CAAC;AAAA,IAC1B,KAAK;AAAA,IACL,OAAO,cAAc,WAAW,6BAA6B,kBAAkB;AAC7E,UAAI,qBAAqB,mBAAmB;AAC1C,YAAI,YAAY;AAChB,YAAI,KAAK,KAAK,KAAK,MAAM;AACzB,YAAI,KAAK,WAAW,KAAK,KAAK,WAAW,GAAG;AAC1C,cAAI,UAAU,KAAK,WAAW,IAAI,IAAI;AACtC,gBAAM,UAAU,mBAAmB,SAAS,KAAK,UAAU;AAC3D,gBAAM,UAAU,mBAAmB,SAAS,KAAK,WAAW,KAAK,YAAY,KAAK,SAAS,GAAG;AAC9F,gBAAM,YAAY,KAAK,KAAK,KAAK;AAAA,mBACxB,KAAK,aAAa,GAAG;AAC9B,gBAAM,UAAU,YAAY,KAAK;AACjC,gBAAM,UAAU,mBAAmB,KAAK,UAAU,CAAC,KAAK;AACxD,gBAAM,YAAY,KAAK,KAAK,KAAK;AACjC,cAAI,KAAK,cAAc,IAAI;AACzB,gBAAI,IAAI;AACR,kBAAM;AACN,kBAAM;AAAA;AAAA,mBAEC,KAAK,aAAa,GAAG;AAC9B,gBAAM,UAAU,YAAY,KAAK;AACjC,gBAAM,UAAU,mBAAmB,KAAK,UAAU,KAAK;AACvD,gBAAM,YAAY,KAAK,KAAK,KAAK;AACjC,cAAI,KAAK,cAAc,IAAI;AACzB,gBAAI,KAAK;AACT,kBAAM;AACN,kBAAM;AAAA;AAAA,eAEH;AACL,gBAAM,UAAU,mBAAmB,KAAK,UAAU,KAAK,YAAY,KAAK,SAAS;AACjF,gBAAM,UAAU,YAAY,KAAK;AACjC,gBAAM,YAAY,KAAK,KAAK,KAAK;AAAA;AAEnC,eAAO,oBAAoB,KAAK,KAAK,KAAK;AAC1C,cAAM,YAAY,KAAK,KAAK,KAAK,WAAW,KAAK;AACjD,YAAI,IAAI;AAAA,UACN;AAAA,UACA;AAAA,UACA;AAAA,WAEE,SAAS,KAAK,WAAW,UAAU,4BAA4B,QAC/D,OAAO,KAAK,WAAW,QAAQ,4BAA4B,QAC3D,YAAY,KAAK,WAAW,eAAe,4BAA4B;AAC3E,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA,gBAAgB;AAAA,UAChB;AAAA,UACA;AAAA,UACA,MAAM,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG;AAAA,UACzC,MAAM,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG;AAAA,UACzC,MAAM,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG;AAAA,UACzC,MAAM,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA,KAI9C;AAAA,IACD,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAAA;AAAA;AAEhC,SAAO;AAAA,EACP;AACF,gBAAgB,cAAc,QAAQ;AACtC,wBAAwB,GAAG;AACzB,SAAO,EAAE,SAAS,aAAa;AAAA;AAEjC,eAAe,SAAS,aAAa,MAAM;AAE3C,IAAI,oBAAoB,SAAU,eAAe;AAC/C,YAAU,oBAAmB;AAC7B,MAAI,SAAS,aAAa;AAC1B,8BAA2B,UAAU,WAAW,GAAG;AACjD,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,WAAW;AAC/C,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,QAAQ,mBAAkB;AACzE,UAAM,WAAW;AACjB,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AACF,gBAAgB,mBAAmB,QAAQ;AAC3C,6BAA6B,GAAG;AAC9B,SAAO,EAAE,SAAS,kBAAkB;AAAA;AAEtC,eAAe,SAAS,cAAc;AAEtC,IAAI,iBAAiB,SAAU,eAAe;AAC5C,YAAU,iBAAgB;AAC1B,MAAI,SAAS,aAAa;AAC1B,2BAAwB,UAAU,WAAW,GAAG;AAC9C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,WAAW;AAC/C,UAAM,WAAW;AACjB,oBAAgB,uBAAuB,QAAQ,QAAQ,gBAAe;AACtE,UAAM,SAAS,MAAM,SAAS;AAC9B,UAAM,WAAW;AACjB,WAAO;AAAA;AAET,SAAO;AAAA,EACP;AACF,gBAAgB,gBAAgB,QAAQ;AACxC,0BAA0B,GAAG;AAC3B,SAAO,EAAE,SAAS,eAAe;AAAA;AAEnC,eAAe,SAAS,eAAe,MAAM;AAE7C,IAAI,gBAAgB,SAAU,UAAU;AACtC,YAAU,gBAAe;AACzB,MAAI,SAAS,aAAa;AAC1B,0BAAuB,UAAU,WAAW,GAAG;AAC7C,QAAI;AACJ,oBAAgB,MAAM;AACtB,YAAQ,OAAO,KAAK,MAAM,UAAU,WAAW;AAC/C,UAAM,WAAW;AACjB,UAAM,YAAY;AAClB,oBAAgB,uBAAuB,QAAQ,UAAU;AACzD,oBAAgB,uBAAuB,QAAQ,QAAQ,eAAc;AACrE,UAAM,SAAS,EAAE;AACjB,WAAO;AAAA;AAET,eAAa,gBAAe,CAAC;AAAA,IAC3B,KAAK;AAAA,IACL,OAAO,oBAAoB,GAAG;AAAA;AAAA;AAEhC,SAAO;AAAA,EACP;AACF,gBAAgB,eAAe,QAAQ;AACvC,yBAAyB,GAAG;AAC1B,SAAO,EAAE,SAAS,cAAc;AAAA;AAElC,eAAe,SAAS,UAAU;AAElC,gBAAgB,gBAAgB;AAChC,gBAAgB,gBAAgB;AAChC,gBAAgB,gBAAgB;AAChC,WAAW,SAAS,kBAAkB,MAAM;;"}